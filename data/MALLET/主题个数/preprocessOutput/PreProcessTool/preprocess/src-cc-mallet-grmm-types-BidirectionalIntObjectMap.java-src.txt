2006 univ dept part m l l e t m achine learning languag e toolkit 1 0 information see ` l e n e type io iterator mapping between mapping direction efficient assign consecutively starting zero map can delete map thus nev reuse p exactly alphabet m l l e t serialization magic ensure two alphabet desrializ same avoid memory leak because m l l e t alphabet retain memory forev bidirectional map serializable gnu trove t hash map map entry growth stop bidirectional map capacity map gnu trove t hash map capacity entry capacity bidirectional map 8 bidirectional map bidirectional map map gnu trove t hash map map clone entry entry clone growth stop growth stop 1 entry isn t present lookup index entry add present entry illegal argument can t lookup \ null\ alphabet ret index 1 map contain key entry ret index map get entry growth stop add present ret index entry size map put entry ret index entry add entry ret index lookup index entry lookup index entry lookup index entry get index entry contain entry alphabet runtime type runtime type large enough hold everyth alphabet entry tt obj tt tt ret lookup index obj obj tt entry xxx disable iterator iterator iterator entry iterator lookup index ret index length 0 index length i++ ret entry get index ret correspond index index look up buf store value alphabet runtime type same buf lookup index buf 0 index length i++ buf entry get index buf lookup index add present ret length 0 length i++ ret lookup index add present ret contain entry map contain entry size entry size stop growth growth stop start growth growth stop growth stop growth stop representation alphabet entry separate newline buffer sb buffer 0 entry size i++ sb append entry get sb append sb dump dump dump print stream dump print writer output stream writer dump print writer 0 entry size i++ + + entry get serialization serial u 1 u r r e n t e r l v e r o n 1 write output stream o write bidirectional map u r r e n t e r l v e r o n write entry size 0 entry size i++ write entry get write growth stop read input stream o found read size read entry size map gnu trove t hash map size 0 size i++ o read map put o entry add o growth stop read 