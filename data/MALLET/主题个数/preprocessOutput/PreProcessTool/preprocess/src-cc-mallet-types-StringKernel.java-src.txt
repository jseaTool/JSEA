2002 univ dept part m l l e t m achine learning languag e toolkit 1 0 information see ` l e n e aron culotta culotta culotta type link hash map compute similarity metric between two count subsequence character see lodhi et al kernel classification optionally cache previou kernel computation kernel link hash map word lowercase e f u l t n o r m l z e e gap penalty e f u l t l m 0 5 max length subsequence compare e f u l t l e n g t h 3 we cache previou kernel computation recommend e f u l t h e normalize lambda n cache norm we lowercase lam 0 1 penalty gap between match length max length subsequence compare cache we cache previou kernel computation recommend kernel norm lam length cache normalize norm lambda lam n length cache cache kernel e f u l t n o r m l z e e e f u l t l m e f u l t l e n g t h e f u l t h e kernel norm lam length norm lam length e f u l t h e compute normalize kernel between two 1 t 2 0 1 value 1 exact match k t compute self kernel hashmap s tt sstmp get tttmp get t sstmp s k n cache put s s sstmp value tttmp tt k t t n cache put t tt tt tttmp value st k t n normalize st math sqrt s tt k t n sum r 0 0 j k slen length tlen t length k n+1 slen+1 tlen+1 j 0 j slen+1 j++ k 0 k tlen+1 k++ k 0 k slen+1 + j 1 0 n i++ j 0 j slen j++ sum 0 0 k 0 k tlen k++ t k j sum + k k slen+1 +j k i+1 k+1 slen+1 +j+1 k i+1 k+1 slen+1 +j + sum r r + k i+1 tlen slen+1 +slen r command string1 command kernel string1 f l e command string2 command kernel string2 f l e two command command option command kernel command string1 string2 kernel between two command option process kernel sk kernel err kernel + string1 value + + string2 value + + sk k string1 value string2 value 