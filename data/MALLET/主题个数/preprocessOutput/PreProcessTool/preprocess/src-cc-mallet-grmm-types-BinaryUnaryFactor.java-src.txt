2006 univ dept part m l l e t m achine learning languag e toolkit 1 0 information see ` l e n e type random factor over continuou variable theta binary variable tt var tt tt phi x|theta tt pott fix theta tt phi tt 1 equal tt exp^ theta tt $ binary unary factor v 1 1 2007 10 22 21 37 44 $ binary unary factor factor parameteriz factor variable theta1 variable theta2 variable var binary variable binary unary factor variable var variable theta1 variable theta2 binary unary factor combine variable theta1 theta2 var theta1 theta1 theta2 theta2 var var var get num outcome 2 illegal argument discrete variable +var+ boltzmann unary binary theta1 continuou illegal argument parameter +theta1+ binary unary continuou theta2 continuou illegal argument parameter +theta2+ binary unary continuou var combine variable variable theta1 variable theta2 variable var var ret hash var ret add theta1 ret add theta2 ret add var ret factor extract max internal var var unsupport operation lookup value internal unsupport operation factor marginalize internal var var keep unsupport operation inefficient seldom call value assignment iterator assignment assn assignment factor tbl slice alpha assn tbl value assn factor slice alpha assignment assn th1 assn get theta1 th2 assn get theta2 val th1 th2 table factor var val factor normalize unsupport operation assignment sample random r unsupport operation log value assignment iterator math log value factor slice assignment assn factor alph slice slice alpha assn recursively slice assn some x alph slice slice assn dump buffer buf buffer buf append binary unary var buf append var buf append theta1 buf append theta1 buf append theta2 buf append theta2 buf append buf sum grad log factor q variable assignment assn factor q x q marginalize var assignment assn theta1 assn assignment var 0 theta2 assn assignment var 1 illegal argument attempt take gradient +this+ wrt +param+ factor depend variable q x value assn factor duplicate binary unary factor var theta1 theta2 almost equal factor p epsilon equal p na n equal o o o || get o get binary unary factor binary unary factor o theta1 ? theta1 equal theta1 theta1 theta2 ? theta2 equal theta2 theta2 var ? var equal var var hash theta1 ? theta1 hash 0 29 + theta2 ? theta2 hash 0 29 + var ? var hash 0 