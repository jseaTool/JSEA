2002 univ dept part m l l e t m achine learning languag e toolkit 1 0 information see ` l e n e type logging io pipe pipe type label logger machine learning training testing variou machine learning algorithm p instance contain four generic field predefin name target name hold represent `by instance target often label instance name identify name instance filename human readable sourceinformation original p predefin type change type instance process start off being name process link pipe pipe into represent content eventually feature vector holding index into link type alphabet holding word found up pipe field instance modifie most pipe modifie p generally speaking there two mode operation instance 1 instance get create pass pipe target name field generally training instance 2 instance get create raw value slot different instance call pip respective different pipe test instance p rath store link type alphabet instance we pipe instance variable because pipe also indicate come interpret alphabet p instance can immutable lock unlock instance mutable typically value four slot inside pipe p note construct instance pipe argument construct instance run pipe link type instance us add instance pipe input iterator see pipe see alphabet see instance mc callum instance serializable alphabet carry cloneable logger logger logger get logger instance get name input digest e g feature vector target output digest e g label name readable name e g m l analysis input reproducable e g enable re print w p o tag usually target information e g un annotate region property lock unusual circumstance you want instance sending pipe instance target name target target name name get get target target get name name get alphabet get alphabet alphabet carry alphabet carry get alphabet alphabet get target alphabet target alphabet carry alphabet carry target get alphabet alphabet get alphabet get alphabet alphabet get alphabet alphabet get alphabet get target alphabet alphabet match alphabet carry alphabet oas get alphabet oas length 2 oas 0 equal get alphabet oas 1 equal get alphabet lock lock lock lock un lock lock label get label target || target label label target illegal target label +target get get name lock illegal instance lock target t lock target t illegal instance lock label label l test isn t strictly some typo target || target label lock target l illegal instance lock name n lock name n illegal instance lock lock illegal instance lock clear instance shallow instance ret instance target name ret lock lock ret property property ret clone shallow setting getting property key value property add key value property numeric key value property add key value property deprecate get property property deprecate p lock property p illegal instance lock get key property ? property lookup key get numeric key property ? 0 0 property lookup key key property ? property key serialization instance serial u 1 u r r e n t e r l v e r o n 0 write output stream o write u r r e n t e r l v e r o n write write target write name write write property write lock read input stream o found read read target read name read read property read lock read 