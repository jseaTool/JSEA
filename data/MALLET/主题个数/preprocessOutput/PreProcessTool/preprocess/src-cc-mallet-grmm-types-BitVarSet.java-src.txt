2003 univ dept part m l l e t m achine learning languag e toolkit 1 0 information see ` l e n e type io o io input stream io output stream inference util clique us very little memory flyweight pattern owner supply alphabet vertex bit clique contain vertex alphabet mask bit charles sutton $ bit var v 1 1 2007 10 22 21 37 44 $ bit var var universe universe bit bitset create bit clique alphabet variable bitset say variable alphabet clique copy universe bit mask indicate variable bit var universe universe bit universe universe bitset vertex map + vertex map bit + bitset bit var universe universe collection universe universe bitset bit universe size iterator iterator next bitset universe get index variable next bit var var v old v old get 0 get universe v old add o idx universe get index variable o idx 1 unsupport operation bitset idx variable get idx map idx 0 0 map idx bitset next bit 0 idx i++ map idx bitset next bit map idx+1 map idx 1 index bound index +idx+ bit clique +idx+ +map idx+ +vertex map lookup map idx universe get map idx variable variable variable variable 0 f m e cache update clique cache weight 1 weight cache weight 1 weight 1 iterator iterator next variable var variable next weight var get num outcome cache weight weight cache weight assignment iterator assignment iterator dense assignment iterator size bitset cardinality empty bitset empty contain o bitset get universe get index variable o iterator iterator next idx iterator next idx bitset next bit 0 next next idx 0 next idx next idx next idx bitset next bit idx + 1 universe get idx unsupport operation removal bit clique iterator iterator iterator hash bitset hash contain collection bit var contain bit var contain efficient contain bit clique contain bit var bsc universe bsc universe bsc bitset next bit 0 0 bsc bitset next bit i+1 bitset get var intersection var bit var efficient bit var bsc bit var bit bit bit bitset clone bit bsc bitset bit var universe bit util intersection variable intersection between clique equivalent tt intersection bsc size tt efficient bsc clique intersect intersection size bit var bsc universe bsc universe size 0 bsc bitset next bit 0 0 bsc bitset next bit i+1 bitset get size++ size clear bitset clear label get label foo iterator iterator next variable var variable next foo foo + + var foo foo + foo label unsupport operation serialization garbage serial u 1 u r r e n t e r l v e r o n 1 write output stream o write write u r r e n t e r l v e r o n read input stream o found read read 