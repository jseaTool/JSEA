2002 univ dept part m l l e t m achine learning languag e toolkit 1 0 information see ` l e n e mc callum type test junit framework test junit framework test junit framework test suite io io o type dense vector type hash sparse vector type sparse vector util test hash sparse vector test test hash sparse vector name name dbl1 1 2 3 4 5 dbl2 1 1 5 2 1 1 dbl3 2 0 2 5 3 0 4 7 3 5 3 6 0 0 0 0 0 0 0 0 0 0 idx 3 5 7 13 15 hash sparse vector s1 hash sparse vector idx dbl1 dbl1 length dbl1 length hash sparse vector s2 hash sparse vector idx dbl2 dbl2 length dbl2 length sparse vector d1 sparse vector dbl3 check answer hash sparse vector an equal wrong location an length num location 0 num location i++ equal value incorrect location +i+ an value location 0 0 test plus equal hash sparse vector hash sparse vector s1 clone matrix plus equal sparse s2 2 0 check answer 3 5 7 6 7 hash sparse vector s2p hash sparse vector 13 0 8 plus equal sparse s2p 1 0 check answer 3 5 7 6 8 7 hash sparse vector s3p hash sparse vector 14 0 8 plus equal sparse s3p 1 0 check answer 3 5 7 6 8 7 verify unchang hash sparse vector s4 hash sparse vector 7 14 15 0 2 0 8 1 2 plus equal sparse s4 1 0 check answer 3 5 7 2 6 8 8 2 hash sparse vector s5 hash sparse vector 7 0 2 s5 plus equal sparse s1 0 s5 num location i++ equal 7 s5 index location equal 3 2 s5 value location 0 0 hash sparse vector s6 hash sparse vector 7 0 2 s6 plus equal sparse s1 3 5 0 s6 num location i++ equal 7 s6 index location equal 10 7 s6 value location 0 0 test plus equal clone s1 index vector hash sparse vector hash sparse vector s1 clone matrix zero plus equal sparse s1 plus equal sparse s2 2 0 check answer 3 5 7 6 7 test dot hash sparse vector t1 hash sparse vector 7 0 2 equal 0 6 t1 dot s1 0 00001 equal 0 6 s1 dot t1 0 00001 equal 19 0 s1 dot s2 0 00001 equal 19 0 s2 dot s1 0 00001 equal 11 9 s1 dot d1 0 00001 equal 10 1 s2 dot d1 0 00001 test increment value hash sparse vector hash sparse vector s1 clone matrix increment value 5 0 75 an 1 2 75 3 4 5 0 num location i++ value location an test value hash sparse vector hash sparse vector s1 clone matrix value 5 0 3 an 1 0 3 3 4 5 0 num location i++ value location an idx2 3 7 12 15 18 test binary vector hash sparse vector binary1 hash sparse vector idx idx length idx length hash sparse vector binary2 hash sparse vector idx2 idx2 length idx2 length equal 3 binary1 dot binary2 0 0001 equal 3 binary2 dot binary1 0 0001 equal 15 0 binary1 dot s1 0 0001 equal 15 0 s1 dot binary1 0 0001 equal 9 0 binary2 dot s1 0 0001 equal 9 0 s1 dot binary2 0 0001 hash sparse vector dbl vec hash sparse vector s1 clone matrix dbl vec plus equal sparse binary1 check answer dbl vec 2 3 4 5 6 hash sparse vector dbl vec2 hash sparse vector s1 clone matrix dbl vec2 plus equal sparse binary2 check answer dbl vec2 2 2 4 4 6 test clone matrix zero hash sparse vector hash sparse vector s1 clone matrix zero 0 num location i++ value location 0 0 index location idx test serializable write sparse vector s1 hash sparse vector s2 hash sparse vector test serializable clone via serialization s1 equal s1 num location s2 num location loc 0 loc s1 num location loc++ equal s1 value location loc s2 value location loc 0 001 test index2location getting screw up old v 1 3 instance de serialize test plus equal save o found hash sparse vector s1 hash sparse vector util read old sv hash sparse vector s2 hash sparse vector 1 1 0 s1 plus equal sparse s2 1 0 equal 1 0 s1 value 0 1e 5 equal 0 0 s1 value 1 1e 5 hash sparse vector cv 1 3 save save old sv below old sv test resource base type hash sv old s save old sv hash sparse vector sv hash sparse vector 0 2 1 0 2 0 sv index vector util write old sv sv test suite test suite test hash sparse vector up save old sv junit textui test runner run suite 