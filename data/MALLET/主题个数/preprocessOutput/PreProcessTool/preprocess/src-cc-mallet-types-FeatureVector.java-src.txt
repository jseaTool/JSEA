2002 univ dept part m l l e t m achine learning languag e toolkit 1 0 information see ` l e n e mc callum type hash map iterator logging io type alphabet type feature type vector logger subset link type alphabet element subset value subset represent link type sparse vector p sparse vector zero location vector feature vector location index entry alphabet feature vector p loop over element feature vector loop over consecutive between 0 location feature vector these location can cheaply index entry underlie alphabet entry value feature vector entry p sparse vector feature vector can sparse dense depend index specify construction feature vector dense mapping location index identity mapping p value element sparse vector feature vector can binary 0 0 1 0 depend specify contruction see sparse vector see alphabet mc callum feature vector sparse vector serializable alphabet carry logger logger logger get logger feature vector get name alphabet dictionary feature vector alphabet dict index value capacity size check index sort duplicate index value capacity size check index sort duplicate dictionary dict dense vector feature vector alphabet dict value value dictionary dict binary vector possibly dense feature index possibly sparse feature vector alphabet dict feature index value feature index value dictionary dict binary vector feature vector alphabet dict feature index feature index dictionary dict get index entry alphabet dict add present feat entry length 0 entry length i++ feat dict lookup index entry add present feat 1 illegal argument dictionary feat feature vector alphabet dict key value dict get index key dict value sort feature index feature f feat f feature index sort feat feat feature vector feature f binary f sort feature index binary dictionary alphabet f get alphabet feature vector feature f f feature vector alphabet dict pl binary grow alphabet dict pl binary grow alphabet dictionary dict feature vector alphabet dict pl binary dict pl binary index conjunction feature vector fv alphabet vocab conjunction fv value binary feature vector fv augmentable feature vector alphabet v fv get alphabet vocab augment v v size vocab size fv vocab size +v size + vocab size +new vocab size index fv index length conjunction length sort conjunction arraycopy fv index 0 index 0 fv index length size fv index length ci 0 0 fv index length i++ ci conjunction length conjunction ci fv index ci++ conjunction ci fv index j 0 j fv index length j++ conjunction ci fv index j index vocab lookup index feature get name v conjunction ci fv index j index vocab size 1 index % 3 0 logger info feature + vocab lookup index index 1 can 1 vocab growth stop index size++ index sort duplicate sort index 0 size 1 size i++ index 1 index j i+1 j size j++ index j 1 index j size ret size arraycopy index 0 ret 0 size ret index conjunction feature vector fv alphabet vocab feature selection f narrow feature selection f wide fv value binary feature vector fv augmentable feature vector alphabet v fv get alphabet vocab augment v v size vocab size fv vocab size +v size + vocab size +new vocab size length fv augmentable feature vector length augmentable feature vector fv size augmentable feature vector fv sort index length fv index length index length length arraycopy fv index 0 index 0 length size length ci 0 0 length i++ f narrow f narrow contain fv index j 0 j length j++ f wide || f wide contain fv index j fv index fv index j feature feature overlap v fv index fv index j index vocab lookup index feature get name v fv index fv index j index 1 can 1 vocab growth stop index size++ index sort duplicate sort index 0 size 1 size i++ index 1 index j i+1 j size j++ index j 1 index j size ret size arraycopy index 0 ret 0 size ret feature vector contain feature fv plus feature create making conjunction between feature conjunction feature feature vector feature vector fv alphabet vocab conjunction vocab index conjunction fv vocab conjunction feature vector feature vector fv alphabet vocab feature selection f narrow feature selection f wide vocab index conjunction fv vocab f narrow f wide construct feature vector select feature f have presumably compact dense alphabet feature vector feature vector feature vector fv alphabet vocab feature selection f f get alphabet fv dictionary fv index unsupport operation yet dense feature vector num location call ensure augmentable feature vector be compress fv num location fv num location index fv num location value feature vector binary fv value value index length size 0 index 0 index fv num location index++ f contain fv index index index size vocab lookup index fv dictionary lookup fv index index e e feature vector binary fv value value size fv value index size++ feature vector vocab index value size size xxx we need implement feature vector subclass constant matrix clone matrix feature vector alphabet dictionary index value constant matrix clone matrix zero value index feature vector dictionary value length index index length arraycopy index 0 index 0 index length feature vector dictionary index value length value length value length p l output feature vector simple format simp name curdoc printcount thread current thread dump stack buffer sb buffer feature vector dictionary +dictionary value feature vector value index length num location 0 index length i++ feature vector +i dictionary sb append +i+ feature vector +i+ index +indice sb append dictionary lookup index sb append +indice + sb append 1 0 force binary line sb append sb append feature vector value value length num location 0 value length i++ idx index ? index dictionary sb append +i+ sb append dictionary lookup idx sb append + idx + sb append curdoc + + idx sb append p l optionally count printcount sb append + value line sb append sb append sb str sb myfile name writer writer myfile append write str close o e err feature vector print line thread current thread dump stack buffer sb buffer feature vector dictionary +dictionary value feature vector value index length num location 0 index length i++ feature vector +i dictionary sb append +i+ feature vector +i+ index +indice sb append dictionary lookup index sb append +indice + sb append 1 0 force binary line sb append sb append feature vector value value length num location 0 value length i++ idx index ? index dictionary sb append +i+ sb append dictionary lookup idx sb append + idx + sb append sb append value line sb append sb append sb alphabet get alphabet dictionary alphabet get alphabet alphabet dictionary alphabet match alphabet carry dictionary equal get alphabet location entry dictionary illegal feature vector dictionary dictionary lookup index entry 0 1 location contain entry loc location entry loc 0 value location loc 0 value o loc location o loc 0 value location loc illegal argument +o+ key dictionary serialization serial u 1 u r r e n t e r l v e r o n 0 write output stream o write u r r e n t e r l v e r o n write dictionary read input stream o found read dictionary alphabet read 