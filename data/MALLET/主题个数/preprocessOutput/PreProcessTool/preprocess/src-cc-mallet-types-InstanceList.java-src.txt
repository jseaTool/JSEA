2002 univ dept part m l l e t m achine learning languag e toolkit 1 0 information see ` l e n e type io buffer input stream io io input stream io output stream io o io input stream io output stream io stream io serializable bit collection collection hash map iterator logging logger pipe feature sequence2 feature vector pipe noop pipe pipe pipe serial pipe pipe target2 label pipe sequence2 feature pipe iterator random iterator logger random machine learning instance typically training testing machine learning algorithm p instance be pass same link pipe pipe thus also share same target alphabet instance keep reference pipe two alphabet p most add instance instance add pipe input iterator pipe input iterator mapping source into instance processing pipe link type instance pull pipe input iterator instance instance run pipe resultant destructive modification saving instance usual instance transform pipe p instance also contain randomly generate list feature vector split list into overlapping subset useful test train split iterator validation see instance see pipe mc callum instance instance serializable iterable instance alphabet carry logger logger logger get logger instance get name hash map instance inst weight nev classifier trainer classifier feature selection perhap remove here there classifier trainer train instance feature selection feature selection feature selection feature selection label feature selection pipe pipe alphabet alphabet target alphabet target construct instance have capacity pipe typically instance instance go pipe instance add thru pipe instanace alphabet target alphabet pipe instance instance share these alphabet pipe pipe process instance via add thru pipe capacity capacity grow very useful perhap remove instance pipe pipe capacity capacity pipe pipe construct instance capacity 10 pipe typically instance instance go pipe instance add thru pipe instanace alphabet target alphabet pipe instance instance share these alphabet pipe pipe process instance via add thru pipe instance pipe pipe pipe 10 construct instance capacity 10 noop pipe infrequent circumstance instance typically processing contain vocabulary enter directly into instance creation random instance dirichlet multinomial p alphabet vocabulary instance field target alphabet vocabulary instance target instance alphabet alphabet alphabet target alphabet noop alphabet target alphabet 10 alphabet alphabet target alphabet target alphabet yet pipe pipe instance pipe instance carrier unsupport operation instance yet pipe + could happen calling instance add instance read resolve stream yet pipe serial u 1 pipe yet pipe yet pipe create pipe late first instance deprecate pipe nev you constructor instance yet pipe create consist randomly generate feature vector xxx perhap split these into utility instance random r generator random ness here dirichlet centroid alphabet centroid average alpha gaussian sum alpha centroid average alpha variance gaussian variance sum alpha feature vector size poisson lambda instance count poisson lambda name serial pipe pipe sequence2 feature feature sequence2 feature vector target2 label centroid print iterator instance it random iterator r centroid centroid average alpha centroid average alpha variance feature vector size poisson lambda instance count poisson lambda name add thru pipe it alphabet dict size size alphabet ret alphabet 0 size i++ ret lookup index feature +i ret name size size ret size 0 size i++ ret +i ret instance random r alphabet vocab name instance label r dirichlet vocab 2 0 30 0 10 instance label name instance random r vocab size num r dirichlet dict size vocab size 2 0 30 0 10 20 name size num instance shallow clone instance ret instance pipe size 0 size i++ ret add get inst weight ret inst weight ret inst weight hash map instance inst weight clone we really shallow these instance variables? akm 1 2008 ret feature selection feature selection ret label feature selection label feature selection ret pipe pipe ret alphabet alphabet ret target alphabet target alphabet ret ret target target ret clone shallow clone instance sub start instance clone empty start i++ add get instance sub proportion proportion 1 0 illegal argument proportion 1 0 instance instance clone shuffle random proportion size 0 proportion i++ add get add instance generate iterator passing instance pipe t o o rename add pip iterator instance add thru pipe iterator instance debug iterator instance pip instance iterator pipe iterator pip instance iterator next add pip instance iterator next add instance + pip instance iterator next get name gsc add instance add input instance passing instance pipe p several instance accumulate them list\ instance\ tt add thru pipe iterator instance tt instead add thru pipe instance inst add thru pipe single instance iterator inst construct append instance passing pipe assigning specify weight deprecate trainingset add thru pipe instance target name instead deprecate add target name instance weight instance inst instance target name iterator instance pipe iterator single instance iterator inst next add next instance weight construct append instance passing pipe weight 1 0 deprecate trainingset add instance target name instead deprecate add target name add target name 1 0 append instance passing instance instance pipe alphabet instance match alphabet instance add instance instance alphabet alphabet instance get alphabet target alphabet target alphabet instance get target alphabet alphabet alphabet match instance gsc alphabet alphabet instance get alphabet alphabet target alphabet instance get target alphabet builder sb builder sb append alphabet t match sb append instance + alphabet ? alphabet size + + target alphabet ? target alphabet size + alphabet get alphabet target alphabet get target alphabet sb append instance + alphabet ? alphabet size + + target alphabet ? target alphabet size + illegal argument sb illegal argument alphabet t match instance + instance get alphabet + instance +thi get alphabet instance get pipe pipe target processing instance target target instance target get once instance generally speaking instance shouldn t change there these you can instance unlock instance lock again instance lock add instance append instance passing instance pipe assigning specify weight add instance instance instance weight call add sure we correctly handle add first instance ret add instance ret some reason subclass instance refuse add instance sure rest ret instance weight 1 0 weight 1 0 everyth hash map inst weight inst weight hash map instance inst weight get instance illegal argument you cannot add same instance twice instance 1 0 weight + add instance shallow instead inst weight put instance instance weight ret instance instance inst weight inst weight instance instance index instance instance get index index instance add index instance element illegal yet instance index get index index instance instance instance instance add collection ? instance instance instance instance instance add instance add index collection ? instance illegal add collection support instance n clear clear inst weight clear retain instance variable deprecate seem too specialize behavior here intentionally add some noise into real random ratio fuchun peng sept 2003 noisify ratio instance instance size ratio 0 ratio 1 instance size size noise instance num ratio instance size random r random noise instance num + + instance size gsc parameteriz randnumlist noise instance num 0 noise instance num i++ rand index r next instance size + + rand index nn rand index randnumlist index nn 1 randnumlist add nn label alphabet target label alphabet pipe get target alphabet real rand num 0 0 randnumlist size i++ index randnumlist get value index randnumlist instance inst get index rand index r next target size + + index + + inst get target + + target lookup label rand index old target str inst get target target str target lookup label rand index old target str equal target str inst un lock inst target target lookup label rand index inst lock real rand num ++ + + index + + inst get target + + target lookup rand index instance index inst real ratio real rand num instance size real ratio instance clone empty clone empty into instance pipe precursor cloning subclass instance instance clone empty into instance ret ret inst weight t these because empty inst weight ? hash map instance inst weight clone xxx feature selection label cloned? note roost trainer currently depend cloning split ret feature selection feature selection ret label feature selection label feature selection ret ret target target ret alphabet alphabet ret target alphabet target alphabet ret shuffle random r collection shuffle r shuffle element among several small list proportion number sum 1 normalize correspond proportion element sublist split instance weight instance list r randomness shuffling instance element proportion instance split random r proportion instance shuffle shallow clone shuffle shuffle r shuffle split proportion instance split proportion split random current milli proportion chop into several sequential sublist proportion number correspond proportion element sublist already normalize sum 1 0 normalize here instance element proportion instance split proportion instance ret instance proportion length maxind proportion clone matrix ops normalize maxind 0 maxind length i++ ret clone empty note we passing feature selection here 0 maxind + maxind 1 0 maxind length i++ fill maxind high instance index go correspond instance maxind math rint maxind size 0 j 0 size i++ give slight bias toward putting extra instance last instance maxind j j ret length j++ ret j add get ret instance split count instance ret instance count length leave ununs instance sum count size idx 0 num 0 num count length num++ ret num clone empty 0 count num i++ ret num add get idx weights? idx++ ret pair list first pair contain m th element starting first second contain remain element instance split two modulo m instance ret instance 2 ret 0 clone empty ret 1 clone empty 0 size i++ % m 0 ret 0 add get ret 1 add get ret instance sample replacement random r num sample instance ret clone empty 0 num sample i++ ret add get r next size ret instance same size instance come random sampling replacement instance weight instance weight gary ghuang deprecate move instance util instance sample instance weight random r weight size 0 weight length i++ weight get instance weight sample weight r weight instance same size instance come random sampling replacement weight length weight same length instance weight gary ghuang instance sample weight random r weight weight length size illegal argument length weight vector equal instance size 0 clone empty sum weight 0 0 size i++ weight 0 illegal argument weight vector negative sum weight + weight sum weight 0 illegal argument weight sum positive value instance instance get pipe size probability size sum prob 0 0 size i++ sum prob + r next probability sum prob matrix ops time equal probability sum weight sum prob sure rounding didn t mess thing up probability size 1 sum weight sampling 0 0 sum prob 0 size size sum prob + weight size probability sum prob add get instance weight 1 a++ b++ instance get target instance get target target fuchun replace instance position index instance index instance instance get alphabet equal instance get alphabet get target alphabet equal instance get target alphabet index instance get instance weight instance instance inst weight value inst weight get instance value value 1 0 get instance weight index index size illegal argument index bound index +index+ size +thi size inst weight value inst weight get get index value value 1 0 instance weight index weight instance weight get index weight instance weight instance instance weight weight 1 0 explicitly store hash weight 1 0 weight hash we inst weight see there weight currently value inst weight get instance there value value 1 0 we re value || value value weight value inst weight instance initialize weight hash inst weight inst weight hash map instance add value override previou value inst weight put instance weight feature selection feature selection select feature select feature select feature get alphabet xxx we vocabulary here? see r f3 select feature get alphabet get alphabet illegal argument vocabulary match feature selection select feature feature selection get feature selection feature selection label feature selection feature selection select feature select feature 0 select feature length i++ select feature get alphabet get alphabet illegal argument vocabulary match label feature selection select feature feature selection get label feature selection label feature selection set target instance unlabel target instance instance instance target set instance often save memory raw have be place source 0 size i++ get clear construct instance deserializ value deserialize link instance load input stream ois equal ois input stream ois input stream buffer input stream input stream instance ilist instance ois read ois close ilist e e print stack trace illegal argument couldn t read instance +file save instance value serialize link save output stream ois equal ois output stream ois output stream output stream ois write ois close e e print stack trace illegal argument couldn t save instance +file serialization instance serial u 1 u r r e n t e r l v e r o n 1 write output stream o size write u r r e n t e r l v e r o n write inst weight write pipe read input stream o found size read inst weight hash map instance read pipe pipe read alphabet size 0 instance instance get 0 alphabet instance get alphabet pipe get alphabet alphabet pipe get alphabet target alphabet size 0 instance instance get 0 target alphabet instance get target alphabet pipe get target alphabet target alphabet pipe get target alphabet culotta validation iterator iterate over pair instance pair split into training testing nfold validation iterator iterator instance serializable nfold instance fold index nfold fold split instance into seed seed random split instance validation iterator nfold seed nfold 0 nfold + nfold nfold nfold index 0 fold instance nfold fraction 1 nfold proportion nfold 0 nfold i++ proportion fraction fold split random seed proportion validation iterator nfold nfold 1 next index nfold next training testing split pair list instance 0 large split training instance 1 small split testing instance next split instance ret instance 2 ret 0 instance pipe 0 fold length i++ index iterator instance it fold iterator it next ret 0 add it next ret 1 fold index shallow clone index++ ret next split fold you want training instance next split num train fold instance ret instance 2 ret 0 instance pipe ret 1 instance pipe train fold index index+num train fold test rest 0 fold length i++ foldno index + % fold length instance add num train fold add ret 0 add ret 1 iterator instance it fold foldno iterator it next add add it next index++ ret instance next next split unsupport operation pipe instance pass pipe get pipe pipe change pipe instance very dangerou extreme circumstance pipe pipe p alphabet alphabet match p pipe p alphabet mapping feature alphabet get alphabet alphabet pipe alphabet pipe get alphabet pipe || pipe get alphabet || pipe get alphabet alphabet alphabet alphabet mapping target output label alphabet get target alphabet target alphabet pipe target alphabet pipe get target alphabet pipe || pipe get target alphabet || pipe get target alphabet target alphabet target alphabet alphabet get alphabet get alphabet alphabet get alphabet alphabet get alphabet get target alphabet label vector target label size 0 get 0 get target label illegal target label count get target alphabet size 0 size i++ instance instance get label l label instance get target l add count get instance weight label vector label alphabet get target alphabet count validation iterator validation iterator nfold seed validation iterator nfold seed validation iterator validation iterator nfold validation iterator nfold t r g e t p r o p e r t y target m sure these best belong here hand easy find centrally locate here k m jan 2006 hide some label proportion hide random r 0 size i++ r next proportion hide instance instance get instance un lock instance get t r g e t p r o p e r t y instance get target instance t r g e t p r o p e r t y instance get target instance target instance lock hide some label bit b 0 size i++ b get instance instance get instance un lock instance get t r g e t p r o p e r t y instance get target instance t r g e t p r o p e r t y instance get target instance target instance lock unhide label 0 size i++ instance instance get t instance get target t instance get t r g e t p r o p e r t y instance un lock instance target t instance lock 