word net library j w n l see information 1 1 resource wn net didion jwnl j w n l net didion jwnl j w n l net didion jwnl index word net didion jwnl p o net didion jwnl pointer type net didion jwnl pointer util net didion jwnl pointer target node net didion jwnl pointer target tree net didion jwnl relationship asymmetric relationship net didion jwnl relationship relationship net didion jwnl relationship relationship finder net didion jwnl relationship relationship net didion jwnl dictionary dictionary io input stream iterator demonstrate functionality j w n l example u g e example property length 1 u g e exit 1 prop 0 initialize j w n l j w n l can j w n l initialize input stream prop example go ex ex print stack trace exit 1 index word o m p l h index word o g index word t index word f u n n y index word r o l l m o r p h p h r e running away example j w n l o m p l h dictionary get instance get index word p o v e r accomplish o g dictionary get instance get index word p o n o u n dog t dictionary get instance lookup index word p o n o u n cat f u n n y dictionary get instance lookup index word p o j e t v e funny r o l l dictionary get instance lookup index word p o j e t v e droll go j w n l demonstrate morphological analysis m o r p h p h r e demonstrate operation o m p l h demonstrate tree operation o g demonstrate asymmetric relationship operation o g t demonstrate symmetric relationship operation f u n n y r o l l demonstrate morphological analysis phrase j w n l running away hard because involve two word join hyphen word stem we both hyphen stem running we get entry word net base \ + phrase + \ + dictionary get instance lookup index word p o v e r phrase demonstrate operation index word word j w n l get hypernym parent first sense var word var pointer target node hypernym pointer util get instance get hypernym word get sense 1 hypernym \ + word get lemma + \ hypernym print demonstrate tree operation index word word j w n l get hyponym child first sense var word var pointer target tree hyponym pointer util get instance get hyponym tree word get sense 1 hyponym \ + word get lemma + \ hyponym print demonstrate asymmetric relationship operation index word start index word j w n l find relationship between first sense var start var first sense var var relationship relationship finder get instance find relationship start get sense 1 get sense 1 pointer type h y p e r n y m hypernym relationship between \ + start get lemma + \ \ + get lemma + \ iterator itr iterator itr next relationship itr next get node print parent index + asymmetric relationship get 0 get parent index depth + relationship get 0 get depth demonstrate symmetric relationship operation index word start index word j w n l find synonym var start var var var relationship relationship finder get instance find relationship start get sense 1 get sense 1 pointer type m l r t o synonym relationship between \ + start get lemma + \ \ + get lemma + \ iterator itr iterator itr next relationship itr next get node print depth + relationship get 0 get depth 