pipe collection iterator pipe iterator empty instance iterator type instance pipe rule evaluate predicate pipe first call call pipe ignore call pipe get instance iterator until produce instance word able call next pipe often produce instance you very careful none iterator pipe rule buffer instance word they shouldn t call next pre gather instance they they themselve t consume process immediately instance be process some constituent pipe could get buffer process mc callum deprecate yet complete seem quite dangerou prone branching pipe pipe pipe pipe branching pipe pipe pipe branching pipe pipe pipe pipe pipe pipe length 0 pipe length i++ pipe add pipe branching pipe collection pipe pipe pipe pipe pipe peek instance iterator iterator instance iterator instance instance next instance peek instance iterator iterator instance next next instance peek next next instance next next instance next instance next next instance instance next next instance instance tmp next instance next instance tmp next illegal iterator instance support gate keeping instance iterator iterator instance peek instance iterator pipe testing pipe gate keeping instance iterator peek instance iterator pipe testing pipe testing pipe testing pipe instance next sure instance we be suppose skip testing pipe precondition peek next next next next testing pipe precondition peek next illegal iterator instance support branching instance iterator iterator instance peek instance iterator iterator instance iterator branching instance iterator peek instance iterator peek instance iterator iterator iterator instance pipe size pipe p pipe iterator add gate keeping instance iterator p next next instance next instance input peek next 0 pipe size i++ pipe get precondition input iterator get next illegal next instance satisfy none branch precondition link pipe process link instance going iterator pipe get pipe iterator instance get iterator illegal iterator instance support iterator instance iterator iterator instance pipe size 0 iterator instance ret pipe get 0 iterator 1 pipe size i++ ret pipe get iterator ret ret test branching pipe pipe sequence2 \\w skip instance inst inst 