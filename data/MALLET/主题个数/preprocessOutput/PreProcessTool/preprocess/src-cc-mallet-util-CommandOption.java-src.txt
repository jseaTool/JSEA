2002 univ dept part m l l e t m achine learning languag e toolkit 1 0 information see ` l e n e mc callum io reflect invocation target reflect bsh interpreter command bsh interpreter interpreter map command own hash map class2option hash map owner name argument eg input name name argument type eg t r u e| f l e f l e name type argument present type shortdoc longdoc full name command get process we just value command owner name name type shortdoc longdoc owner owner name name name name type type shortdoc shortdoc longdoc longdoc p owner get full name p ? p + name interpreter interpreter bsh interpreter owner command command option command class2option get owner option option command class2option put owner option option add deprecate command owner name name type shortdoc owner name name type shortdoc give command opportunity process index th argument next unprocess index process index name + processing + index length 0 index index + + index there anyth process? index length || index || index length 2 || index 0 || index 1 index determine what command name opt full name index substring 2 dot index opt full name last index opt name opt full name command prefix dot index 1 opt name opt full name substring 0 dot index owner get owner get end opt name index opt name opt full name substring dot index+1 name match name command option? name equal opt name index we now determine command correct index++ length index index length 2 || index 0 index 1 index parse index illegal argument miss argument + opt name xxx parallel behavior parse parse index xxx index++ index bsh interpreter get interpreter interpreter process owner command option command class2option get owner option illegal argument command option register +own option process get owner command option command class2option get owner option illegal argument command option register +own option summary owner summary command option command class2option get owner option illegal argument command register +own option summary summary get full name full name get name name value value command match process argument call command match argument simply call parse index+1 unles index negative call parse index parse index index 0 parse index parse index index+1 parse override subclass command call post parse command can provide command can merge into list provide command get command print value owner command option command class2option get owner 0 option size i++ command option get command get name + + value option hash map map summary summary option map hash map summary summary add command help t r u e| f l e print command line usage information + give argument t r u e longer post parse command print usage value exit 1 add command prefix j v o e you want run interpret note + interpret modification unlike some option + you need create add command config f l e read command value post parse command read value summary command option summary add option summary summary size option size command get command index command option get index add command opt option add opt map put opt get full name opt add command opt 0 opt length i++ add opt add command opt 0 opt size i++ add opt get command add owner command option command class2option get owner option illegal argument command option register +own add option load configuration information filename end xml interpret xml configuration interpret config eg key value line note can latin 1 en u character xml can u t f 8 read io configuration property property property configuration get name end xml property load xml input stream configuration property load input stream configuration enumeration key property name key element key key next element value property get key split \\s+ found value 0 option size i++ command command option get name equal key found value parse value 0 e err unable process configuration + e get message parse process command line option sub occur first recognize doesn t begin dash process index 0 index length index index 0 option size i++ command o command option get index o process index index index o post parse index index command option have chance index th none them print usage illegal argument unrecogniz + index + +arg index index index 0 process option index 0 index length index index 0 option size i++ command o command option get index o process index index index o post parse index index index length index length 1 index 0 index 1 print usage illegal argument unrecogniz +arg index index index index length print usage print doc xxx fix nice formatting late err summary 0 option size i++ command o command option get err + o name + + o name + + o shortdoc o longdoc print doc err +o longdoc err +o value log option logging logger logger 0 option size i++ command o command option get logger info o name+ +o value command value value owner name name value shortdoc longdoc owner name name shortdoc longdoc value value value value value parse || equal ignore || equal 1 value equal ignore || equal 0 value illegal argument true|false|0|1 instead found +arg value value value value command value value owner name name value shortdoc longdoc owner name name shortdoc longdoc value value value value value parse value parse value value value value command value value owner name name value shortdoc longdoc owner name name shortdoc longdoc value value value value value parse elt split value elt length 0 elt length i++ value parse elt value buffer buffer sep 0 value length i++ append sep append value sep value buffer buffer sep 0 value length i++ append sep append value sep command value value owner name name value shortdoc longdoc owner name name shortdoc longdoc value value value value value parse value parse value value value value command value value owner name name value shortdoc longdoc owner name name shortdoc longdoc value value value value value parse elt split value elt length 0 elt length i++ value parse elt value buffer buffer sep 0 value length i++ append sep append value sep value buffer buffer sep 0 value length i++ append sep append value sep command value value owner name name value shortdoc longdoc owner name name shortdoc longdoc value value value value value parse value value value value value space command value value space owner name name value shortdoc longdoc owner name name shortdoc longdoc value value value value value parse index count 0 value index length index length 2 || index 0 index 1 count++ old value value value count old value arraycopy old value 0 value 0 old value length value count 1 index index++ index value value buffer sb buffer 0 value length i++ sb append value value length 1 sb append sb value value val 0 value length i++ val + value + val command io value value owner name name io value shortdoc longdoc owner name name io shortdoc longdoc value value value io value value parse value io value value ? value value value ? value value can take value command value value content content owner name name content index shortdoc longdoc owner name name io shortdoc longdoc value value content index content content buffer sb buffer 0 content length i++ sb append content sb append content sb value value parse value 0 content length i++ content equal value content value illegal argument unrecogniz argument \ +arg+ \ +content value value value value command value value owner name name value shortdoc longdoc owner name name shortdoc longdoc value value value value value parse value interpreter eval bsh eval e illegal argument interpreter eval +e value value ? value value value ? value bean bean owner name name def value shortdoc longdoc owner name name shortdoc longdoc value value def value value value parse parse someth max ent trainer gaussian prior variance 10 num iteration 20 + first split argument comma field split massage constructor name max ent max ent trainer max ent trainer call max ent trainer constructor name field 0 constructor name contain || constructor name contain contain pas though parse parse + constructor name + constructor call appropriate appear comma separate find we just build value get get find setter correspond parameter name 1 field length i++ name value pair field split parameter name name value pair 0 parameter value name value pair 1 todo check val present parameter value parameter value get interpreter eval parameter value bsh eval e illegal argument interpreter eval parameter + parameter name + +e found setter j 0 j length j++ + j + name + j get name + character upper parameter name 0 + parameter name substring 1 + character upper parameter name 0 + parameter name substring 1 equal j get name j get parameter type length 1 match + j get name ptype j get parameter type parameter type k 0 k ptype length k++ + k + + ptype k get name parameter parameter value argument type k 0 k parameter length k++ + k + + parameter k get get name j value parameter illegal access e illegal access + e illegal argument access calling setter +e invocation target e illegal target + e illegal argument target calling setter +e found setter found setter parameter + parameter name + found trainer + constructor name + constructor name j 0 j length j++ j get name start j get parameter type length 1 character lower j get name 3 + j get name substring 4 illegal argument setter found parameter + parameter name value value ? value value value ? value 