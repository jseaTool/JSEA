2002 univ dept part m l l e t m achine learning languag e toolkit 1 0 information see ` l e n e classify random logging type logger math ada boost can handle multi problem binary classification can also tt ada boost trainer tt p yoav freund robert e schapire experiment boost algorithm journal machine learning proceeding 13th international conference 1996 princeton schapire paper freund sc96b p z gary huang ghuang ghuang ada boost m2 trainer classifier trainer ada boost m2 logger logger logger get logger ada boost m2 trainer get name m n u m r e m p l n g t e r t o n 10 classifier trainer weak learner num round ada boost m2 classifier ada boost m2 get classifier classifier ada boost m2 trainer classifier trainer weak learner num round weak learner boostable illegal argument weak learner boostable num round 0 illegal argument round positive weak learner weak learner num round num round ada boost m2 trainer classifier trainer weak learner weak learner 100 boost resample instance weight ada boost m2 train instance training feature selection select feature training get feature selection select feature unsupport operation feature selection yet num training get target alphabet size num instance training size construct instance size num instance num 1 instance weight mislabel intance doesn t belong instance training inst instance training get pipe weight uniform weight num instance num 1 w 1 0 weight length fill weight w index weight length num 0 0 num instance i++ instance inst training get index inst get label get best index j 0 j num j++ j index training inst add inst 1 index num j num added++ random random random classifier weak learner classifier num round classifier weight num round exponent weight length inst index weight length 0 inst index length i++ inst index boost iteration round 0 round num round round++ logger info ada boost m2 trainer round + round+1 + begin sample instance weight vector train weak learner epsilon instance round training inst instance training inst get pipe resampl iteration 0 epsilon 0 sample index sample weight inst index weight random round training inst instance training inst get pipe sample index length 0 sample index length i++ instance inst training inst get sample index round training inst add inst 1 weak learner round weak learner train round training inst calculate pseudo weak learner 0 training inst size i++ instance inst training inst get classification weak learner round classify inst ht correct value correct label ht wrong get label value index epsilon + weight 1 ht correct + ht wrong exponent 1 + ht correct ht wrong epsilon 0 5 resampl iterations++ math almost equal epsilon 0 resampl iteration m n u m r e m p l n g t e r t o n stop boost pseudo 0 ignore weak classifier train round math almost equal epsilon 0 logger info ada boost m2 trainer stop + round+1 + + num round + pseudo + epsilon we first round weak classifier num classifier round 0 ? 1 round round 0 classifier weight 0 1 classifier weights2 num classifier classifier weak learners2 classifier num classifier arraycopy classifier weight 0 classifier weights2 0 num classifier arraycopy weak learner 0 weak learners2 0 num classifier 0 classifier weights2 length i++ logger info ada boost m2 trainer weight weak learner + + + classifier weights2 ada boost m2 training inst get pipe weak learners2 classifier weights2 beta epsilon 1 epsilon classifier weight round math log 1 0 beta update normalize weight sum 0 0 weight length i++ weight math pow beta 0 5 exponent sum + weight matrix ops time equal weight 1 0 sum logger info ada boost m2 trainer round + round+1 + finish pseudo + epsilon 0 classifier weight length i++ logger info ada boost m2 trainer weight weak learner + + + classifier weight classifier ada boost m2 training inst get pipe weak learner classifier weight classifier same size sample randomly chosen weight vector sample weight weight random random weight length length illegal argument length weight vector equal point sum weight 0 0 length i++ weight 0 illegal argument weight vector negative sum weight + weight sum weight 0 illegal argument weight sum positive value sample length probability length sum prob 0 0 length i++ sum prob + random next probability sum prob matrix ops time equal probability sum weight sum prob sure rounding didn t mess thing up probability length 1 sum weight sampling 0 0 sum prob 0 length length sum prob + weight length probability sum prob sample a++ b++ sample 