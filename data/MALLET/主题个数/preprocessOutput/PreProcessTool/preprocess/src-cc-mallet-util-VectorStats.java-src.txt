2003 univ dept part m l l e t m achine learning languag e toolkit 1 0 information see ` l e n e calculate statistic sparse vector sample instance jerod weinman h r e f weinman weinman iterator type gnu trove t hash vector stat o e sparse vector o e entry take union instance expect value o e instance o e implie vector binary value sparse vector instance instance instance || instance size 0 iterator instance instance itr instance iterator sparse vector v instance instance index max sparse index 1 max dense index 1 first we find union index instance t hash h index t hash instance get alphabet size instance itr next instance instance instance itr next v sparse vector instance get index v get index index h index add index index index length 1 max sparse index max sparse index index index length 1 dense v num location max dense index max dense index v num location 1 max dense index 1 dense vector be present max sparse index max dense index sparse vector be present they have great index dense vector we sparse vector add dense index 0 max dense index i++ h index add sparse index be present we t care since they nev have index exceed dense vector instance max dense index + 1 reaching statement implie we can sparse vector instance h index o e sparse vector o e entry dense index expect value o e instance o e implie vector binary value sparse vector instance instance num index sparse vector mv sparse vector num index instance mv o e sparse vector o e entry index expect value o e instance o e implie vector binary value sparse vector instance instance index vector index have zero nothing copy sort check duplicate gdruck fast sort index first sort index sparse vector mv sparse vector index index length gdruck fast sort index first instance mv sparse vector instance instance sparse vector vector instance || instance size 0 instance instance sparse vector v iterator instance instance itr instance iterator factor 1 0 instance size instance itr next instance instance instance itr next v sparse vector instance get vector plus equal sparse v factor vector o e sparse vector o e entry take union instance variance o e instance o e implie vector binary value unbias normaliz n 1 n sparse vector variance instance instance unbias variance instance instance unbias o e sparse vector o e entry take argument variance o e instance o e implie vector binary value unbias normaliz n 1 n sparse vector variance instance instance sparse vector unbias instance || instance size 0 factor 1 0 instance size unbias ? 1 0 0 0 factor + factor sparse vector v var x^2 n mu^2 n 1 sparse vector vv sparse vector clone matrix vv time equal sparse vv instance size factor iterator instance instance itr instance iterator instance instance instance itr next instance instance instance itr next v sparse vector sparse vector instance get clone matrix v time equal sparse v vv plus equal sparse v factor var + vv vv unbias variance sparse vector variance instance instance variance instance unbias variance instance have sparse vector variance instance instance sparse vector variance instance square root variance instance unbias normaliz variance n 1 n see variance sparse vector stddev instance instance sparse vector unbias instance size 0 sparse vector sv variance instance unbias dim sv num location val 0 dim i++ val sv value location sv value location math sqrt val sv square root unbias variance sparse vector stddev instance instance stddev instance square root variance unbias normaliz variance n 1 n see variance sparse vector stddev instance instance unbias stddev instance instance unbias square root unbias variance instance have sparse vector stddev instance instance sparse vector stddev instance 