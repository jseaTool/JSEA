2003 univ dept part m l l e t m achine learning languag e toolkit 1 0 information see ` l e n e type inference inferenc flop type gnu trove t gnu trove t utility contain utility dealing factor especially table factor create mar 17 2005 h r e f $ factor v 1 1 2007 10 22 21 37 44 $ factor p t normalize cpt table factor ptl variable var sum ptl num location fill sum n e g t v e n f n t y compute normalization factor neighbor assignment var neighbor hash var ptl var neighbor var assignment iterator ptl assignment iterator next advance assignment assn assignment assignment nbr assn assignment assn marginalize var idx nbr assn single index sum idx + ptl phi assn sum idx math sum log prob ptl log value assn sum idx normalize assignment iterator ptl assignment iterator next advance assignment assn assignment old val ptl log value assn old val ptl phi assn assignment nbr assn assignment assn marginalize var log z sum nbr assn single index ptl phi assn old val log z infinite old val infinite log z 0 0 0 ptl log value assn n e g t v e n f n t y ptl log value assn old val log z p t ptl var factor average factor ptl1 factor ptl2 weight complete hack table factor mptl1 table factor ptl1 table factor mptl2 table factor ptl2 table factor hacky mixture mptl1 mptl2 weight distance factor bel1 factor bel2 vs1 bel1 var vs2 bel2 var vs1 equal vs2 illegal argument attempt take distancebetween mismatch potential +bel1+ +bel2 dist 0 assignment iterator bel1 assignment iterator next assignment assn assignment dist + math ab bel1 value assn bel2 value assn advance dist table factor retain mass discrete factor ptl alpha idx ptl num location val ptl num location 0 idx length i++ idx ptl index location val ptl log value rank feature vector rfv rank feature vector alphabet idx val t idx t t val t mass n e g t v e n f n t y log alpha math log alpha rank 0 rank rfv num location rank++ idx rfv get index rank rank val rfv value idx mass math sum log prob mass val idx add idx val add val mass log alpha sz compute size ptl sparse matrixn m sparse matrixn sz idx val table factor table factor compute var ptl value m compute size factor nv var size sz nv 0 nv i++ variable var get variable sz var get num outcome sz variable compute var factor nv var size variable var variable nv 0 nv i++ variable var get variable var var var joint over two variable mutual information factor joint normalize over exactly two variable mutual inforamiton mutual information factor factor var v factor var v size 2 illegal argument factor size 2 factor marg1 factor marginalize v get 0 factor marg2 factor marginalize v get 1 0 iterator factor assignment iterator next assignment assn assignment next + factor value assn factor log value assn marg1 log value assn marg2 log value assn k l table factor f1 table factor f2 0 same var loc 0 loc f1 num location loc++ val1 f1 value location loc val2 f2 value f1 index location loc val1 1e 5 + val1 math log val1 val2 factor tt f alpha f1 + 1 alpha f2 tt factor mix table factor f1 table factor f2 alpha table factor hacky mixture f1 f2 alpha euclidean distance table factor f1 table factor f2 0 same var loc 0 loc f1 num location loc++ val1 f1 value location loc val2 f2 value f1 index location loc + val1 val2 val1 val2 math sqrt l1 distance table factor f1 table factor f2 0 same var loc 0 loc f1 num location loc++ val1 f1 value location loc val2 f2 value f1 index location loc + math ab val1 val2 adapter inferenc treat be factor inf inferenc compute marginal be call factor factor factor inferenc inf skeleton factor value assignment assn factor factor inf lookup marginal assn var factor value assn factor marginalize variable var inf lookup marginal hash var var factor marginalize collection var inf lookup marginal hash var var factor marginalize variable var inf lookup marginal hash var variable var factor marginalize variable var unsupport operation factor marginalize var varset unsupport operation var var unsupport operation variable discrete var factor fg var var v fg var vi 0 vi v size vi++ variable var v get vi var continuou var add var variable var variable var size variable continuou var factor fg var var v fg var vi 0 vi v size vi++ variable var v get vi var continuou var add var variable var variable var size corr factor factor factor var size 2 illegal argument corr factor size 2 +factor variable v0 factor var get 0 variable v1 factor var get 1 e y 0 0 assignment iterator factor assignment iterator next assignment assn assignment next val0 assn get v0 val1 assn get v1 e y + factor value assn val0 val1 e factor marginalize v0 e y factor marginalize v1 e y e e y factor factor factor var size 1 illegal argument factor size 1 +factor variable v0 factor var get 0 0 0 assignment iterator factor assignment iterator next assignment assn assignment next val0 assn get v0 + factor value assn val0 factor multiply collection factor factor first factor factor iterator next factor size 1 first duplicate get variable var v hash var iterator factor iterator next factor phi factor next v add phi var define over neighbor n o e factor first duplicate iterator factor iterator next factor phi factor next multiply phi dist linf table factor f1 table factor f2 sum1 f1 logsum sum2 f2 logsum matrix m1 f1 get log value matrix matrix m2 f2 get log value matrix matrix dist linf m1 m2 dist value linf table factor f1 table factor f2 sum1 f1 logsum sum2 f2 logsum matrix m1 f1 get value matrix matrix m2 f2 get value matrix matrix dist linf m1 m2 matrix dist linf matrix m1 matrix m2 max 0 nl1 m1 single size nl2 m2 single size nl1 nl2 p o t v e n f n t y l 0 l nl1 l++ val1 m1 single value l val2 m2 single value l diff val1 val2 ? val1 val2 val2 val1 max diff max ? diff max max range measure ihl et al log range table factor f1 table factor f2 min m v l u e max 0 matrix m1 f1 get log value matrix matrix m2 f2 get log value matrix nl1 m1 single size nl2 m2 single size nl1 nl2 p o t v e n f n t y l 0 l nl1 l++ val1 m1 single value l val2 m2 single value l diff val1 val2 ? val1 val2 val2 val1 max diff max ? diff max min diff min ? diff min max min 