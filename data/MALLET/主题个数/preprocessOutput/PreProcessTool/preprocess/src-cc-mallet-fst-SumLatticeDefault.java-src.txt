io o io input stream io output stream io serializable logging level logging logger transducer transducer transition iterator type dense vector type label alphabet type label vector type matrix ops type logger full dynamic programming forward backward sum lattice algorithm sum lattice sum lattice logger logger logger get logger sum lattice get name logger level level f n e variable value correspondingly name instance variable can override sort name sum lattice lattice sum lattice transducer input save xi save xi ip input position op output position index transducer t total weight input output lattice node node index ip lattice length gamma index ip xi index ip j save save xi label vector labeling index op create output alphabet constructor ensure instance cannot easily create zero constructor sum lattice lattice node get lattice node ip index node ip index node ip index lattice node ip t get index node ip index sum lattice transducer tran input tran input transducer incrementor save xi sum lattice transducer tran input save xi tran input transducer incrementor save xi sum lattice transducer tran input transducer incrementor incrementor tran input incrementor save xi sum lattice transducer tran input output tran input output transducer incrementor save xi you pas output meaning lattice constrain match output sum lattice transducer tran input output transducer incrementor incrementor tran input output incrementor save xi sum lattice transducer tran input output transducer incrementor incrementor label alphabet output alphabet tran input output incrementor save xi output alphabet you pas output meaning lattice constrain match output sum lattice transducer tran input output transducer incrementor incrementor save xi tran input output incrementor save xi output alphabet label vector position output indicate probability over possible output index sum lattice transducer tran input output transducer incrementor incrementor save xi label alphabet output alphabet output || input size output size logger loggable level f n e logger fine starting lattice logger fine input ip 0 ip input size ip++ logger fine + input get ip logger fine output output logger fine op 0 op output size op++ logger fine + output get op logger fine initialize some structure t tran input input output output xxx very efficient lattice actually sparse especially large lattice length input size +1 num t num node lattice node lattice length num xxx yipe could get big someth sparse better? gamma lattice length num save xi xi lattice length num num output count output alphabet output count lattice length output alphabet size 0 num i++ ip 0 ip lattice length ip++ gamma ip transducer m p o l e w e g h t save xi j 0 j num j++ ip 0 ip lattice length ip++ xi ip j transducer m p o l e w e g h t forward pas logger fine starting foward pas least 0 num i++ weight t get get weight forward pas cost +initial cost weight transducer m p o l e w e g h t get lattice node 0 alpha weight node 0 alpha +node 0 alpha least least logger warning there starting ip 0 ip lattice length 1 ip++ 0 num i++ node ip || node ip alpha transducer m p o l e w e g h t xxx we up lot we could save one t get transition iterator it transition iterator input ip output ip logger loggable level f n e logger fine starting foward transition iteration + get name + input + input get ip + output + output ? output get ip it next destination it next logger loggable level f n e logger fine forward lattice input po +ip+ + get name + d +destination get name + lattice node destination node get lattice node ip+1 destination get index destination node output it get output transition weight it get weight logger loggable level f n e logger fine e f o r e update destination node alpha +destination node alpha destination node alpha transducer sum log prob destination node alpha node ip alpha + transition weight logger loggable level f n e logger fine transition weight +transition weight+ node +ip+ +i+ alpha +node ip alpha + destination node alpha +destination node alpha destination node alpha +destination node alpha logger loggable level f n e logger fine forward lattice ip 0 ip lattice length ip++ buffer sb buffer 0 num i++ sb append + node ip ? node ip alpha logger fine sb calculate total weight lattice normalizer total weight transducer m p o l e w e g h t 0 num i++ node lattice length 1 ending alpha +i+ +node lattice length 1 alpha ending beta +i+ +t get get weight total weight transducer sum log prob total weight node lattice length 1 alpha + t get get weight logger fine total weight +total weight total weight now unnormaliz weight entire lattice infinite weight just usefully avoid calling increment also relie fact gamma alpha beta value already initialize value reflect infinite weight t o o important fill beta we return? total weight transducer m p o l e w e g h t backward pas 0 num i++ node lattice length 1 t get node lattice length 1 beta get weight gamma lattice length 1 node lattice length 1 alpha + node lattice length 1 beta total weight incrementor p math gamma lattice length 1 gsc reducing 1e 10 1e 6 gsc remove na n check range check na n well p 0 0 p 1 0+1e 10 na n p p +p+ gamma +gamma lattice length 1 p 0 0 p 1 0+1e 6 p +p+ gamma +gamma lattice length 1 incrementor increment p ip lattice length 2 ip 0 ip 0 num i++ node ip || node ip alpha transducer m p o l e w e g h t note skip here alpha beta value won t correct since alpha infinite anyway shouldn t matter t get transition iterator it transition iterator input ip output ip it next destination it next logger loggable level f n e logger fine backward lattice input po +ip+ + get name + d +destination get name + j destination get index lattice node destination node node ip+1 j destination node transition weight it get weight na n transition weight old beta node ip beta na n node ip beta node ip beta transducer sum log prob node ip beta destination node beta + transition weight na n node ip beta d beta +destination node beta+ tran +transition weight+ sum + destination node beta+transition weight + old beta +old beta xi node ip alpha + transition weight + node ip+1 j beta total weight save xi xi ip j xi na n node ip alpha na n transition weight na n node ip+1 j beta na n total weight incrementor || output alphabet p math xi gsc reducing 1e 10 1e 6 gsc remove na n check range check na n well p 0 0 p 1 0+1e 10 na n p xi +ip+ +i+ +j+ +xi p 0 0 p 1 0+1e 6 p +p+ xi +ip+ +i+ +j+ +xi incrementor incrementor increment transition it p output alphabet output index output alphabet lookup index it get output output index 0 xxx ip op output count ip output index + p r f lattice output count +ip+ +output index+ + +p gamma ip node ip alpha + node ip beta total weight incrementor 0 num i++ p math gamma 0 gsc reducing 1e 10 1e 6 gsc remove na n check range check na n well p 0 0 p 1 0+1e 10 na n p p +p p 0 0 p 1 0+1e 6 p +p incrementor increment t get p output alphabet labeling label vector lattice length ip lattice length 2 ip 0 ip math ab 1 0 matrix ops sum output count ip 0 000001 labeling ip label vector output alphabet output count ip logger loggable level f n e logger fine lattice ip 0 ip lattice length ip++ buffer sb buffer 0 num i++ sb append +gamma ip logger fine sb get xi xi get gamma gamma get total weight na n total weight total weight get gamma weight input position gamma input position get index get gamma weight input position index gamma input position index get gamma probability input position math gamma input position get index get gamma probability input position index math gamma input position index get xi probability ip s1 s2 xi illegal xi be save s1 get index j s2 get index math xi ip j get xi weight ip s1 s2 xi illegal xi be save s1 get index j s2 get index xi ip j length lattice length get input input get alpha ip lattice node node get lattice node ip get index node alpha get beta ip lattice node node get lattice node ip get index node beta label vector get label position output position labeling labeling output position transducer get transducer t container some information about input position lattice node input position output position really until we deal asymmetric epsilon output alpha transducer m p o l e w e g h t beta transducer m p o l e w e g h t lattice node input position input position input position alpha transducer m p o l e w e g h t xxx check factory sum lattice factory serializable sum lattice sum lattice transducer tran input output transducer incrementor incrementor save xi label alphabet output alphabet sum lattice tran input output incrementor save xi output alphabet serial u 1 u r r e n t e r l v e r o n 1 write output stream o write u r r e n t e r l v e r o n read input stream o found read 