java lang object nanoxml xml element xml element java lang object n a n o xml m a j o r v e r s i o n n a n o xml m i n o r v e r s i o n xml element xml element java util hash map nbsp entity xml element nbsp skip leading whitespace xml element java util hash map nbsp entity nbsp skip leading whitespace xml element java util hash map nbsp entity nbsp skip leading whitespace nbsp ignore xml element java util hash map nbsp entity nbsp skip leading whitespace nbsp fill basic conversion table nbsp ignore xml element java util hash map nbsp entity nbsp skip leading whitespace nbsp fill basic conversion table nbsp ignore nbsp encode unicode character add child xml element nbsp child set attribute java lang string nbsp name java lang object nbsp value set attribute java lang string nbsp name nbsp value set attribute java lang string nbsp name nbsp value count child java util iterator enumerate attribute name java util iterator iterate child java util array list get child java lang string get content get line nr java lang object get attribute java lang string nbsp name java lang object get attribute java lang string nbsp name java lang object nbsp value java lang object get attribute java lang string nbsp name java util map nbsp value set java lang string nbsp key nbsp allow literal java lang string get string attribute java lang string nbsp name java lang string get string attribute java lang string nbsp name java lang string nbsp value java lang string get string attribute java lang string nbsp name java util hash map nbsp value set java lang string nbsp key nbsp allow literal get attribute java lang string nbsp name get attribute java lang string nbsp name nbsp value get attribute java lang string nbsp name nbsp min nbsp max nbsp value get attribute java lang string nbsp name java util hash map nbsp value set java lang string nbsp key nbsp allow literal number get attribute java lang string nbsp name get attribute java lang string nbsp name nbsp value get attribute java lang string nbsp name java util hash map nbsp value set java lang string nbsp key nbsp allow literal number get attribute java lang string nbsp name java lang string nbsp true value java lang string nbsp false value nbsp value get attribute java lang string nbsp name nbsp value java lang string get name parse from reader java io reader nbsp reader java io i o exception xml parse exception parse from reader java io reader nbsp reader nbsp starting line nr java io i o exception xml parse exception parse string java lang string nbsp string xml parse exception parse string java lang string nbsp string nbsp offset xml parse exception parse string java lang string nbsp string nbsp offset nbsp end xml parse exception parse string java lang string nbsp string nbsp offset nbsp end nbsp starting line nr xml parse exception parse array nbsp input nbsp offset nbsp end xml parse exception parse array nbsp input nbsp offset nbsp end nbsp starting line nr xml parse exception remove child xml element nbsp child remove attribute java lang string nbsp name xml element create element java lang string nbsp name xml element create element set content java lang string nbsp content set name java lang string nbsp name java lang string to string write java io writer nbsp writer java io i o exception print java io print writer nbsp writer print java io print writer nbsp writer nbsp indent write encode java io writer nbsp writer java lang string nbsp str java io i o exception scan identifier java lang string buffer nbsp result java io i o exception scan whitespace java io i o exception scan whitespace java lang string buffer nbsp result java io i o exception scan string java lang string buffer nbsp string java io i o exception scan p c data java lang string buffer nbsp data java io i o exception check c d a t a java lang string buffer nbsp buf java io i o exception skip comment java io i o exception skip special tag nbsp bracket level java io i o exception check literal java lang string nbsp literal java io i o exception read java io i o exception scan element xml element nbsp elt java io i o exception resolve entity java lang string buffer nbsp buf java io i o exception unread nbsp ch xml parse exception invalid value set java lang string nbsp name xml parse exception invalid value java lang string nbsp name java lang string nbsp value xml parse exception unexpect end of data xml parse exception syntax error java lang string nbsp context xml parse exception expect input java lang string nbsp set xml parse exception unknown entity java lang string nbsp name xml element java lang object parse xml data you can parse xml data using the following code xml element xml xml element file reader reader file reader filename xml xml parse from reader reader retrieve attribute you can enumerate the attribute of an element using the method enumerate attribute name the attribute value can be retrieve using the method get string attribute the following example show how to list the attribute of an element xml element element iterator it element get attribute name it ha next nbsp nbsp nbsp nbsp string key string it next nbsp nbsp nbsp nbsp string value element get string attribute key nbsp nbsp nbsp nbsp system out println key + + value retrieve child element you can enumerate the child of an element using iterate child the number of child iterator can be retrieve using count child element contain character data an iterator contain character data like in the following example the title you can retrieve that data using the method get content subclass xml element when subclass xml element you need to override the method create element which ha to a copy of the receiver see also xml parse exception major version of nano xml with the same major and minor version are binary compatible with the same major version are source compatible the major version is different you may need to modify the client source code see also n a n o xml m i n o r v e r s i o n constant field value see also n a n o xml m i n o r v e r s i o n constant field value minor version of nano xml with the same major and minor version are binary compatible with the same major version are source compatible the major version is different you may need to modify the client source code see also n a n o xml m a j o r v e r s i o n constant field value see also n a n o xml m a j o r v e r s i o n constant field value create and initializ a xml element calling the construction is equivalent to xml element hash map false true postcondition count child gt 0 iterate child gt empty enumeration enumerate property name gt empty enumeration get child gt empty vector get content gt get line nr gt 0 get name gt null see also xml element hash map xml element xml element hash map postcondition count child gt 0 iterate child gt empty enumeration enumerate property name gt empty enumeration get child gt empty vector get content gt get line nr gt 0 get name gt null see also xml element hash map xml element xml element hash map create and initializ a xml element calling the construction is equivalent to xml element entity false true parameter entity the entity conversion table precondition entity null postcondition count child gt 0 iterate child gt empty enumeration enumerate property name gt empty enumeration get child gt empty vector get content gt get line nr gt 0 get name gt null see also xml element xml element xml element hash map parameter entity the entity conversion table precondition entity null postcondition count child gt 0 iterate child gt empty enumeration enumerate property name gt empty enumeration get child gt empty vector get content gt get line nr gt 0 get name gt null see also xml element xml element xml element hash map create and initializ a xml element calling the construction is equivalent to xml element hash map skip leading whitespace true parameter skip leading whitespace true leading and trailing whitespace in p c d a t a content ha to be remove postcondition count child gt 0 iterate child gt empty enumeration enumerate property name gt empty enumeration get child gt empty vector get content gt get line nr gt 0 get name gt null see also xml element xml element hash map xml element hash map parameter skip leading whitespace true leading and trailing whitespace in p c d a t a content ha to be remove postcondition count child gt 0 iterate child gt empty enumeration enumerate property name gt empty enumeration get child gt empty vector get content gt get line nr gt 0 get name gt null see also xml element xml element hash map xml element hash map create and initializ a xml element calling the construction is equivalent to xml element entity skip leading whitespace true parameter entity the entity conversion table skip leading whitespace true leading and trailing whitespace in p c d a t a content ha to be remove precondition entity null postcondition count child gt 0 iterate child gt empty enumeration enumerate property name gt empty enumeration get child gt empty vector get content gt get line nr gt 0 get name gt null see also xml element xml element xml element hash map parameter entity the entity conversion table skip leading whitespace true leading and trailing whitespace in p c d a t a content ha to be remove precondition entity null postcondition count child gt 0 iterate child gt empty enumeration enumerate property name gt empty enumeration get child gt empty vector get content gt get line nr gt 0 get name gt null see also xml element xml element xml element hash map create and initializ a xml element parameter entity the entity conversion table skip leading whitespace true leading and trailing whitespace in p c d a t a content ha to be remove ignore true the of element and attribute name have to be ignore precondition entity null postcondition count child gt 0 iterate child gt empty enumeration enumerate property name gt empty enumeration get child gt empty vector get content gt get line nr gt 0 get name gt null see also xml element xml element xml element hash map xml element hash map parameter entity the entity conversion table skip leading whitespace true leading and trailing whitespace in p c d a t a content ha to be remove ignore true the of element and attribute name have to be ignore precondition entity null postcondition count child gt 0 iterate child gt empty enumeration enumerate property name gt empty enumeration get child gt empty vector get content gt get line nr gt 0 get name gt null see also xml element xml element xml element hash map xml element hash map create and initializ a xml element constructor should only be call from create element to create child iterator parameter entity the entity conversion table skip leading whitespace true leading and trailing whitespace in p c d a t a content ha to be remove fill basic conversion table true the basic entity need to be add to the entity list ignore true the of element and attribute name have to be ignore precondition entity null fill basic conversion table false then entity contain at least the following entry amp lt gt apo and quot postcondition count child gt 0 iterate child gt empty enumeration enumerate property name gt empty enumeration get child gt empty vector get content gt get line nr gt 0 get name gt null see also create element parameter entity the entity conversion table skip leading whitespace true leading and trailing whitespace in p c d a t a content ha to be remove fill basic conversion table true the basic entity need to be add to the entity list ignore true the of element and attribute name have to be ignore precondition entity null fill basic conversion table false then entity contain at least the following entry amp lt gt apo and quot postcondition count child gt 0 iterate child gt empty enumeration enumerate property name gt empty enumeration get child gt empty vector get content gt get line nr gt 0 get name gt null see also create element add a child element parameter child the child element to add precondition child null child get name null child doe not have a parent element postcondition count child gt old count child + 1 iterate child gt old iterate child + child get child gt old iterate child + child see also count child iterate child get child remove child xml element parameter child the child element to add precondition child null child get name null child doe not have a parent element postcondition count child gt old count child + 1 iterate child gt old iterate child + child get child gt old iterate child + child see also count child iterate child get child remove child xml element add or modifie an attribute parameter name the name of the attribute value the value of the attribute precondition name null name is a valid xml identifier value null postcondition enumerate attribute name gt old enumerate attribute name + name get attribute name gt value parameter name the name of the attribute value the value of the attribute precondition name null name is a valid xml identifier value null postcondition enumerate attribute name gt old enumerate attribute name + name get attribute name gt value add or modifie an attribute parameter name the name of the attribute value the value of the attribute precondition name null name is a valid xml identifier postcondition enumerate attribute name gt old enumerate attribute name + name get attribute name gt value parameter name the name of the attribute value the value of the attribute precondition name null name is a valid xml identifier postcondition enumerate attribute name gt old enumerate attribute name + name get attribute name gt value add or modifie an attribute parameter name the name of the attribute value the value of the attribute precondition name null name is a valid xml identifier postcondition enumerate attribute name gt old enumerate attribute name + name get attribute name gt value parameter name the name of the attribute value the value of the attribute precondition name null name is a valid xml identifier postcondition enumerate attribute name gt old enumerate attribute name + name get attribute name gt value the number of child iterator of the element postcondition result gt 0 see also add child xml element iterate child get child remove child xml element postcondition result gt 0 see also add child xml element iterate child get child remove child xml element enumerate the attribute name postcondition result null postcondition result null enumerate the child iterator postcondition result null postcondition result null the child iterator a a array list it is safe to modify array list postcondition result null see also add child xml element count child iterate child remove child xml element postcondition result null see also add child xml element count child iterate child remove child xml element the p c d a t a content of the object there is no such content null is see also set content string see also set content string the line nr in the source data on which the element is found method 0 there is no associate source data postcondition result gt 0 postcondition result gt 0 an attribute of the element the attribute doesn t exist null is parameter name the name of the attribute precondition name null name is a valid xml identifier parameter name the name of the attribute precondition name null name is a valid xml identifier an attribute of the element the attribute doesn t exist value is parameter name the name of the attribute value key to use the attribute is miss precondition name null name is a valid xml identifier parameter name the name of the attribute value key to use the attribute is miss precondition name null name is a valid xml identifier an attribute by looking up a key in a hashtable the attribute doesn t exist the value correspond to key is a an example value set contain the mapping one gt 1 and the element contain the attribute attr one then get attribute attr mapping key false 1 parameter name the name of the attribute value set hash map mapping key set iterator to value key key to use the attribute is miss allow literal true literal are valid precondition name null name is a valid xml identifier value set null the key set iterator of value set are string see also set attribute string object remove attribute string enumerate attribute name get attribute string get attribute string object parameter name the name of the attribute value set hash map mapping key set iterator to value key key to use the attribute is miss allow literal true literal are valid precondition name null name is a valid xml identifier value set null the key set iterator of value set are string see also set attribute string object remove attribute string enumerate attribute name get attribute string get attribute string object an attribute of the element the attribute doesn t exist null is parameter name the name of the attribute precondition name null name is a valid xml identifier see also set attribute string object remove attribute string enumerate attribute name get string attribute string string get string attribute string hash map string parameter name the name of the attribute precondition name null name is a valid xml identifier see also set attribute string object remove attribute string enumerate attribute name get string attribute string string get string attribute string hash map string an attribute of the element the attribute doesn t exist value is parameter name the name of the attribute value key to use the attribute is miss precondition name null name is a valid xml identifier see also set attribute string object remove attribute string enumerate attribute name get string attribute string get string attribute string hash map string parameter name the name of the attribute value key to use the attribute is miss precondition name null name is a valid xml identifier see also set attribute string object remove attribute string enumerate attribute name get string attribute string get string attribute string hash map string an attribute by looking up a key in a hashtable the attribute doesn t exist the value correspond to key is a an example value set contain the mapping one gt 1 and the element contain the attribute attr one then get attribute attr mapping key false 1 parameter name the name of the attribute value set hash map mapping key set iterator to value key key to use the attribute is miss allow literal true literal are valid precondition name null name is a valid xml identifier value set null the key set iterator of value set are string the value of value set are string see also set attribute string object remove attribute string enumerate attribute name get string attribute string get string attribute string string parameter name the name of the attribute value set hash map mapping key set iterator to value key key to use the attribute is miss allow literal true literal are valid precondition name null name is a valid xml identifier value set null the key set iterator of value set are string the value of value set are string see also set attribute string object remove attribute string enumerate attribute name get string attribute string get string attribute string string an attribute of the element the attribute doesn t exist 0 is parameter name the name of the attribute precondition name null name is a valid xml identifier see also set attribute string enumerate attribute name get attribute string get attribute string hash map string parameter name the name of the attribute precondition name null name is a valid xml identifier see also set attribute string enumerate attribute name get attribute string get attribute string hash map string an attribute of the element the attribute doesn t exist value is parameter name the name of the attribute value key to use the attribute is miss precondition name null name is a valid xml identifier see also set attribute string enumerate attribute name get attribute string get attribute string hash map string parameter name the name of the attribute value key to use the attribute is miss precondition name null name is a valid xml identifier see also set attribute string enumerate attribute name get attribute string get attribute string hash map string an attribute by looking up a key in a hashtable the attribute doesn t exist the value correspond to key is a an example value set contain the mapping one gt 1 and the element contain the attribute attr one then get attribute attr mapping key false 1 parameter name the name of the attribute value set hash map mapping key set iterator to value key key to use the attribute is miss allow literal number true literal number are valid precondition name null name is a valid xml identifier value set null the key set iterator of value set are string the value of value set are integer object key is eith null a key in value set or an integer see also set attribute string enumerate attribute name get attribute string get attribute string parameter name the name of the attribute value set hash map mapping key set iterator to value key key to use the attribute is miss allow literal number true literal number are valid precondition name null name is a valid xml identifier value set null the key set iterator of value set are string the value of value set are integer object key is eith null a key in value set or an integer see also set attribute string enumerate attribute name get attribute string get attribute string an attribute of the element the attribute doesn t exist 0 0 is parameter name the name of the attribute precondition name null name is a valid xml identifier see also set attribute string enumerate attribute name get attribute string get attribute string hash map string parameter name the name of the attribute precondition name null name is a valid xml identifier see also set attribute string enumerate attribute name get attribute string get attribute string hash map string an attribute of the element the attribute doesn t exist value is parameter name the name of the attribute value key to use the attribute is miss precondition name null name is a valid xml identifier see also set attribute string enumerate attribute name get attribute string get attribute string hash map string parameter name the name of the attribute value key to use the attribute is miss precondition name null name is a valid xml identifier see also set attribute string enumerate attribute name get attribute string get attribute string hash map string an attribute by looking up a key in a hashtable the attribute doesn t exist the value correspond to key is a an example value set contain the mapping one gt 1 0 and the element contain the attribute attr one then get attribute attr mapping key false 1 0 parameter name the name of the attribute value set hash map mapping key set iterator to value key key to use the attribute is miss allow literal number true literal number are valid precondition name null name is a valid xml identifier value set null the key set iterator of value set are string the value of value set are object key is eith null a key in value set or a see also set attribute string enumerate attribute name get attribute string get attribute string parameter name the name of the attribute value set hash map mapping key set iterator to value key key to use the attribute is miss allow literal number true literal number are valid precondition name null name is a valid xml identifier value set null the key set iterator of value set are string the value of value set are object key is eith null a key in value set or a see also set attribute string enumerate attribute name get attribute string get attribute string an attribute of the element the attribute doesn t exist value is the value of the attribute is equal to true value true is the value of the attribute is equal to false value false is the value doesn t match true value or false value an exception is parameter name the name of the attribute true value the value associate with true false value the value associate with true value value to use the attribute is miss precondition name null name is a valid xml identifier true value and false value are different string see also set attribute string object remove attribute string enumerate attribute name parameter name the name of the attribute true value the value associate with true false value the value associate with true value value to use the attribute is miss precondition name null name is a valid xml identifier true value and false value are different string see also set attribute string object remove attribute string enumerate attribute name the name of the element see also set name string see also set name string read one xml element from a java io reader and pars it parameter reader the reader from which to retrieve the xml data precondition reader null reader is not close postcondition the state of the receiver is update to reflect the xml element parse from the reader the reader point to the first character following the last gt character of the xml element java io i o exception an error occur reading the input xml parse exception an error occur parse the read data parameter reader the reader from which to retrieve the xml data precondition reader null reader is not close postcondition the state of the receiver is update to reflect the xml element parse from the reader the reader point to the first character following the last gt character of the xml element java io i o exception an error occur reading the input xml parse exception an error occur parse the read data read one xml element from a java io reader and pars it parameter reader the reader from which to retrieve the xml data starting line nr the line number of the first line in the data precondition reader null reader is not close postcondition the state of the receiver is update to reflect the xml element parse from the reader the reader point to the first character following the last gt character of the xml element java io i o exception an error occur reading the input xml parse exception an error occur parse the read data parameter reader the reader from which to retrieve the xml data starting line nr the line number of the first line in the data precondition reader null reader is not close postcondition the state of the receiver is update to reflect the xml element parse from the reader the reader point to the first character following the last gt character of the xml element java io i o exception an error occur reading the input xml parse exception an error occur parse the read data read one xml element from a string and pars it parameter string the reader from which to retrieve the xml data precondition string null string length gt 0 postcondition the state of the receiver is update to reflect the xml element parse from the reader xml parse exception an error occur parse the string parameter string the reader from which to retrieve the xml data precondition string null string length gt 0 postcondition the state of the receiver is update to reflect the xml element parse from the reader xml parse exception an error occur parse the string read one xml element from a string and pars it parameter string the reader from which to retrieve the xml data offset the first character in string to scan precondition string null offset lt string length offset gt 0 postcondition the state of the receiver is update to reflect the xml element parse from the reader xml parse exception an error occur parse the string parameter string the reader from which to retrieve the xml data offset the first character in string to scan precondition string null offset lt string length offset gt 0 postcondition the state of the receiver is update to reflect the xml element parse from the reader xml parse exception an error occur parse the string read one xml element from a string and pars it parameter string the reader from which to retrieve the xml data offset the first character in string to scan end the character where to stop scanning character is not scan precondition string null end lt string length offset lt end offset gt 0 postcondition the state of the receiver is update to reflect the xml element parse from the reader xml parse exception an error occur parse the string parameter string the reader from which to retrieve the xml data offset the first character in string to scan end the character where to stop scanning character is not scan precondition string null end lt string length offset lt end offset gt 0 postcondition the state of the receiver is update to reflect the xml element parse from the reader xml parse exception an error occur parse the string read one xml element from a string and pars it parameter string the reader from which to retrieve the xml data offset the first character in string to scan end the character where to stop scanning character is not scan starting line nr the line number of the first line in the data precondition string null end lt string length offset lt end offset gt 0 postcondition the state of the receiver is update to reflect the xml element parse from the reader xml parse exception an error occur parse the string parameter string the reader from which to retrieve the xml data offset the first character in string to scan end the character where to stop scanning character is not scan starting line nr the line number of the first line in the data precondition string null end lt string length offset lt end offset gt 0 postcondition the state of the receiver is update to reflect the xml element parse from the reader xml parse exception an error occur parse the string read one xml element from a array and pars it parameter input the reader from which to retrieve the xml data offset the first character in string to scan end the character where to stop scanning character is not scan precondition input null end lt input length offset lt end offset gt 0 postcondition the state of the receiver is update to reflect the xml element parse from the reader xml parse exception an error occur parse the string parameter input the reader from which to retrieve the xml data offset the first character in string to scan end the character where to stop scanning character is not scan precondition input null end lt input length offset lt end offset gt 0 postcondition the state of the receiver is update to reflect the xml element parse from the reader xml parse exception an error occur parse the string read one xml element from a array and pars it parameter input the reader from which to retrieve the xml data offset the first character in string to scan end the character where to stop scanning character is not scan starting line nr the line number of the first line in the data precondition input null end lt input length offset lt end offset gt 0 postcondition the state of the receiver is update to reflect the xml element parse from the reader xml parse exception an error occur parse the string parameter input the reader from which to retrieve the xml data offset the first character in string to scan end the character where to stop scanning character is not scan starting line nr the line number of the first line in the data precondition input null end lt input length offset lt end offset gt 0 postcondition the state of the receiver is update to reflect the xml element parse from the reader xml parse exception an error occur parse the string remove a child element parameter child the child element to remove precondition child null child is a child element of the receiver postcondition count child gt old count child 1 iterate child gt old iterate child child get child gt old iterate child child see also add child xml element count child iterate child get child parameter child the child element to remove precondition child null child is a child element of the receiver postcondition count child gt old count child 1 iterate child gt old iterate child child get child gt old iterate child child see also add child xml element count child iterate child get child remove an attribute parameter name the name of the attribute precondition name null name is a valid xml identifier postcondition enumerate attribute name gt old enumerate attribute name name get attribute name gt null parameter name the name of the attribute precondition name null name is a valid xml identifier postcondition enumerate attribute name gt old enumerate attribute name name get attribute name gt null create a similar xml element create a similar xml element you should override method when subclass xml element change the content string parameter content the content string parameter content the content string change the name of the element parameter name the name precondition name null name is a valid xml identifier see also get name parameter name the name precondition name null name is a valid xml identifier write the xml element to a string override to string in java lang object see also write writer override to string in java lang object see also write writer write the xml element to a writer parameter writer the writer to write the xml data to precondition writer null writer is not close java io i o exception the data could not be write to the writer see also to string parameter writer the writer to write the xml data to precondition writer null writer is not close write the xml element to a print writer and indent the element parameter writer the writer to write the xml data to precondition writer null writer is not close java io i o exception the data could not be write to the writer see also to string parameter writer the writer to write the xml data to precondition writer null writer is not close write the xml element to a print writer and indent the element parameter writer the writer to write the xml data to precondition writer null writer is not close indent the indentation java io i o exception the data could not be write to the writer see also to string parameter writer the writer to write the xml data to precondition writer null writer is not close write a string encode to a writer parameter writer the writer to write the xml data to str the string to write encode precondition writer null writer is not close str null java io i o exception parameter writer the writer to write the xml data to str the string to write encode precondition writer null writer is not close str null scan an identifier from the current reader the scan identifier is append to result parameter result the buffer in which the scan identifier will be put precondition result null the next character read from the reader is a valid first character of an xml identifier postcondition the next character read from the reader won t be an identifier character java io i o exception parameter result the buffer in which the scan identifier will be put precondition result null the next character read from the reader is a valid first character of an xml identifier postcondition the next character read from the reader won t be an identifier character java io i o exception method scan an identifier from the current reader the next character following the whitespace java io i o exception the next character following the whitespace java io i o exception method scan an identifier from the current reader the scan whitespace is append to result the next character following the whitespace precondition result null java io i o exception the next character following the whitespace precondition result null method scan a delimit string from the current reader the scan string without delimiter is append to string precondition string null the next read is the string delimit java io i o exception scan a p c d a t a element c d a t a section and entity are resolve the next lt is skip the scan data is append to data precondition data null java io i o exception scan a special tag and the tag is a c d a t a section append it content to buf precondition buf null the first lt ha already be read java io i o exception skip a comment precondition the first java io i o exception skip a special tag or comment parameter bracket level the number of open square bracket that have already be read precondition the first 0 java io i o exception parameter bracket level the number of open square bracket that have already be read precondition the first 0 scan the data literal text scanning stop when a character doe not match or after the complete text ha be check whichev come first parameter literal the literal to check precondition literal null java io i o exception parameter literal the literal to check precondition literal null read a character from a reader java io i o exception java io i o exception scan an xml element parameter elt the element that will contain the result precondition the first lt ha already be read elt null java io i o exception parameter elt the element that will contain the result precondition the first lt ha already be read elt null resolve an entity the name of the entity is read from the reader the value of the entity is append to buf parameter buf where to put the entity value precondition the first amp ha already be read buf null java io i o exception parameter buf where to put the entity value precondition the first amp ha already be read buf null push a character back to the read back buffer parameter ch the character to push back precondition the read back buffer is empty ch \0 parameter ch the character to push back precondition the read back buffer is empty ch \0 create a parse exception when an invalid valueset is given to a method parameter name the name of the entity precondition name null parameter name the name of the entity precondition name null create a parse exception when an invalid value is given to a method parameter name the name of the entity value the value of the entity precondition name null value null parameter name the name of the entity value the value of the entity precondition name null value null create a parse exception when the end of the data input ha be reach create a parse exception when a syntax error occur parameter context the context in which the error occur precondition context null context length gt 0 parameter context the context in which the error occur precondition context null context length gt 0 create a parse exception when the next character read is not the character that wa expect parameter set the set of character in human readable form that wa expect precondition set null set length gt 0 parameter set the set of character in human readable form that wa expect precondition set null set length gt 0 create a parse exception when an entity could not be resolve parameter name the name of the entity precondition name null name length gt 0 parameter name the name of the entity precondition name null name length gt 0 