org jhotdraw geom java awt java awt geom java util bezi path array list bezi path node shape c1 m a s k 1 c2 m a s k 2 c1 c2 m a s k c1 m a s k | c2 m a s k general path general path out 1 is close node cloneable mask 0 x 3 y 3 keep colinear true node mask 1 node node that set to that set to node that mask that mask keep colinear that keep colinear system arraycopy that x 0 x 0 3 system arraycopy that y 0 y 0 3 node point2 d c0 mask 0 x 0 c0 x y 0 c0 y x 1 c0 x y 1 c0 y x 2 c0 x y 2 c0 y node mask point2 d c0 point2 d c1 point2 d c2 mask mask x 0 c0 x y 0 c0 y x 1 c1 x y 1 c1 y x 2 c2 x y 2 c2 y node x0 y0 mask 0 x 0 x0 y 0 y0 x 1 x0 y 1 y0 x 2 x0 y 2 y0 node mask x0 y0 x1 y1 x2 y2 mask mask x 0 x0 y 0 y0 x 1 x1 y 1 y1 x 2 x2 y 2 y2 get mask mask set mask value mask value set control point index point2 d p x index p x y index p y point2 d get control point index point2 d x index y index move to point2 d p move by p x x 0 p y y 0 move to x y move by x x 0 y y 0 move by dx dy i 0 i 3 i++ x i + dx y i + dy object clone node that node super clone that x x clone that y y clone that clone not support exception e internal error error internal error error init cause e error string to string string builder buf string builder buf append i 0 i 3 i++ i 0 mask i i buf append buf append x buf append i buf append buf append x i buf append y buf append i buf append buf append y i buf append buf to string bezi path add point2 d c0 add node 0 c0 c0 c0 add point x y add node 0 x y x y x y add mask point2 d c0 point2 d c1 point2 d c2 add node mask c0 c1 c2 set index coord point2 d p node c get index c x coord p x c y coord p y point2 d get index coord node c get index point2 d c x coord c y coord invalidate path general path null out 1 validate path general path null general path to general path general path to general path general path gp general path gp set winding rule general path w i n d e v e n o d d size 0 gp move to 0 0 gp line to 0 0 + 1 size 1 node current get 0 gp move to current x 0 current y 0 gp line to current x 0 current y 0 + 1 node previou node current previou current get 0 gp move to current x 0 current y 0 i 1 n size i n i++ previou current current get i previou mask c2 m a s k 0 current mask c1 m a s k 0 gp line to current x 0 current y 0 gp quad to current x 1 current y 1 current x 0 current y 0 current mask c1 m a s k 0 gp quad to previou x 2 previou y 2 current x 0 current y 0 gp curve to previou x 2 previou y 2 current x 1 current y 1 current x 0 current y 0 is close size 1 previou get size 1 current get 0 previou mask c2 m a s k 0 current mask c1 m a s k 0 gp line to current x 0 current y 0 gp quad to current x 1 current y 1 current x 0 current y 0 current mask c1 m a s k 0 gp quad to previou x 2 previou y 2 current x 0 current y 0 gp curve to previou x 2 previou y 2 current x 1 current y 1 current x 0 current y 0 gp close path gp contain point2 d p validate path general path contain p outline contain point2 d p tolerance validate path path iterator i general path get path iterator affine transform tolerance coord 6 type i current segment coord prev x coord 0 prev y coord 1 i next i is i current segment coord geom line contain point prev x prev y coord 0 coord 1 p x p y tolerance true prev x coord 0 prev y coord 1 i next false intersect rectangle2 d r validate path general path intersect r path iterator get path iterator affine transform at validate path general path get path iterator at contain rectangle2 d r validate path general path contain r path iterator get path iterator affine transform at flatness validate path general path get path iterator at flatness intersect x y w h validate path general path intersect x y w h rectangle2 d get bounds2 d validate path general path get bounds2 d rectangle2 d get bounds2 d validate path rectangle2 d r general path get bounds2 d r rectangle2 d rectangle2 d r rectangle2 d r get x r get y r get width r get height rectangle get bound validate path general path get bound contain x y w h validate path general path contain x y w h contain x y validate path general path contain x y set close value is close value is close value invalidate path is close is close object clone bezi path that bezi path super clone i 0 n size i n i++ that set i node get i clone that transform affine transform tx point2 d p point2 d node cp i 0 i 3 i++ p x cp x i p y cp y i tx transform p p cp x i p x cp y i p y invalidate path set to bezi path that that size size remove size 1 i 0 n size i n i++ get i set to that get i size that size add node that get size clone point2 d get center sx 0 sy 0 node p sx+ p x 0 sy+ p y 0 n size point2 d sx n sy n point2 d chop point2 d p validate path geom chop general path p index of outermost node out 1 point2 d ctr get center out 0 dist 0 i 0 n size i n i++ node cp get i d geom length2 ctr x ctr y cp x 0 cp y 0 d dist dist d out i out point2 d get point on path relative flatness 