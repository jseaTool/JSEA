bezi path java 1 1 2006 03 22 copyright c 1996 2006 by the original author of jhotdraw and all it contributor jhotdraw org all right reserve software is the confidential and proprietary information of jhotdraw org confidential information you shall not disclose such confidential information and shall use it only in accordance with the term of the license agreement you enter into with jhotdraw org bezi path allow the construction of path consist of straight line quadratic curve and cubic curve p a bezi path represent a geometric path construct by vertex each node ha three control point c0 c1 c2 a mask define which control point are in use the path pass through c0 c1 control the curve going toward c0 c2 control the curve going away from c0 author wern randelshof version 1 1 2006 03 22 method move to line to and quad to add br 1 0 january 20 2006 create constant control point c1 constant control point c2 convenience constant control point c1 and c2 we cache a general path instance to speed up shape operation we cache the index of the outermost node to speed up method index of outermost node value is set to true close the bezi path define a vertex node of the bezi path p a vertex consist of three control point c0 c1 and c2 ul li the bezi path alway pass through c0 li li c1 is use to control the curve toward c0 li li c2 is use to control the curve going away from c0 li ul mask is use to describe which control point in addition to c0 are in effect control point x coordinate control point y coordinate is a hint editing tool is set to true the editing tool shall keep all control point on the same line create a instance convenience method add a control point with a single coordinate c0 convenience method add a control point with three coordinate c0 c1 and c2 with a mask convenience method change a single coordinate of a control point convenience method getting a single coordinate of a control point must be call after the bezi path ha be change recompute the bezi path it is invalid convert the bezi path into a general path true the outline of bezi path contain the specify point param p the point to be test param tolerance the tolerance the test create a deep copy of the bezi path transform the bezi path param tx the transformation the point at the center of the bezi path a point on the edge of the bezi path which cross the line from the center of the bezi path to the specify point no edge cross the line the near c0 control point is point2 d ctr get center chop point cx 1 cy 1 len m a x v a l u e point along edge validate path path iterator i general path get path iterator affine transform 1 coord 6 type i current segment coord prev x coord 0 prev y coord 1 i next i is i next i current segment coord point2 d chop geom intersect prev x prev y coord 0 coord 1 p x p y ctr x ctr y chop null cl geom length2 chop x chop y p x p y cl len len cl cx chop x cy chop y prev x coord 0 prev y coord 1 is close size 1 node first get 0 node last get size 1 point2 d chop geom intersect first x 0 first y 0 last x 0 last y 0 p x p y ctr x ctr y chop null cl geom length2 chop x chop y p x p y cl len len cl cx chop x cy chop y none found pick close vertex len m a x v a l u e j 0 n size j n j++ node cp get j l geom length2 cp x 0 cp y 0 p x p y l len len l cx cp x 0 cy cp y 0 point2 d cx cy the index of the control point that is furthest from the center a relative point on the path where 0 is the start point of the path and 1 is the end point of the path param relative a value between 0 and 1 determine the length of the path len 0 path iterator i general path get path iterator affine transform flatness coord 6 type i current segment coord prev x coord 0 prev y coord 1 i next i is i next i current segment coord len + geom length prev x prev y coord 0 coord 1 prev x coord 0 prev y coord 1 compute the relative point on the path relative len len relative po 0 i general path get path iterator affine transform flatness type i current segment coord prev x coord 0 prev y coord 1 i next i is i next i current segment coord seg len geom length prev x prev y coord 0 coord 1 po + seg len relative len true point2 d coord 0 coord 1 compute the relative point2 d on the line point2 d prev x po len + coord 0 po + seg len len prev y po len + coord 1 po + seg len len factor relative len po seg len point2 d prev x 1 factor + coord 0 factor prev y 1 factor + coord 1 factor po + seg len prev x coord 0 prev y coord 1 internal error we should nev get here get the segment of the polyline that is hit by the given point2 d the index of the segment or 1 no segment wa hit find segment point2 d find tolerance x x x work only straight line node v1 v2 bezi path temp path bezi path node t1 t2 temp path add t1 node temp path add t2 node i 0 n size 1 i n i++ v1 get i v2 get i+1 v1 mask 0 v2 mask 0 geom line contain point v1 x 0 v1 y 0 v2 x 0 v2 y 0 find x find y tolerance i t1 set to v1 t2 set to v2 temp path invalidate path temp path outline contain find tolerance i is close size 1 v1 get size 1 v2 get 0 v1 mask 0 v2 mask 0 geom line contain point v1 x 0 v1 y 0 v2 x 0 v2 y 0 find x find y tolerance size 1 t1 set to v1 t2 set to v2 temp path invalidate path temp path outline contain find tolerance size 1 1 join two segment into one the given point2 d hit a node of the bezi path the index of the join segment or 1 no segment wa join join segment point2 d join tolerance i 0 i size i++ node p get i geom length p x 0 p y 0 join x join y tolerance remove i i 1 split the segment at the given point2 d a segment wa hit the index of the segment or 1 no segment wa hit split segment point2 d split tolerance i find segment split tolerance next i i + 1 % size i 1 get i mask c2 m a s k c2 m a s k get next i mask c1 m a s k 0 quadto add i + 1 node c2 m a s k split split split get i mask c2 m a s k 0 get next i mask c1 m a s k c1 m a s k quadto add i + 1 node c2 m a s k split split split get i mask c2 m a s k c2 m a s k get next i mask c1 m a s k c2 m a s k cubicto add i + 1 node c1 m a s k | c2 m a s k split split split lineto add i + 1 node split i+1 move to x1 y1 size 0 illegal path state exception move to only allow when empty add node x1 y1 line to x1 y1 size 0 illegal path state exception line to only allow when not empty add node x1 y1 quad to x1 y1 x2 y2 size 0 illegal path state exception quad to only allow when not empty add node c1 m a s k x2 y2 x1 y1 x2 y2 curve to x1 y1 x2 y2 x3 y3 size 0 illegal path state exception curve to only allow when not empty node last point get size 1 last point mask | c2 m a s k last point x 2 x1 last point y 2 y1 add node c1 m a s k x3 y3 x2 y2 x3 y3 point2 d to polygon array point2 d point point2 d size i 0 n size i n i++ point i point2 d get i x 0 get i y 0 point 