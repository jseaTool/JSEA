quad tree2 d java 1 0 2006 01 14 copyright c 1996 2006 by the original author of jhotdraw and all it contributor jhotdraw org all right reserve software is the confidential and proprietary information of jhotdraw org confidential information you shall not disclose such confidential information and shall use it only in accordance with the term of the license agreement you enter into with jhotdraw org ??? quad tree2 d author wern randelshof version 1 0 2006 01 14 derive from quad tree create a instance we store an object into map 1 the bound of the object contain our bound or 2 we are a leaf key object value rectangle2 d we have to split? is leaf object size max capacity bound width min size bound height min size split is leaf || o bound contain bound we put an object into our hashtable we are a leaf or the bound of the object contain our bound object put o o bound north east bound intersect o bound north east add o o bound north west bound intersect o bound north west add o o bound south east bound intersect o bound south east add o o bound south west bound intersect o bound south west add o o bound split is leaf hw bound width 2 hh bound height 2 north west quad node rectangle2 d bound x bound y hw hh north east quad node rectangle2 d bound x + hw bound y bound width hw hh south west quad node rectangle2 d bound x bound y + hh hw bound height hh south east quad node rectangle2 d bound x + hw bound y + hh bound width hw bound height hh hash map t rectangle2 d temp object object hash map t rectangle2 d map entry t rectangle2 d entry temp entry set add entry get key entry get value join is leaf north west join north east join south west join south east join object put all north west object object put all north east object object put all south west object object put all south east object north west null north east null south west null south east null find contain point2 d p hash set t result bound contain p map entry t rectangle2 d entry object entry set entry get value contain p result add entry get key is leaf north west find contain p result north east find contain p result south west find contain p result south east find contain p result find intersect rectangle2 d r hash set t result bound intersect r old size result size map entry t rectangle2 d entry object entry set entry get value intersect r result add entry get key is leaf north west find intersect r result north east find intersect r result south west find intersect r result south east find intersect r result find inside rectangle2 d r hash set t result bound intersect r map entry t rectangle2 d entry object entry set r contain entry get value result add entry get key is leaf north west find inside r result north east find inside r result south west find inside r result south east find inside r result 