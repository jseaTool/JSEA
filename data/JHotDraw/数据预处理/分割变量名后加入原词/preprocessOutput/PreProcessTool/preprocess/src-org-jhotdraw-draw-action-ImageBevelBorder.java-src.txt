ImageBevelBorder image bevel border java 3 3 0 0 2003 2003 08 08 31 31 Copyright copyright c c 1996 1996 2006 2006 by by the the original original authors author of of JHotDraw jhotdraw and and all all its it contributors contributor JHotDraw jhotdraw org org All all rights right reserved reserve This software software is is the the confidential confidential and and proprietary proprietary information information of of JHotDraw jhotdraw org org Confidential confidential Information information You you shall shall not not disclose disclose such such Confidential confidential Information information and and shall shall use use it it only only in in accordance accordance with with the the terms term of of the the license license agreement agreement you you entered enter into into with with JHotDraw jhotdraw org org package org org jhotdraw jhotdraw quaqua quaqua package org org jhotdraw jhotdraw draw draw action action import java awt awt import javax javax swing swing import javax javax swing swing border border import java awt awt image image import javax javax swing swing plaf plaf basic basic Draws draw a a filled fill bevel bevel border border using using an an image image and and insets inset The the image image must must consist consist of of a a bevel bevel and and a a fill fill area area p p The the insets inset and and the the size size of of the the image image are are used use do determine determine which which parts part of of the the image image shall shall be be used use to to draw draw the the corners corner and and edges edge of of the the bevel bevel as a well well the the fill fill area area p p For example example if you you provide provide an an image image of of size size 10 10 10 10 and and a a insets inset of of size size 2 2 2 2 4 4 4 4 then then the the corners corner of of the the border border are are made make up up of of top top left left 2 2 2 2 top top right right 2 2 4 4 bottom bottom left left 2 2 4 4 bottom bottom right right 4 4 4 4 rectangle rectangle of of the the image image The the inner inner area area of of the the image image is is used use to to fill fill the the inner inner area area author author Werner wern Randelshofer randelshof version 3 3 0 0 x x 2003 2003 09 09 05 05 Copied copy into into org org jhotdraw jhotdraw quaqua quaqua for the the Quaqua quaqua look look and and feel feel br 3 3 0 0 2003 2003 08 08 31 31 Moved move from from package org org jhotdraw jhotdraw gui gui plaf plaf to to org org jhotdraw jhotdraw gui gui border border Renamed rename from from BevelBorder bevel border to to ImageBevelBorder image bevel border to to avoid avoid name name conflicts conflict with with class javax javax swing swing border border BevelBorder bevel border Constructor constructor option option fillContentArea fill content area added add br 2 2 0 0 2003 2003 07 07 19 19 Redesigned redesign br 1 1 1 1 1 1 2003 2003 07 07 12 12 Class cast cast exception when when filling filling a a rectangle rectangle using using a a texture texture br 1 1 1 1 2002 2002 05 05 29 29 Refactored refactor br 1 1 0 0 2001 2001 10 10 16 16 public class ImageBevelBorder image bevel border implements Border border private final static boolean VERBOSE v e r b o s e false The the image image to to be be used use for drawing drawing private BufferedImage buffer image image image The the border border insets inset private Insets inset borderInsets border inset The the insets inset of of the the image image private Insets inset imageInsets image inset This attribute attribute is is set set to to true when when the the image image is is used use to to fill fill the the content content area area too too private boolean fillContentArea fill content area Creates create a a new instance instance with with the the given given image image and and insets inset The the image image has ha the the same same insets inset as a the the border border public ImageBevelBorder image bevel border Image image img img Insets inset borderInsets border inset this img img borderInsets border inset borderInsets border inset true Creates create a a new instance instance with with the the given given image image and and insets inset The the image image has ha different different insets inset than than the the border border public ImageBevelBorder image bevel border Image image img img Insets inset imageInsets image inset Insets inset borderInsets border inset this img img imageInsets image inset borderInsets border inset true Creates create a a new instance instance with with the the given given image image and and insets inset The the image image has ha different different insets inset than than the the border border public ImageBevelBorder image bevel border Image image img img Insets inset imageInsets image inset Insets inset borderInsets border inset boolean fillContentArea fill content area if img img instanceof BufferedImage buffer image this image image BufferedImage buffer image img img else Frame frame f f new Frame frame f f pack pack MediaTracker medium tracker t t new MediaTracker medium tracker f f t t addImage add image img img 0 0 try t t waitForAll wait all catch InterruptedException interrupt e e image image new BufferedImage buffer image img img getWidth get width f f img img getHeight get height f f BufferedImage buffer image TYPE t y p e INT i n t ARGB a r g b Graphics2D graphics2 d imgGraphics img graphic image image createGraphics create graphic imgGraphics img graphic drawImage draw image img img 0 0 0 0 f f imgGraphics img graphic dispose dispose f f dispose dispose this imageInsets image inset imageInsets image inset this borderInsets border inset borderInsets border inset this fillContentArea fill content area fillContentArea fill content area Returns true if the the border border is is opaque opaque This implementation always alway returns false public boolean isBorderOpaque is border opaque return false Returns the the insets inset of of the the border border param c c the the component component for which which this border border insets inset value value applies applie public Insets inset getBorderInsets get border inset Component component c c return Insets inset borderInsets border inset clone clone Paints paint the the bevel bevel image image for the the specified specify component component with with the the specified specify position position and and size size param c c the the component component for which which this border border is is being being painted paint param gr gr the the paint paint graphics graphic param x x the the x x position position of of the the painted paint border border param y y the the y y position position of of the the painted paint border border param width width the the width width of of the the painted paint border border param height height the the height height of of the the painted paint border border public void paintBorder paint border Component component c c Graphics graphic gr gr int x x int y y int width width int height height if image image null return Cast cast Graphics graphic to to Graphics2D graphics2 d Graphics2D graphics2 d g g Graphics2D graphics2 d gr gr Set set some some variables variable for easy easy access access of of insets inset and and image image size size int top top imageInsets image inset top top int left left imageInsets image inset left left int bottom bottom imageInsets image inset bottom bottom int right right imageInsets image inset right right int imgWidth img width image image getWidth get width int imgHeight img height image image getHeight get height Optimisation optimisation Draw draw image image directly directly if it it fits fit into into the the component component if fillContentArea fill content area if width width imgWidth img width height height imgHeight img height g g drawImage draw image image image x x y y c c return Optimisation optimisation Remove remove insets inset if image image width width or or image image height height fits fit if width width imgWidth img width left left imgWidth img width right right 0 0 if height height imgHeight img height top top imgHeight img height bottom bottom 0 0 Adjust adjust insets inset if component component is is too too small small if width width left left + + right right left left Math math min min left left width width 2 2 Math math max max 0 0 left left + + width width left left right right 2 2 right right width width left left if height height top top + + bottom bottom top top Math math min min top top height height 2 2 Math math max max 0 0 top top + + height height top top bottom bottom 2 2 bottom bottom height height top top Draw draw the the Leads if top top 0 0 left left 0 0 g g drawImage draw image image image x x y y x x + + left left y y + + top top 0 0 0 0 left left top top c c if top top 0 0 right right 0 0 g g fillRect fill rect x+width x+width right right y y x+width x+width y+top y+top g g drawImage draw image image image x x + + width width right right y y x x + + width width y y + + top top imgWidth img width right right 0 0 imgWidth img width top top c c if bottom bottom 0 0 left left 0 0 g g drawImage draw image image image x x y y + + height height bottom bottom x x + + left left y y + + height height 0 0 imgHeight img height bottom bottom left left imgHeight img height c c if bottom bottom 0 0 right right 0 0 g g drawImage draw image image image x x + + width width right right y y + + height height bottom bottom x x + + width width y y + + height height imgWidth img width right right imgHeight img height bottom bottom imgWidth img width imgHeight img height c c Draw draw the the edges edge BufferedImage buffer image subImg sub img null TexturePaint texture paint paint paint North north if top top 0 0 left left + + right right width width subImg sub img image image getSubimage get subimage left left 0 0 imgWidth img width right right left left top top paint paint new TexturePaint texture paint subImg sub img new Rectangle rectangle x+left x+left y y imgWidth img width left left right right top top g g setPaint set paint paint paint g g fillRect fill rect x+left x+left y y width width left left right right top top South south if bottom bottom 0 0 left left + + right right width width subImg sub img image image getSubimage get subimage left left imgHeight img height bottom bottom imgWidth img width right right left left bottom bottom paint paint new TexturePaint texture paint subImg sub img new Rectangle rectangle x+left x+left y y + + height height bottom bottom imgWidth img width left left right right bottom bottom g g setPaint set paint paint paint g g fillRect fill rect x+left x+left y y + + height height bottom bottom width width left left right right bottom bottom West west if left left 0 0 top top + + bottom bottom height height subImg sub img image image getSubimage get subimage 0 0 top top left left imgHeight img height top top bottom bottom paint paint new TexturePaint texture paint subImg sub img new Rectangle rectangle x x y+top y+top left left imgHeight img height top top bottom bottom g g setPaint set paint paint paint g g fillRect fill rect x x y+top y+top left left height height top top bottom bottom East east if right right 0 0 top top + + bottom bottom height height subImg sub img image image getSubimage get subimage imgWidth img width right right top top right right imgHeight img height top top bottom bottom paint paint new TexturePaint texture paint subImg sub img new Rectangle rectangle x+width x+width right right y y + + top top right right imgHeight img height top top bottom bottom g g setPaint set paint paint paint g g fillRect fill rect x+width x+width right right y y + + top top right right height height top top bottom bottom Fill fill the the center center if fillContentArea fill content area g g setColor set color Color color yellow yellow if left left + + right right width width top top + + bottom bottom height height subImg sub img image image getSubimage get subimage left left top top imgWidth img width right right left left imgHeight img height top top bottom bottom paint paint new TexturePaint texture paint subImg sub img new Rectangle rectangle x x + + left left y y + + top top imgWidth img width right right left left imgHeight img height top top bottom bottom g g setPaint set paint paint paint g g fillRect fill rect x+left x+left y y + + top top width width right right left left height height top top bottom bottom 