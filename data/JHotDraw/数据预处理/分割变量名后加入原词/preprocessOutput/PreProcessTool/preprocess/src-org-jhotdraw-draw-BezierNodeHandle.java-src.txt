BezierNodeHandle bezi node handle java 1 1 0 0 1 1 2006 2006 04 04 21 21 Copyright copyright c c 1996 1996 2006 2006 by by the the original original authors author of of JHotDraw jhotdraw and and all all its it contributors contributor JHotDraw jhotdraw org org All all rights right reserved reserve This software software is is the the confidential confidential and and proprietary proprietary information information of of JHotDraw jhotdraw org org Confidential confidential Information information You you shall shall not not disclose disclose such such Confidential confidential Information information and and shall shall use use it it only only in in accordance accordance with with the the terms term of of the the license license agreement agreement you you entered enter into into with with JHotDraw jhotdraw org org package org org jhotdraw jhotdraw draw draw import org org jhotdraw jhotdraw util util import org org jhotdraw jhotdraw undo undo import java awt awt import java awt awt event event import java awt awt geom geom import java util util import org org jhotdraw jhotdraw geom geom BezierNodeHandle bezi node handle author author Werner wern Randelshofer randelshof version 1 1 0 0 1 1 2006 2006 04 04 21 21 Don t t change change node node type type when when right right mouse mouse button button is is down down br 1 1 0 0 January january 20 20 2006 2006 Created create public class BezierNodeHandle bezi node handle extends AbstractHandle handle protected int index index private CompositeEdit composite edit edit edit private BezierPath bezi path Node node oldNode old node Creates create a a new instance instance public BezierNodeHandle bezi node handle BezierFigure bezi figure owner owner int index index super owner owner this index index index index Draws draw this handle handle public void draw draw Graphics2D graphics2 d g g BezierFigure bezi figure f f getBezierFigure get bezi figure if f f getPointCount get point count index index BezierPath bezi path Node node v v f f getNode get node index index if v v mask mask 0 0 drawRectangle draw rectangle g g Color color black black Color color white white else if v v mask mask BezierPath bezi path C1 c1 MASK m a s k || || v v mask mask BezierPath bezi path C2 c2 MASK m a s k || || f f isClosed is close v v mask mask BezierPath bezi path C1 c1 MASK m a s k | | BezierPath bezi path C2 c2 MASK m a s k index index 0 0 || || index index f f getNodeCount get node count 1 1 drawDiamond draw diamond g g Color color black black Color color white white else drawCircle draw circle g g Color color black black Color color white white protected BezierFigure bezi figure getBezierFigure get bezi figure return BezierFigure bezi figure getOwner get owner protected Point point getLocation get location return getBezierFigure get bezi figure getPointCount get point count index index ? ? view view drawingToView drawing to view getBezierFigure get bezi figure getPoint get point index index 0 0 new Point point 10 10 10 10 protected Rectangle rectangle basicGetBounds basic get bound Rectangle rectangle r r new Rectangle rectangle getLocation get location r r grow grow getHandlesize get handlesize 2 2 getHandlesize get handlesize 2 2 return r r public void trackStart track start Point point anchor anchor int modifiersEx modifier ex BezierFigure bezi figure figure figure getBezierFigure get bezi figure view view getDrawing get drawing fireUndoableEditHappened fire undoable edit happen edit edit new CompositeEdit composite edit Punkt punkt verschieben verschieben Point2D point2 d Double location location view view getConstrainer get constrain constrainPoint constrain point view view viewToDrawing view to drawing getLocation get location Point2D point2 d Double p p view view getConstrainer get constrain constrainPoint constrain point view view viewToDrawing view to drawing anchor anchor oldNode old node figure figure getNode get node index index fireHandleRequestSecondaryHandles fire handle request secondary handle public void trackStep track step Point point anchor anchor Point point lead int modifiersEx modifier ex BezierFigure bezi figure figure figure getBezierFigure get bezi figure figure figure willChange will change Point2D point2 d Double p p view view getConstrainer get constrain constrainPoint constrain point view view viewToDrawing view to drawing lead BezierPath bezi path Node node n n figure figure getNode get node index index fireAreaInvalidated fire area invalidate n n n n moveTo move to p p fireAreaInvalidated fire area invalidate n n figure figure basicSetNode basic set node index index n n figure figure changed change private void fireAreaInvalidated fire area invalidate BezierPath bezi path Node node v v Rectangle2D rectangle2 d Double dr dr new Rectangle2D rectangle2 d Double v v x x 0 0 v v y y 0 0 0 0 0 0 for int i i 1 1 i i 3 3 i++ i++ dr dr add add v v x x i i v v y y i i Rectangle rectangle vr vr view view drawingToView drawing to view dr dr vr vr grow grow getHandlesize get handlesize getHandlesize get handlesize fireAreaInvalidated fire area invalidate vr vr public void trackEnd track end Point point anchor anchor Point point lead int modifiersEx modifier ex BezierFigure bezi figure f f getBezierFigure get bezi figure Change change node node type type if modifiersEx modifier ex InputEvent input event META m e t a DOWN d o w n MASK m a s k | | InputEvent input event CTRL c t r l DOWN d o w n MASK m a s k 0 0 modifiersEx modifier ex InputEvent input event BUTTON2 b u t t o n2 DOWN d o w n MASK m a s k 0 0 f f willChange will change BezierPath bezi path Node node v v f f getNode get node index index if index index 0 0 index index f f getNodeCount get node count || || f f isClosed is close v v mask mask v v mask mask + + 3 3 % % 4 4 else if index index 0 0 v v mask mask v v mask mask BezierPath bezi path C2 c2 MASK m a s k 0 0 ? ? BezierPath bezi path C2 c2 MASK m a s k 0 0 else v v mask mask v v mask mask BezierPath bezi path C1 c1 MASK m a s k 0 0 ? ? BezierPath bezi path C1 c1 MASK m a s k 0 0 f f basicSetNode basic set node index index v v f f changed change fireHandleRequestSecondaryHandles fire handle request secondary handle view view getDrawing get drawing fireUndoableEditHappened fire undoable edit happen new BezierNodeEdit bezi node edit f f index index oldNode old node f f getNode get node index index view view getDrawing get drawing fireUndoableEditHappened fire undoable edit happen edit edit Override override public boolean isCombinableWith is combinable with Handle handle h h if super isCombinableWith is combinable with h h BezierNodeHandle bezi node handle that that BezierNodeHandle bezi node handle h h return that that index index this index index that that getBezierFigure get bezi figure getNodeCount get node count this getBezierFigure get bezi figure getNodeCount get node count return false public void trackDoubleClick track click Point point p p int modifiersEx modifier ex BezierFigure bezi figure f f getBezierFigure get bezi figure if f f getNodeCount get node count 2 2 modifiersEx modifier ex InputEvent input event META m e t a DOWN d o w n MASK m a s k | | InputEvent input event CTRL c t r l DOWN d o w n MASK m a s k | | InputEvent input event ALT a l t DOWN d o w n MASK m a s k 0 0 Rectangle rectangle invalidatedArea invalidate area getDrawBounds get draw bound f f willChange will change f f basicRemoveNode basic remove node index index f f changed change fireHandleRequestRemove fire handle request remove invalidatedArea invalidate area public Collection collection Handle handle createSecondaryHandles create secondary handle BezierFigure bezi figure f f getBezierFigure get bezi figure LinkedList link list Handle handle list list new LinkedList link list Handle handle BezierPath bezi path Node node v v f f getNode get node index index if v v mask mask BezierPath bezi path C1 c1 MASK m a s k 0 0 index index 0 0 || || f f isClosed is close list list add add new BezierControlPointHandle bezi control point handle f f index index 1 1 if v v mask mask BezierPath bezi path C2 c2 MASK m a s k 0 0 index index f f getNodeCount get node count 1 1 || || f f isClosed is close list list add add new BezierControlPointHandle bezi control point handle f f index index 2 2 if index index 0 0 || || f f isClosed is close int i i index index 0 0 ? ? f f getNodeCount get node count 1 1 index index 1 1 v v f f getNode get node i i if v v mask mask BezierPath bezi path C2 c2 MASK m a s k 0 0 list list add add new BezierControlPointHandle bezi control point handle f f i i 2 2 if index index f f getNodeCount get node count 2 2 || || f f isClosed is close int i i index index f f getNodeCount get node count 1 1 ? ? 0 0 index index + + 1 1 v v f f getNode get node i i if v v mask mask BezierPath bezi path C1 c1 MASK m a s k 0 0 list list add add new BezierControlPointHandle bezi control point handle f f i i 1 1 return list list 