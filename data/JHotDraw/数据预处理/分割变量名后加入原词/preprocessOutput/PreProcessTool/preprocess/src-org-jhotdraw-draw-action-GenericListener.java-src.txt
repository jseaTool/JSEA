GenericListener generic listener java 1 1 1 1 2003 2003 11 11 03 03 Copyright copyright c c 1996 1996 2006 2006 by by the the original original authors author of of JHotDraw jhotdraw and and all all its it contributors contributor JHotDraw jhotdraw org org All all rights right reserved reserve This software software is is the the confidential confidential and and proprietary proprietary information information of of JHotDraw jhotdraw org org Confidential confidential Information information You you shall shall not not disclose disclose such such Confidential confidential Information information and and shall shall use use it it only only in in accordance accordance with with the the terms term of of the the license license agreement agreement you you entered enter into into with with JHotDraw jhotdraw org org package org org jhotdraw jhotdraw draw draw action action import java lang lang reflect reflect The the GenericListener generic listener creates create anonymous anonymou listener listener classes at at runtime runtime p p Usage usage pre pre public class Demo demo JPanel j panel root root new JPanel j panel new BorderLayout border layout JLabel j label label label new JLabel j label public void myButtonAction my button action ActionEvent action event e e label label setText set text buttonAction button action public void myMouseEntered my mouse enter MouseEvent mouse event e e label label setText set text mouseEntered mouse enter +e +e toString to Demo demo JButton j button button button new JButton j button Button button with with Dynamic dynamic Listener listener This listener listener will will be be generated generate at at run run time time i i e e at at run run time time an an ActionListener action listener class will will be be code generated generate and and then then class loaded load Only only one one of of these these is is actually actually created create even even if many many calls call to to GenericListener generic listener create create ActionListener action listener class are are made make ActionListener action listener actionListener action listener ActionListener action listener GenericListener generic listener create create ActionListener action listener class actionPerformed action perform this myButtonAction my button action button button addActionListener add action listener actionListener action listener Here here s s another another dynamically dynamically generated generate listener listener This one one is is a a little little different different because because the the listenerMethod listener argument argument actually actually specifies specifie one one of of many many listener listener methods In in the the previous previou example example actionPerformed action perform named name the the one one and and only only ActionListener action listener method MouseListener mouse listener mouseListener mouse listener MouseListener mouse listener GenericListener generic listener create create MouseListener mouse listener class mouseEntered mouse enter this myMouseEntered my mouse enter button button addMouseListener add mouse listener mouseListener mouse listener pre pre author author Werner wern Randelshofer randelshof version 1 1 1 1 2003 2003 11 11 03 03 Support support for parameterless parameterles target target methods added add br 1 1 0 0 2003 2003 11 11 02 02 Created create public abstract class GenericListener generic listener A a convenient convenient version of of code create create listenerMethod listener targetObject target targetMethod target code This version looks look up up the the listener listener and and target target Methods so so you you don t t have have to to public static Object create create Class listenerInterface listener String listenerMethodName listener name Object target target String targetMethodName target name Method listenerMethod listener getListenerMethod get listener listenerInterface listener listenerMethodName listener name Search search a a target target method with with the the same same parameter parameter types type as a the the listener listener method Method targetMethod target getTargetMethod get target target target targetMethodName target name listenerMethod listener getParameterTypes get parameter type Nothing nothing found? found? Search search a a target target method with with no no parameters if targetMethod target null targetMethod target getTargetMethod get target target target targetMethodName target name new Class 0 0 Still still nothing nothing found? found? We we give give up up if targetMethod target null throw new RuntimeException runtime no no such such method +targetMethodName+ +target name+ in in +target +target getClass get return create create listenerMethod listener target target targetMethod target Return an an instance instance of of a a class that that implements the the interface that that contains contain the the declaration declaration for code listenerMethod listener code In in this new class code listenerMethod listener code will will apply apply code target target targetMethod target code to to the the incoming incoming Event event public static Object create create final Method listenerMethod listener final Object target target final Method targetMethod target The the implementation of of the the create create method uses us the the Dynamic dynamic Proxy proxy API a p i introduced introduce in in JDK j d k 1 1 3 3 Create create an an instance instance of of the the DefaultInvoker invok and and override override the the invoke method to to handle handle the the invoking the the targetMethod target on on the the target target InvocationHandler invocation handler handler handler new DefaultInvoker invok public Object invoke Object proxy proxy Method method Object args throws Throwable throwable Send send all all methods except except for the the targetMethod target to to the the superclass superclass for handling handling if listenerMethod listener equals equal method if targetMethod target getParameterTypes get parameter type length length 0 0 Special special treatment treatment for parameterless parameterles target target methods return targetMethod target invoke target target new Object 0 0 else Regular regular treatment treatment for target target methods having have the the same same argument argument list list as a the the listener listener method return targetMethod target invoke target target args else return super invoke proxy proxy method args Class cls cl listenerMethod listener getDeclaringClass get declare ClassLoader loader cl cl cls cl getClassLoader get loader return Proxy proxy newProxyInstance proxy instance cl cl new Class cls cl handler handler Implementation of of the the InvocationHandler invocation handler which which handles handle the the basic basic object methods private static class DefaultInvoker invok implements InvocationHandler invocation handler public Object invoke Object proxy proxy Method method Object args throws Throwable throwable if method getDeclaringClass get declare Object class String methodName name method getName get name if methodName name equals equal hashCode hash return proxyHashCode proxy hash proxy proxy else if methodName name equals equal equals equal return proxyEquals proxy equal proxy proxy args 0 0 else if methodName name equals equal toString to return proxyToString proxy to proxy proxy Although although listener listener methods are are supposed suppose to to be be void we we allow allow for any any return type type here here and and produce produce null 0 0 false as a appropriate appropriate return nullValueOf value of method getReturnType get type protected Integer proxyHashCode proxy hash Object proxy proxy return new Integer System identityHashCode identity hash proxy proxy protected Boolean proxyEquals proxy equal Object proxy proxy Object other other return proxy proxy other other ? ? Boolean TRUE t r u e Boolean FALSE f a l s e protected String proxyToString proxy to Object proxy proxy return proxy proxy getClass get getName get name + + + + Integer toHexString to hex proxy proxy hashCode hash private final static Character character char 0 0 new Character character char 0 0 private final static Byte byte 0 0 new Byte byte 0 0 private final static Object nullValueOf value of Class rt rt if rt rt isPrimitive is primitive return null else if rt rt void class return null else if rt rt boolean class return Boolean FALSE f a l s e else if rt rt char class return char 0 0 else this will will convert convert to to any any other other kind kind of of number number return byte 0 0 Helper helper methods for EZ e z version of of create create private static Method getListenerMethod get listener Class listenerInterface listener String listenerMethodName listener name given given the the arguments argument to to create create find find out out which which listener listener is is desired desire Method m m listenerInterface listener getMethods get Method result result null for int i i 0 0 i i m m length length i++ i++ if listenerMethodName listener name equals equal m m i i getName get name if result result null throw new RuntimeException runtime ambiguous ambiguou method +m +m i i + + vs v +result +result result result m m i i if result result null throw new RuntimeException runtime no no such such method +listenerMethodName+ +listen name+ in in +listenerInterface +listen return result result private static Method getTargetMethod get target Object target target String targetMethodName target name Class parameterTypes parameter type Method m m target target getClass get getMethods get Method result result null eachMethod each for int i i 0 0 i i m m length length i++ i++ if targetMethodName target name equals equal m m i i getName get name continue eachMethod each Class p p m m i i getParameterTypes get parameter type if p p length length parameterTypes parameter type length length continue eachMethod each for int j j 0 0 j j p p length length j++ j++ if p p j j isAssignableFrom is assignable from parameterTypes parameter type j j continue eachMethod each if result result null throw new RuntimeException runtime ambiguous ambiguou method +m +m i i + + vs v +result +result result result m m i i if result result null throw new RuntimeException runtime no no such such method +targetMethodName+ +target name+ in in +target +target getClass get if result result null return null Method publicResult result raiseToPublicClass raise to result result if publicResult result null result result publicResult result return result result private static Method raiseToPublicClass raise to Method m m Class c c m m getDeclaringClass get declare if Modifier modifier isPublic is m m getModifiers get modifier Modifier modifier isPublic is c c getModifiers get modifier return m m yes yes search search for a a public version which which m m overrides Class sc sc c c getSuperclass get superclass if sc sc null Method sm sm raiseToPublicClass raise to m m sc sc if sm sm null return sm sm Class ints c c getInterfaces get for int i i 0 0 i i ints length length i++ i++ Method im im raiseToPublicClass raise to m m ints i i if im im null return im im no no public version of of m m here here return null private static Method raiseToPublicClass raise to Method m m Class c c try Method sm sm c c getMethod get m m getName get name m m getParameterTypes get parameter type return raiseToPublicClass raise to sm sm catch NoSuchMethodException no such ee ee return null private GenericListener generic listener 