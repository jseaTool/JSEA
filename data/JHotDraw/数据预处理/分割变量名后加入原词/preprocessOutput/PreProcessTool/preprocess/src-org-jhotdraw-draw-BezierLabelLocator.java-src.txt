PolyLineDecorationLocator poly line decoration locator java 1 1 0 0 3 3 Februar februar 2004 2004 Copyright copyright c c 1996 1996 2006 2006 by by the the original original authors author of of JHotDraw jhotdraw and and all all its it contributors contributor JHotDraw jhotdraw org org All all rights right reserved reserve This software software is is the the confidential confidential and and proprietary proprietary information information of of JHotDraw jhotdraw org org Confidential confidential Information information You you shall shall not not disclose disclose such such Confidential confidential Information information and and shall shall use use it it only only in in accordance accordance with with the the terms term of of the the license license agreement agreement you you entered enter into into with with JHotDraw jhotdraw org org package org org jhotdraw jhotdraw draw draw import org org jhotdraw jhotdraw geom geom Dimension2DDouble dimension2 d import org org jhotdraw jhotdraw geom geom Geom geom import org org jhotdraw jhotdraw util util import java awt awt import java awt awt geom geom import org org jhotdraw jhotdraw xml xml DOMInput dom input import org org jhotdraw jhotdraw xml xml DOMOutput dom output import org org jhotdraw jhotdraw xml xml DOMStorable dom storable This locator locator locates locate a a position position relative relative to to a a polyline polyline The the position position is is chosen chosen in in a a way way which which is is suitable suitable for labeling label the the polyline polyline The the preferredSize prefer size of of the the label label is is used use to to determine determine its it location location author author Werner wern Randelshofer randelshof version 2 2 0 0 2006 2006 01 01 14 14 Changed change to to support support double precison coordinates coordinate br 1 1 0 0 3 3 Februar februar 2004 2004 Created create public class BezierLabelLocator bezi label locator implements Locator locator DOMStorable dom storable private double relativePosition relative position private double angle angle private double distance distance Creates create a a new instance instance This constructor constructor is is for use use by by DOMStorable dom storable only only public BezierLabelLocator bezi label locator Creates create a a new locator locator param relativePosition relative position The the relative relative position position of of the the label label on on the the polyline polyline 0 0 0 0 specifies specifie the the start start of of the the polyline polyline 1 1 0 0 the the end end of of the the polyline polyline Values value between between 0 0 0 0 and and 1 1 0 0 are are relative relative positions position on on the the polyline polyline param angle angle The the angle angle of of the the distance distance vector vector param distance distance The the length length of of the the distance distance vector vector public BezierLabelLocator bezi label locator double relativePosition relative position double angle angle double distance distance this relativePosition relative position relativePosition relative position this angle angle angle angle this distance distance distance distance public Point2D point2 d Double locate locate Figure figure owner owner return getRelativePoint get relative point BezierFigure bezi figure owner owner public Point2D point2 d Double locate locate Figure figure owner owner Figure figure label label Point2D point2 d Double relativePoint relative point getRelativeLabelPoint get relative label point BezierFigure bezi figure owner owner label label return relativePoint relative point Returns a a Point2D point2 d Double on on the the polyline polyline that that is is at at the the provided provide relative relative position position public Point2D point2 d Double getRelativePoint get relative point BezierFigure bezi figure owner owner Point2D point2 d Double point point owner owner getPointOnPath get point on path float relativePosition relative position 3 3 Point2D point2 d Double nextPoint next point owner owner getPointOnPath get point on path relativePosition relative position 0 0 5 5 ? ? float relativePosition relative position + + 0 0 1f 1f float relativePosition relative position 0 0 1f 1f 3 3 double dir dir Math math atan2 atan2 nextPoint next point y y point point y y nextPoint next point x x point point x x if relativePosition relative position 0 0 5 5 dir dir + + Math math PI p i double alpha alpha dir dir + + angle angle Point2D point2 d Double p p new Point2D point2 d Double point point x x + + distance distance Math math cos co alpha alpha point point y y + + distance distance Math math sin sin alpha alpha if Double isNaN is na n p p x x p p point point return p p Returns a a Point2D point2 d Double on on the the polyline polyline that that is is at at the the provided provide relative relative position position XXX x x x Implement implement this and and move move it it to to BezierPath bezi path public Point2D point2 d Double getRelativeLabelPoint get relative label point BezierFigure bezi figure owner owner Figure figure label label Get get a a point point on on the the path path an an the the next next point point on on the the path path Point2D point2 d Double point point owner owner getPointOnPath get point on path float relativePosition relative position 3 3 if point point null return new Point2D point2 d Double 0 0 0 0 Point2D point2 d Double nextPoint next point owner owner getPointOnPath get point on path relativePosition relative position 0 0 5 5 ? ? float relativePosition relative position + + 0 0 1f 1f float relativePosition relative position 0 0 1f 1f 3 3 double dir dir Math math atan2 atan2 nextPoint next point y y point point y y nextPoint next point x x point point x x if relativePosition relative position 0 0 5 5 dir dir + + Math math PI p i double alpha alpha dir dir + + angle angle Point2D point2 d Double p p new Point2D point2 d Double point point x x + + distance distance Math math cos co alpha alpha point point y y + + distance distance Math math sin sin alpha alpha if Double isNaN is na n p p x x p p point point Dimension2DDouble dimension2 d labelDim label dim label label getPreferredSize get prefer size if relativePosition relative position 0 0 5 5 p p x x point point x x distance distance 2 2 p p x x point point x x + + distance distance 2 2 if p p y y point point y y South south East east return new Point2D point2 d Double p p x x labelDim label dim width width 2 2 p p y y else North north East east return new Point2D point2 d Double p p x x labelDim label dim width width 2 2 p p y y labelDim label dim height height else if p p x x point point x x if p p y y point point y y South south East east return new Point2D point2 d Double p p x x p p y y else North north East east return new Point2D point2 d Double p p x x p p y y labelDim label dim height height else if p p y y point point y y South south West west return new Point2D point2 d Double p p x x labelDim label dim width width p p y y else North north West west return new Point2D point2 d Double p p x x labelDim label dim width width p p y y labelDim label dim height height int percentage percentage int relativePosition relative position 100 100 int segment segment relative relative segment segment Point2D point2 d Double segPoint seg point relative relative Point2D point2 d Double on on the the segment segment int nPoints n point owner owner getPointCount get point count Point2D point2 d Double Points point owner owner getPoints get point if nPoints n point 2 2 return new Point2D point2 d Double 0 0 0 0 switch percentage percentage case 0 0 segment segment 0 0 segPoint seg point owner owner getStartPoint get start point break case 100 100 segment segment owner owner getPointCount get point count 2 2 segPoint seg point owner owner getEndPoint get end point break default double totalLength total length 0d 0d double segLength seg length new double nPoints n point 1 1 for int i i 1 1 i i nPoints n point i++ i++ segLength seg length i i 1 1 Geom geom length length Points point i i 1 1 x x Points point i i 1 1 y y Points point i i x x Points point i i y y totalLength total length + + segLength seg length i i 1 1 double relativeProgress relative progress percentage percentage totalLength total length 101d 101d segment segment 0 0 double segMin seg min 0d 0d for segment segment 0 0 segment segment segLength seg length length length 1 1 segment++ segment++ if segMin seg min + + segLength seg length segment segment relativeProgress relative progress break segMin seg min + + segLength seg length segment segment Compute compute the the relative relative Point2D point2 d Double on on the the line line segPoint seg point new Point2D point2 d Double relativeProgress relative progress segMin seg min segPoint seg point x x int Points point segment segment x x segLength seg length segment segment relativeProgress relative progress + + Points point segment segment + + 1 1 x x relativeProgress relative progress segLength seg length segment segment + + 5 5 segPoint seg point y y int Points point segment segment y y segLength seg length segment segment relativeProgress relative progress + + Points point segment segment + + 1 1 y y relativeProgress relative progress segLength seg length segment segment + + 5 5 break Dimension2DDouble dimension2 d labelDim label dim label label getPreferredSize get prefer size Line2D line2 d Double line line new Line2D line2 d Double Points point segment segment x x Points point segment segment y y Points point segment segment + + 1 1 x x Points point segment segment + + 1 1 y y double dir dir Math math atan2 atan2 Points point segment segment + + 1 1 y y Points point segment segment y y Points point segment segment + + 1 1 x x Points point segment segment x x double alpha alpha dir dir + + angle angle Point2D point2 d Double p p new Point2D point2 d Double int segPoint seg point x x + + distance distance Math math cos co alpha alpha int segPoint seg point y y + + distance distance Math math sin sin alpha alpha if p p x x segPoint seg point x x if p p y y segPoint seg point y y South south East east return new Point2D point2 d Double p p x x p p y y else North north East east return new Point2D point2 d Double p p x x p p y y labelDim label dim height height else if p p y y segPoint seg point y y South south West west return new Point2D point2 d Double p p x x labelDim label dim width width p p y y else North north West west return new Point2D point2 d Double p p x x labelDim label dim width width p p y y labelDim label dim height height public void read read DOMInput dom input in in relativePosition relative position in in getAttribute get attribute relativePosition relative position 0d 0d angle angle in in getAttribute get attribute angle angle 0d 0d distance distance in in getAttribute get attribute distance distance 0 0 public void write write DOMOutput dom output out out out out addAttribute add attribute relativePosition relative position relativePosition relative position out out addAttribute add attribute angle angle angle angle out out addAttribute add attribute distance distance distance distance 