AbstractHandle handle java 1 1 0 0 14 14 November november 2003 2003 Copyright copyright c c 1996 1996 2006 2006 by by the the original original authors author of of JHotDraw jhotdraw and and all all its it contributors contributor JHotDraw jhotdraw org org All all rights right reserved reserve This software software is is the the confidential confidential and and proprietary proprietary information information of of JHotDraw jhotdraw org org Confidential confidential Information information You you shall shall not not disclose disclose such such Confidential confidential Information information and and shall shall use use it it only only in in accordance accordance with with the the terms term of of the the license license agreement agreement you you entered enter into into with with JHotDraw jhotdraw org org ??? ??? package org org jhotdraw jhotdraw draw draw import java util util Collection collection import javax javax swing swing event event import java awt awt import java awt awt event event import javax javax swing swing undo undo import java util util AbstractHandle handle author author Werner wern Randelshofer randelshof version 1 1 0 0 2003 2003 12 12 01 01 Derived derive from from JHotDraw jhotdraw 5 5 4b1 4b1 public abstract class AbstractHandle handle implements Handle handle FigureListener figure listener private Figure figure owner owner protected DrawingView drawing view view view protected EventListenerList event listener list listenerList listener list new EventListenerList event listener list The the bounds bound of of the the abstract handle handle private Rectangle rectangle bounds bound Creates create a a new instance instance public AbstractHandle handle Figure figure owner owner this owner owner owner owner owner owner addFigureListener add figure listener this FIXME f i x m e Get get this form form the the drawing drawing view view protected int getHandlesize get handlesize return 7 7 Adds add a a listener listener for this handle handle public void addHandleListener add handle listener HandleListener handle listener l l listenerList listener list add add HandleListener handle listener class l l Removes remove a a listener listener for this handle handle public void removeHandleListener remove handle listener HandleListener handle listener l l listenerList listener list remove remove HandleListener handle listener class l l public Figure figure getOwner get owner return owner owner public void setView set view DrawingView drawing view view view this view view view view Notify notify all all listenerList listener list that that have have registered register interest interest for notification notification on on this event event type type protected void fireAreaInvalidated fire area invalidate Rectangle rectangle invalidatedArea invalidate area HandleEvent handle event event event null Notify notify all all listeners listener that that have have registered register interest interest for Guaranteed guarantee to to return a a non non null array Object listeners listener listenerList listener list getListenerList get listener list Process process the the listeners listener last last to to first first notifying notify those those that that are are interested interest in in this event event for int i i listeners listener length length 2 2 i i 0 0 i i 2 2 if listeners listener i i HandleListener handle listener class Lazily lazily create create the the event event if event event null event event new HandleEvent handle event this invalidatedArea invalidate area HandleListener handle listener listeners listener i+1 i+1 areaInvalidated area invalidate event event Notify notify all all listenerList listener list that that have have registered register interest interest for notification notification on on this event event type type protected void fireUndoableEditHappened fire undoable edit happen UndoableEdit undoable edit edit edit view view getDrawing get drawing fireUndoableEditHappened fire undoable edit happen edit edit UndoableEditEvent undoable edit event event event null Notify notify all all listeners listener that that have have registered register interest interest for Guaranteed guarantee to to return a a non non null array Object listeners listener listenerList listener list getListenerList get listener list Process process the the listeners listener last last to to first first notifying notify those those that that are are interested interest in in this event event for int i i listeners listener length length 2 2 i i 0 0 i i 2 2 if listeners listener i i UndoableEditListener undoable edit listener class Lazily lazily create create the the event event if event event null event event new UndoableEditEvent undoable edit event this edit edit UndoableEditListener undoable edit listener listeners listener i+1 i+1 undoableEditHappened undoable edit happen event event Notify notify all all listenerList listener list that that have have registered register interest interest for notification notification on on this event event type type protected void fireHandleRequestRemove fire handle request remove Rectangle rectangle invalidatedArea invalidate area HandleEvent handle event event event null Notify notify all all listeners listener that that have have registered register interest interest for Guaranteed guarantee to to return a a non non null array Object listeners listener listenerList listener list getListenerList get listener list Process process the the listeners listener last last to to first first notifying notify those those that that are are interested interest in in this event event for int i i listeners listener length length 2 2 i i 0 0 i i 2 2 if listeners listener i i HandleListener handle listener class Lazily lazily create create the the event event if event event null event event new HandleEvent handle event this invalidatedArea invalidate area HandleListener handle listener listeners listener i+1 i+1 handleRequestRemove handle request remove event event Notify notify all all listenerList listener list that that have have registered register interest interest for notification notification on on this event event type type protected void fireHandleRequestSecondaryHandles fire handle request secondary handle HandleEvent handle event event event null Notify notify all all listeners listener that that have have registered register interest interest for Guaranteed guarantee to to return a a non non null array Object listeners listener listenerList listener list getListenerList get listener list Process process the the listeners listener last last to to first first notifying notify those those that that are are interested interest in in this event event for int i i listeners listener length length 2 2 i i 0 0 i i 2 2 if listeners listener i i HandleListener handle listener class Lazily lazily create create the the event event if event event null event event new HandleEvent handle event this null HandleListener handle listener listeners listener i+1 i+1 handleRequestSecondaryHandles handle request secondary handle event event Draws draw this handle handle public void draw draw Graphics2D graphics2 d g g drawCircle draw circle g g Color color white white Color color black black protected void drawCircle draw circle Graphics2D graphics2 d g g Color color fill fill Color color stroke stroke Rectangle rectangle r r getBounds get bound g g setColor set color fill fill g g fillOval fill oval r r x x r r y y r r width width r r height height g g setStroke set stroke new BasicStroke basic stroke g g setColor set color stroke stroke g g drawOval draw oval r r x x r r y y r r width width r r height height protected void drawRectangle draw rectangle Graphics2D graphics2 d g g Color color fill fill Color color stroke stroke Rectangle rectangle r r getBounds get bound g g setColor set color fill fill g g fill fill r r g g setStroke set stroke new BasicStroke basic stroke g g setColor set color stroke stroke g g draw draw r r protected void drawDiamond draw diamond Graphics2D graphics2 d g g Color color fill fill Color color stroke stroke Rectangle rectangle r r getBounds get bound r r grow grow 1 1 1 1 Polygon polygon p p new Polygon polygon p p addPoint add point r r x x + + r r width width 2 2 r r y y p p addPoint add point r r x x + + r r width width r r y y + + r r height height 2 2 p p addPoint add point r r x x + + r r width width 2 2 r r y y + + r r height height p p addPoint add point r r x x r r y y + + r r height height 2 2 p p addPoint add point r r x x + + r r width width 2 2 r r y y g g setColor set color fill fill g g fill fill p p g g setStroke set stroke new BasicStroke basic stroke g g setColor set color stroke stroke g g draw draw p p public boolean contains contain Point point p p return getBounds get bound contains contain p p public void invalidate invalidate fireAreaInvalidated fire area invalidate getDrawBounds get draw bound public void dispose dispose owner owner removeFigureListener remove figure listener this owner owner null Sent sent when when a a region region used use by by the the figure figure needs need to to be be repainted repaint The the implementation of of this method assumes assume that that the the handle handle is is located locate on on the the bounds bound of of the the figure figure or or inside inside the the figure figure If the the handle handle is is located locate elsewhere elsewhere this method must must be be reimpleted reimplet by by the the subclass subclass public void figureAreaInvalidated figure area invalidate FigureEvent figure event evt evt updateBounds update bound Sent sent when when a a figure figure was wa added add public void figureAdded figure add FigureEvent figure event e e Empty empty Sent sent when when a a figure figure was wa removed remove public void figureRemoved figure remove FigureEvent figure event e e Empty empty Sent sent when when a a figure figure requests request to to be be removed remove public void figureRequestRemove figure request remove FigureEvent figure event e e Empty empty Sent sent when when the the bounds bound or or shape shape of of a a figure figure has ha changed change public void figureChanged figure change FigureEvent figure event evt evt updateBounds update bound Returns a a cursor cursor for the the handle handle public Cursor cursor getCursor get cursor return Cursor cursor getPredefinedCursor get predefin cursor Cursor cursor MOVE m o v e CURSOR c u r s o r Returns true if the the given given handle handle is is an an instance instance of of the the same same class or or of of a a subclass subclass of of this handle handle public boolean isCombinableWith is combinable with Handle handle handle handle return getClass get isAssignableFrom is assignable from handle handle getClass get public void keyTyped key type KeyEvent key event evt evt public void keyReleased key release KeyEvent key event evt evt public void keyPressed key press KeyEvent key event evt evt public final Rectangle rectangle getBounds get bound if bounds bound null bounds bound basicGetBounds basic get bound return Rectangle rectangle bounds bound clone clone public Rectangle rectangle getDrawBounds get draw bound Rectangle rectangle r r getBounds get bound r r grow grow 2 2 2 2 grow grow by by two two pixels pixel to to take take antialiasing antialiasing into into account account return r r protected abstract Rectangle rectangle basicGetBounds basic get bound protected void updateBounds update bound Rectangle rectangle newBounds bound basicGetBounds basic get bound if bounds bound null || || newBounds bound equals equal bounds bound if bounds bound null fireAreaInvalidated fire area invalidate getDrawBounds get draw bound bounds bound newBounds bound fireAreaInvalidated fire area invalidate getDrawBounds get draw bound Tracks track a a double click click public void trackDoubleClick track click Point point p p int modifiersEx modifier ex public void figureAttributeChanged figure attribute change FigureEvent figure event e e public void viewTransformChanged view transform change bounds bound null public Collection collection Handle handle createSecondaryHandles create secondary handle return Collections collection emptyList empty list 