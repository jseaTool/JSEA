SVGPath s v g path java 1 1 0 0 July july 8 8 2006 2006 Copyright copyright c c 1996 1996 2006 2006 by by the the original original authors author of of JHotDraw jhotdraw and and all all its it contributors contributor JHotDraw jhotdraw org org All all rights right reserved reserve This software software is is the the confidential confidential and and proprietary proprietary information information of of JHotDraw jhotdraw org org Confidential confidential Information information You you shall shall not not disclose disclose such such Confidential confidential Information information and and shall shall use use it it only only in in accordance accordance with with the the terms term of of the the license license agreement agreement you you entered enter into into with with JHotDraw jhotdraw org org package org org jhotdraw jhotdraw samples sample svg svg figures figure import java awt awt import java awt awt event event import java awt awt geom geom import java io io import java util util import javax javax swing swing import org org jhotdraw jhotdraw draw draw import org org jhotdraw jhotdraw draw draw action action import org org jhotdraw jhotdraw geom geom import org org jhotdraw jhotdraw samples sample svg svg import org org jhotdraw jhotdraw util util import org org jhotdraw jhotdraw xml xml import static org org jhotdraw jhotdraw draw draw AttributeKeys attribute key SVGPath s v g path is is a a composite composite Figure figure which which contains contain one one or or more more BezierFigures bezi figure as a its it children child p p XXX x x x Roll roll in in the the read read method of of SVGLine s v g line author author Werner wern Randelshofer randelshof version 1 1 0 0 July july 8 8 2006 2006 Created create public class SVGPath s v g path extends AbstractAttributedCompositeFigure attribute composite figure implements SVGFigure s v g figure This path path is is used use for drawing drawing private GeneralPath general path path path Creates create a a new instance instance public SVGPath s v g path add add new BezierFigure bezi figure SVGUtil s v g util setDefaults set this public void drawFigure draw figure Graphics2D graphics2 d g g validatePath validate path if AttributeKeys attribute key FILL f i l l COLOR c o l o r get get this null g g setColor set color AttributeKeys attribute key FILL f i l l COLOR c o l o r get get this drawFill draw fill g g if STROKE s t r o k e COLOR c o l o r get get this null g g setStroke set stroke AttributeKeys attribute key getStroke get stroke this g g setColor set color STROKE s t r o k e COLOR c o l o r get get this drawStroke draw stroke g g if isConnectorsVisible is connector visible drawConnectors draw connector g g g g drawString draw this toString to + + +getChildCount +get child count float getBounds get bound x x float getBounds get bound y y public void drawFill draw fill Graphics2D graphics2 d g g if getChildren get child size size 0 0 BezierFigure bezi figure getChildren get child get get 0 0 isClosed is close g g fill fill path path public void drawStroke draw stroke Graphics2D graphics2 d g g g g draw draw path path public void invalidate invalidate super invalidate invalidate invalidatePath invalidate path protected void validate validate validatePath validate path super validate validate protected void validatePath validate path if path path null path path new GeneralPath general path path path setWindingRule set winding rule WINDING w i n d i n g RULE r u l e get get this WindingRule winding rule EVEN e v e n ODD o d d ? ? GeneralPath general path WIND w i n d EVEN e v e n ODD o d d GeneralPath general path WIND w i n d NON n o n ZERO z e r o for Figure figure child child getChildren get child BezierFigure bezi figure b b BezierFigure bezi figure child child path path append append b b getBezierPath get bezi path false protected void invalidatePath invalidate path path path null Override override public void write write DOMOutput dom output out out throws IOException i o writePoints write point out out writeAttributes write attribute out out protected void writePoints write point DOMOutput dom output out out StringBuilder builder buf buf new StringBuilder builder for Figure figure child child getChildren get child BezierFigure bezi figure b b BezierFigure bezi figure child child buf buf append append SVGUtil s v g util toPathData to path data b b getBezierPath get bezi path out out addAttribute add attribute d d buf buf toString to protected void writeAttributes write attribute DOMOutput dom output out out throws IOException i o SVGUtil s v g util writeAttributes write attribute this out out Override override public void read read DOMInput dom input in in throws IOException i o readPoints read point in in readAttributes read attribute in in AffineTransform affine transform tx tx SVGUtil s v g util getTransform get transform in in transform transform basicTransform basic transform tx tx protected void readPoints read point DOMInput dom input in in throws IOException i o removeAllChildren remove all child if in in getTagName get tag name equals equal polyline polyline BezierPath bezi path b b new BezierPath bezi path String points point in in getAttribute get attribute points point StringTokenizer tokeniz tt tt new StringTokenizer tokeniz points point while tt tt hasMoreTokens ha more token b b add add new BezierPath bezi path Node node Double valueOf value of tt tt nextToken next token Double valueOf value of tt tt nextToken next token BezierFigure bezi figure child child new BezierFigure bezi figure child child basicSetBezierPath basic set bezi path b b basicAdd basic add child child else if in in getTagName get tag name equals equal polygon polygon BezierPath bezi path b b new BezierPath bezi path b b setClosed set close true String points point in in getAttribute get attribute points point StringTokenizer tokeniz tt tt new StringTokenizer tokeniz points point while tt tt hasMoreTokens ha more token b b add add new BezierPath bezi path Node node Double valueOf value of tt tt nextToken next token Double valueOf value of tt tt nextToken next token BezierFigure bezi figure child child new BezierFigure bezi figure child child basicSetBezierPath basic set bezi path b b basicAdd basic add child child else java util util List list BezierPath bezi path paths path SVGUtil s v g util getPath get path in in d d for BezierPath bezi path b b paths path BezierFigure bezi figure child child new BezierFigure bezi figure child child basicSetBezierPath basic set bezi path b b basicAdd basic add child child if paths path size size 0 0 BezierFigure bezi figure child child new BezierFigure bezi figure basicAdd basic add child child protected void readAttributes read attribute DOMInput dom input in in throws IOException i o SVGUtil s v g util readAttributes read attribute this in in public void basicTransform basic transform AffineTransform affine transform tx tx super basicTransform basic transform tx tx invalidatePath invalidate path public boolean isEmpty is empty for Figure figure child child getChildren get child BezierFigure bezi figure b b BezierFigure bezi figure child child if b b getPointCount get point count 0 0 return false return true Override override public LinkedList link list Handle handle createHandles create handle int detailLevel detail level LinkedList link list Handle handle handles handle if detailLevel detail level 0 0 handles handle LinkedList link list Handle handle super createHandles create handle detailLevel detail level handles handle add add new RotateHandle rotate handle this else handles handle new LinkedList link list Handle handle for Figure figure child child getChildren get child handles handle addAll add all child child createHandles create handle detailLevel detail level return handles handle Override override public Collection collection Action action getActions get action Point2D point2 d Double p p ResourceBundleUtil resource bundle util labels label ResourceBundleUtil resource bundle util getLAFBundle get l a f bundle org org jhotdraw jhotdraw samples sample svg svg Labels label LinkedList link list Action action actions action new LinkedList link list Action action actions action add add new AbstractAction action labels label getString get closePath close path public void actionPerformed action perform ActionEvent action event evt evt for Figure figure child child getChildren get child BezierFigure bezi figure b b BezierFigure bezi figure child child b b setClosed set close true actions action add add new AbstractAction action labels label getString get openPath open path public void actionPerformed action perform ActionEvent action event evt evt for Figure figure child child getChildren get child BezierFigure bezi figure b b BezierFigure bezi figure child child b b setClosed set close false actions action add add new AbstractAction action labels label getString get windingEvenOdd winding even odd public void actionPerformed action perform ActionEvent action event evt evt WINDING w i n d i n g RULE r u l e set set SVGPath s v g path this WindingRule winding rule EVEN e v e n ODD o d d actions action add add new AbstractAction action labels label getString get windingNonZero winding non zero public void actionPerformed action perform ActionEvent action event evt evt WINDING w i n d i n g RULE r u l e set set SVGPath s v g path this WindingRule winding rule NON n o n ZERO z e r o return actions action 