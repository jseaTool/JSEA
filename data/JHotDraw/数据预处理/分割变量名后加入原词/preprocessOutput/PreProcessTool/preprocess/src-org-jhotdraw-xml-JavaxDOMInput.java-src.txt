JavaxDOMInput javax dom input java 2 2 1 1 2006 2006 07 07 08 08 Copyright copyright c c 1996 1996 2006 2006 by by the the original original authors author of of JHotDraw jhotdraw and and all all its it contributors contributor JHotDraw jhotdraw org org All all rights right reserved reserve This software software is is the the confidential confidential and and proprietary proprietary information information of of JHotDraw jhotdraw org org Confidential confidential Information information You you shall shall not not disclose disclose such such Confidential confidential Information information and and shall shall use use it it only only in in accordance accordance with with the the terms term of of the the license license agreement agreement you you entered enter into into with with JHotDraw jhotdraw org org package org org jhotdraw jhotdraw xml xml import java util util import javax javax xml xml parsers parser import javax javax xml xml transform transform import javax javax xml xml transform transform dom dom import javax javax xml xml transform transform stream stream import org org w3c w3c dom dom import java io io import java awt awt DOMInput dom input author author Werner wern Randelshofer randelshof version 2 2 1 1 2006 2006 07 07 08 08 Support support objects which which don t t have have an an ID br 2 2 0 0 2006 2006 06 06 10 10 Support support for Enum and and double array objects added add br 1 1 0 0 February february 17 17 2004 2004 Created create public class JavaxDOMInput javax dom input implements DOMInput dom input This map map is is used use to to unmarshall unmarshall references reference to to objects to to the the XML xml DOM dom A a key key in in this map map is is a a String representing represent a a marshalled marshal reference reference A a value value in in this map map is is an an unmarshalled unmarshall Object private HashMap hash map String Object idobjects idobject new HashMap hash map String Object The the document document used use for input input private Document document document document The the current current node node used use for input input private Node node current current The the factory factory used use to to create create objects from from XML xml tag tag names name private DOMFactory dom factory factory factory public JavaxDOMInput javax dom input DOMFactory dom factory factory factory InputStream input stream in in throws IOException i o this factory factory factory factory try Transformer transformer t t TransformerFactory transformer factory newInstance instance newTransformer transformer DOMResult dom result result result new DOMResult dom result t t transform transform new StreamSource stream source in in result result document document Document document result result getNode get node current current document document catch TransformerException transformer e e IOException i o error new IOException i o e e getMessage get message error initCause init cause e e throw error public JavaxDOMInput javax dom input DOMFactory dom factory factory factory Reader reader in in throws IOException i o this factory factory factory factory try Transformer transformer t t TransformerFactory transformer factory newInstance instance newTransformer transformer DOMResult dom result result result new DOMResult dom result t t transform transform new StreamSource stream source in in result result document document Document document result result getNode get node current current document document catch TransformerException transformer e e IOException i o error new IOException i o e e getMessage get message error initCause init cause e e throw error Returns the the tag tag name name of of the the current current element element public String getTagName get tag name return Element element current current getTagName get tag name Gets get an an attribute attribute of of the the current current element element of of the the DOM dom Document document public String getAttribute get attribute String name name String defaultValue value String value value Element element current current getAttribute get attribute name name return value value length length 0 0 ? ? defaultValue value value value Gets get the the text text of of the the current current element element of of the the DOM dom Document document public String getText get text return getText get text null Gets get the the text text of of the the current current element element of of the the DOM dom Document document public String getText get text String defaultValue value if current current getChildNodes get child node getLength get length 0 0 return defaultValue value StringBuilder builder buf buf new StringBuilder builder getText get text current current buf buf return buf buf toString to private static void getText get text Node node n n StringBuilder builder buf buf if n n getNodeValue get node value null buf buf append append n n getNodeValue get node value NodeList node list children child n n getChildNodes get child node for int i i 0 0 i i children child getLength get length i++ i++ getText get text children child item item i i buf buf Gets get an an attribute attribute of of the the current current element element of of the the DOM dom Document document and and of of all all parent parent DOM dom elements element public java util util List list String getInheritedAttribute get inherit attribute String name name LinkedList link list String values value new LinkedList link list String Node node node node current current while node node null String value value String Element element node node getAttribute get attribute name name values value addFirst add first value value node node node node getParentNode get parent node return values value Gets get an an attribute attribute of of the the current current element element of of the the DOM dom Document document public int getAttribute get attribute String name name int defaultValue value String value value Element element current current getAttribute get attribute name name return value value length length 0 0 ? ? defaultValue value int Long decode decode value value intValue value Gets get an an attribute attribute of of the the current current element element of of the the DOM dom Document document public double getAttribute get attribute String name name double defaultValue value String value value Element element current current getAttribute get attribute name name return value value length length 0 0 ? ? defaultValue value Double parseDouble parse value value Gets get an an attribute attribute of of the the current current element element of of the the DOM dom Document document public boolean getAttribute get attribute String name name boolean defaultValue value String value value Element element current current getAttribute get attribute name name return value value length length 0 0 ? ? defaultValue value Boolean valueOf value of value value booleanValue value Returns the the number number of of child child elements element of of the the current current element element public int getElementCount get element count int count count 0 0 NodeList node list list list current current getChildNodes get child node for int i i 0 0 i i list list getLength get length i++ i++ Node node node node list list item item i i if node node instanceof Element element count++ count++ return count count Returns the the number number of of child child elements element with with the the specified specify tag tag name name of of the the current current element element public int getElementCount get element count String tagName tag name int count count 0 0 NodeList node list list list current current getChildNodes get child node for int i i 0 0 i i list list getLength get length i++ i++ Node node node node list list item item i i if node node instanceof Element element Element element node node getTagName get tag name equals equal tagName tag name count++ count++ return count count Opens open the the element element with with the the specified specify index index and and makes make it it the the current current node node public void openElement open element int index index int count count 0 0 NodeList node list list list current current getChildNodes get child node int len len list list getLength get length for int i i 0 0 i i len len i++ i++ Node node node node list list item item i i if node node instanceof Element element if count++ count++ index index current current node node return Opens open the the last last element element with with the the specified specify name name and and makes make it it the the current current node node public void openElement open element String tagName tag name int count count 0 0 NodeList node list list list current current getChildNodes get child node int len len list list getLength get length for int i i 0 0 i i len len i++ i++ Node node node node list list item item i i if node node instanceof Element element Element element node node getTagName get tag name equals equal tagName tag name current current node node return throw new IllegalArgumentException illegal argument element element not not found found +tagName +tag name Opens open the the element element with with the the specified specify name name and and index index and and makes make it it the the current current node node public void openElement open element String tagName tag name int index index int count count 0 0 NodeList node list list list current current getChildNodes get child node int len len list list getLength get length for int i i 0 0 i i len len i++ i++ Node node node node list list item item i i if node node instanceof Element element Element element node node getTagName get tag name equals equal tagName tag name if count++ count++ index index current current node node return throw new IllegalArgumentException illegal argument no no such such child child +tagName+ +tag name+ +index+ +index+ Closes close the the current current element element of of the the DOM dom Document document The the parent parent of of the the current current element element becomes become the the current current element element exception IllegalArgumentException illegal argument if the the provided provide tagName tag name does doe not not match match the the tag tag name name of of the the element element public void closeElement close element if Element element current current getTagName get tag name equals equal tagName tag name throw new IllegalArgumentException illegal argument Attempt attempt to to close close wrong wrong element element +tagName +tag name + + + + Element element current current getTagName get tag name current current current current getParentNode get parent node Reads read an an object from from the the current current element element public Object readObject read throws IOException i o return readObject read 0 0 Reads read an an object from from the the current current element element public Object readObject read int index index throws IOException i o openElement open element index index Object o o String tagName tag name getTagName get tag name if tagName tag name equals equal null o o null else if tagName tag name equals equal string o o getText get text else if tagName tag name equals equal int o o Integer decode decode getText get text else if tagName tag name equals equal long o o Long decode decode getText get text else if tagName tag name equals equal float o o new Float Float parseFloat parse getText get text else if tagName tag name equals equal double o o new Double Double parseDouble parse getText get text else if tagName tag name equals equal boolean o o Boolean valueOf value of getText get text else if tagName tag name equals equal color color o o new Color color getAttribute get attribute rgba rgba 0xff 0xff else if tagName tag name equals equal intArray int a a new int getElementCount get element count for int i i 0 0 i i a a length length i++ i++ a a i i Integer readObject read i i intValue value o o a a else if tagName tag name equals equal floatArray float a a new float getElementCount get element count for int i i 0 0 i i a a length length i++ i++ a a i i Float readObject read i i floatValue value o o a a else if tagName tag name equals equal doubleArray double a a new double getElementCount get element count for int i i 0 0 i i a a length length i++ i++ a a i i Double readObject read i i doubleValue value o o a a else if tagName tag name equals equal font font o o new Font font getAttribute get attribute name name Dialog dialog getAttribute get attribute style style 0 0 getAttribute get attribute size size 0 0 else if tagName tag name equals equal enum o o factory factory createEnum create getAttribute get attribute type type String null getText get text else String ref ref getAttribute get attribute ref ref null String id getAttribute get attribute id ref ref Keep keep track track of of objects which which have have an an ID if id null o o factory factory create create getTagName get tag name else if idobjects idobject containsKey contain key id o o idobjects idobject get get id else o o factory factory create create getTagName get tag name idobjects idobject put put id o o if ref ref null if o o instanceof DOMStorable dom storable DOMStorable dom storable o o read read this closeElement close element return o o 