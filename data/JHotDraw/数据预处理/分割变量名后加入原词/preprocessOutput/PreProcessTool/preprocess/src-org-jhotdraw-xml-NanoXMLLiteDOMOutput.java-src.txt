NanoXMLDOMOutput nano xml dom output java 2 2 1 1 2006 2006 08 08 26 26 Copyright copyright c c 1996 1996 2006 2006 by by the the original original authors author of of JHotDraw jhotdraw and and all all its it contributors contributor JHotDraw jhotdraw org org All all rights right reserved reserve This software software is is the the confidential confidential and and proprietary proprietary information information of of JHotDraw jhotdraw org org Confidential confidential Information information You you shall shall not not disclose disclose such such Confidential confidential Information information and and shall shall use use it it only only in in accordance accordance with with the the terms term of of the the license license agreement agreement you you entered enter into into with with JHotDraw jhotdraw org org package org org jhotdraw jhotdraw xml xml import java awt awt import java util util import java io io import nanoxml nanoxml DOMOutput dom output using using Nano nano XML xml author author Werner wern Randelshofer randelshof version 2 2 1 1 2006 2006 08 08 26 26 Method setDoctype set doctype added add br 2 2 0 0 2006 2006 06 06 10 10 Support support for prototype prototype objects added add Support support for Enum and and double array objects added add br 1 1 2 2 2006 2006 03 03 20 20 Added add support support for default values value br 1 1 1 1 2006 2006 01 01 18 18 Remove remove 0 0 at at the the end end of of float and and double numbers number br 1 1 0 0 February february 17 17 2004 2004 Created create public class NanoXMLLiteDOMOutput nano xml lite dom output implements DOMOutput dom output The the doctype doctype of of the the XML xml document document private String doctype doctype This map map is is used use to to marshall marshall references reference to to objects to to the the XML xml DOM dom A a key key in in this map map is is a a Java Object a a value value in in this map map is is String representing represent a a marshalled marshal reference reference to to that that object private HashMap hash map Object String objectids objectid This map map is is used use to to cache cache prototype prototype objects private HashMap hash map String Object prototypes prototype The the document document used use for output output private XMLElement xml element document document The the current current node node used use for output output private XMLElement xml element current current The the factory factory used use to to create create objects private DOMFactory dom factory factory factory The the stack stack private Stack stack XMLElement xml element stack stack Creates create a a new instance instance public NanoXMLLiteDOMOutput nano xml lite dom output DOMFactory dom factory factory factory this factory factory factory factory objectids objectid new HashMap hash map Object String document document new XMLElement xml element new HashMap hash map false false current current document document stack stack new Stack stack XMLElement xml element stack stack push push current current Writes write the the contents content of of the the DOMOutput dom output into into the the specified specify output output stream stream public void save save OutputStream output stream out out throws IOException i o Writer writer w w new OutputStreamWriter output stream writer out out UTF8 u t f8 save save w w w w flush flush Writes write the the contents content of of the the DOMOutput dom output into into the the specified specify writer writer public void save save Writer writer out out throws IOException i o if doctype doctype null out out write write DOCTYPE d o c t y p e out out write write doctype doctype out out write write XMLElement xml element document document getChildren get child get get 0 0 write write out out Prints print the the contents content of of the the DOMOutput dom output into into the the specified specify print print writer writer public void print print PrintWriter print writer out out XMLElement xml element document document getChildren get child get get 0 0 print print out out Puts put a a new element element into into the the DOM dom Document document The the new element element is is added add as a a a child child to to the the current current element element in in the the DOM dom document document Then then it it becomes become the the current current element element The the element element must must be be closed close using using closeElement close element public void openElement open element String tagName tag name XMLElement xml element newElement element new XMLElement xml element new HashMap hash map false false newElement element setName set name tagName tag name current current addChild add child newElement element stack stack push push current current current current newElement element Closes close the the current current element element of of the the DOM dom Document document The the parent parent of of the the current current element element becomes become the the current current element element exception IllegalArgumentException illegal argument if the the provided provide tagName tag name does doe not not match match the the tag tag name name of of the the element element public void closeElement close element current current XMLElement xml element stack stack pop pop Adds add a a comment comment to to the the current current element element of of the the DOM dom Document document public void addComment add comment String comment comment NanoXML nano xml does doe not not support support comments comment Adds add a a text text to to current current element element of of the the DOM dom Document document Note note Multiple multiple consecutives consecutive texts text will will be be merged merge public void addText add text String text text String old old current current getContent get content if old old null current current setContent set content text text else current current setContent set content old+text old+text Adds add an an attribute attribute to to current current element element of of the the DOM dom Document document public void addAttribute add attribute String name name String value value if value value null current current setAttribute set attribute name name value value Adds add an an attribute attribute to to current current element element of of the the DOM dom Document document public void addAttribute add attribute String name name int value value current current setAttribute set attribute name name Integer toString to value value Adds add an an attribute attribute to to current current element element of of the the DOM dom Document document public void addAttribute add attribute String name name boolean value value current current setAttribute set attribute name name new Boolean value value toString to Adds add an an attribute attribute to to current current element element of of the the DOM dom Document document public void addAttribute add attribute String name name float value value Remove remove the the awkard awkard 0 0 at at the the end end of of each each number number String str str Float toString to value value if str str endsWith end with 0 0 str str str str substring substring 0 0 str str length length 2 2 current current setAttribute set attribute name name str str Adds add an an attribute attribute to to current current element element of of the the DOM dom Document document public void addAttribute add attribute String name name double value value Remove remove the the awkard awkard 0 0 at at the the end end of of each each number number String str str Double toString to value value if str str endsWith end with 0 0 str str str str substring substring 0 0 str str length length 2 2 current current setAttribute set attribute name name str str public void writeObject write Object o o throws IOException i o if o o null openElement open element null closeElement close element else if o o instanceof DOMStorable dom storable writeStorable write storable DOMStorable dom storable o o else if o o instanceof String openElement open element string addText add text String o o closeElement close element else if o o instanceof Integer openElement open element int addText add text o o toString to closeElement close element else if o o instanceof Long openElement open element long addText add text o o toString to closeElement close element else if o o instanceof Double openElement open element double Remove remove the the awkard awkard 0 0 at at the the end end of of each each number number String str str o o toString to if str str endsWith end with 0 0 str str str str substring substring 0 0 str str length length 2 2 addText add text str str closeElement close element else if o o instanceof Float openElement open element float Remove remove the the awkard awkard 0 0 at at the the end end of of each each number number String str str o o toString to if str str endsWith end with 0 0 str str str str substring substring 0 0 str str length length 2 2 addText add text str str closeElement close element else if o o instanceof Boolean openElement open element boolean addText add text o o toString to closeElement close element else if o o instanceof Color color Color color c c Color color o o openElement open element color color addAttribute add attribute rgba rgba +Integer + toHexString to hex c c getRGB get r g b closeElement close element else if o o instanceof int openElement open element intArray int a a int o o for int i i 0 0 i i a a length length i++ i++ writeObject write new Integer a a i i closeElement close element else if o o instanceof float openElement open element floatArray float a a float o o for int i i 0 0 i i a a length length i++ i++ writeObject write new Float a a i i closeElement close element else if o o instanceof double openElement open element doubleArray double a a double o o for int i i 0 0 i i a a length length i++ i++ writeObject write new Double a a i i closeElement close element else if o o instanceof Font font Font font f f Font font o o openElement open element font font addAttribute add attribute name name f f getName get name addAttribute add attribute style style f f getStyle get style addAttribute add attribute size size f f getSize get size closeElement close element else if o o instanceof Enum openElement open element enum Enum e e Enum o o addAttribute add attribute type type factory factory getEnumName get name e e addText add text factory factory getEnumValue get value e e closeElement close element else throw new IllegalArgumentException illegal argument unable unable to to store store +o+ +o+ +o +o getClass get private XMLElement xml element writeStorable write storable DOMStorable dom storable o o throws IOException i o String tagName tag name factory factory getName get name o o if tagName tag name null throw new IllegalArgumentException illegal argument no no tag tag name name for +o +o openElement open element tagName tag name XMLElement xml element element element current current if objectids objectid containsKey contain key o o addAttribute add attribute ref ref String objectids objectid get get o o else String id Integer toString to objectids objectid size size 16 16 objectids objectid put put o o id addAttribute add attribute id id o o write write this closeElement close element return element element public void addAttribute add attribute String name name float value value float defaultValue value if value value defaultValue value addAttribute add attribute name name value value public void addAttribute add attribute String name name int value value int defaultValue value if value value defaultValue value addAttribute add attribute name name value value public void addAttribute add attribute String name name double value value double defaultValue value if value value defaultValue value addAttribute add attribute name name value value public void addAttribute add attribute String name name boolean value value boolean defaultValue value if value value defaultValue value addAttribute add attribute name name value value public void addAttribute add attribute String name name String value value String defaultValue value if value value null value value equals equal defaultValue value addAttribute add attribute name name value value public Object getPrototype get prototype if prototypes prototype null prototypes prototype new HashMap hash map String Object if prototypes prototype containsKey contain key current current getName get name prototypes prototype put put current current getName get name factory factory create create current current getName get name return prototypes prototype get get current current getName get name public void setDoctype set doctype String doctype doctype this doctype doctype doctype doctype 