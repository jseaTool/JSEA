BezierControlPointHandle bezi control point handle java 1 1 0 0 23 23 Januar januar 2006 2006 Copyright copyright c c 1996 1996 2006 2006 by by the the original original authors author of of JHotDraw jhotdraw and and all all its it contributors contributor JHotDraw jhotdraw org org All all rights right reserved reserve This software software is is the the confidential confidential and and proprietary proprietary information information of of JHotDraw jhotdraw org org Confidential confidential Information information You you shall shall not not disclose disclose such such Confidential confidential Information information and and shall shall use use it it only only in in accordance accordance with with the the terms term of of the the license license agreement agreement you you entered enter into into with with JHotDraw jhotdraw org org package org org jhotdraw jhotdraw draw draw import org org jhotdraw jhotdraw util util import org org jhotdraw jhotdraw undo undo import java awt awt import java awt awt event event import java awt awt geom geom import java util util import org org jhotdraw jhotdraw geom geom BezierControlPointHandle bezi control point handle author author Werner wern Randelshofer randelshof version 1 1 0 0 23 23 Januar januar 2006 2006 Created create public class BezierControlPointHandle bezi control point handle extends AbstractHandle handle protected int index index controlPointIndex control point index private CompositeEdit composite edit edit edit Creates create a a new instance instance public BezierControlPointHandle bezi control point handle BezierFigure bezi figure owner owner int index index int coord coord super owner owner this index index index index this controlPointIndex control point index coord coord protected BezierFigure bezi figure getBezierFigure get bezi figure return BezierFigure bezi figure getOwner get owner protected Point point getLocation get location return getBezierFigure get bezi figure getPointCount get point count index index ? ? view view drawingToView drawing to view getBezierFigure get bezi figure getPoint get point index index controlPointIndex control point index new Point point 10 10 10 10 Draws draw this handle handle public void draw draw Graphics2D graphics2 d g g BezierFigure bezi figure f f getBezierFigure get bezi figure if f f getPointCount get point count index index BezierPath bezi path Node node v v f f getNode get node index index if v v keepColinear keep colinear v v mask mask BezierPath bezi path C1C2 c1 c2 MASK m a s k index index 0 0 index index f f getNodeCount get node count || || f f isClosed is close drawCircle draw circle g g Color color white white Color color blue blue else drawCircle draw circle g g Color color blue blue Color color white white g g setColor set color Color color blue blue g g draw draw new Line2D line2 d Double view view drawingToView drawing to view new Point2D point2 d Double v v x x 0 0 v v y y 0 0 view view drawingToView drawing to view new Point2D point2 d Double v v x x controlPointIndex control point index v v y y controlPointIndex control point index protected Rectangle rectangle basicGetBounds basic get bound Rectangle rectangle r r new Rectangle rectangle getLocation get location r r grow grow getHandlesize get handlesize 2 2 getHandlesize get handlesize 2 2 return r r public void trackStart track start Point point anchor anchor int modifiersEx modifier ex view view getDrawing get drawing fireUndoableEditHappened fire undoable edit happen edit edit new CompositeEdit composite edit Punkt punkt verschieben verschieben Point2D point2 d Double location location view view getConstrainer get constrain constrainPoint constrain point view view viewToDrawing view to drawing getLocation get location Point2D point2 d Double p p view view getConstrainer get constrain constrainPoint constrain point view view viewToDrawing view to drawing anchor anchor public void trackStep track step Point point anchor anchor Point point lead int modifiersEx modifier ex BezierFigure bezi figure figure figure getBezierFigure get bezi figure Point2D point2 d Double p p view view getConstrainer get constrain constrainPoint constrain point view view viewToDrawing view to drawing lead BezierPath bezi path Node node v v figure figure getNode get node index index fireAreaInvalidated fire area invalidate v v figure figure willChange will change if v v keepColinear keep colinear move move control control point point independently independently figure figure basicSetPoint basic set point index index controlPointIndex control point index p p else move move control control point point and and opposite opposite control control point point on on same same line line double a a Math math PI p i + + Math math atan2 atan2 p p y y v v y y 0 0 p p x x v v x x 0 0 int c2 c2 controlPointIndex control point index 1 1 ? ? 2 2 1 1 double r r Math math sqrt sqrt v v x x c2 c2 v v x x 0 0 v v x x c2 c2 v v x x 0 0 + + v v y y c2 c2 v v y y 0 0 v v y y c2 c2 v v y y 0 0 double sina sina Math math sin sin a a double cosa cosa Math math cos co a a Point2D point2 d Double p2 p2 new Point2D point2 d Double r r cosa cosa + + v v x x 0 0 r r sina sina + + v v y y 0 0 figure figure basicSetPoint basic set point index index controlPointIndex control point index p p figure figure basicSetPoint basic set point index index c2 c2 p2 p2 figure figure changed change fireAreaInvalidated fire area invalidate figure figure getNode get node index index private void fireAreaInvalidated fire area invalidate BezierPath bezi path Node node v v Rectangle2D rectangle2 d Double dr dr new Rectangle2D rectangle2 d Double v v x x 0 0 v v y y 0 0 0 0 0 0 for int i i 1 1 i i 3 3 i++ i++ dr dr add add v v x x i i v v y y i i Rectangle rectangle vr vr view view drawingToView drawing to view dr dr vr vr grow grow getHandlesize get handlesize getHandlesize get handlesize fireAreaInvalidated fire area invalidate vr vr public void trackEnd track end Point point anchor anchor Point point lead int modifiersEx modifier ex BezierFigure bezi figure figure figure getBezierFigure get bezi figure if modifiersEx modifier ex InputEvent input event META m e t a DOWN d o w n MASK m a s k | | InputEvent input event CTRL c t r l DOWN d o w n MASK m a s k 0 0 figure figure willChange will change BezierPath bezi path Node node v v figure figure getNode get node index index v v keepColinear keep colinear v v keepColinear keep colinear if v v keepColinear keep colinear move move control control point point and and opposite opposite control control point point on on same same line line Point2D point2 d Double p p figure figure getPoint get point index index controlPointIndex control point index double a a Math math PI p i + + Math math atan2 atan2 p p y y v v y y 0 0 p p x x v v x x 0 0 int c2 c2 controlPointIndex control point index 1 1 ? ? 2 2 1 1 double r r Math math sqrt sqrt v v x x c2 c2 v v x x 0 0 v v x x c2 c2 v v x x 0 0 + + v v y y c2 c2 v v y y 0 0 v v y y c2 c2 v v y y 0 0 double sina sina Math math sin sin a a double cosa cosa Math math cos co a a Point2D point2 d Double p2 p2 new Point2D point2 d Double r r cosa cosa + + v v x x 0 0 r r sina sina + + v v y y 0 0 v v x x c2 c2 p2 p2 x x v v y y c2 c2 p2 p2 y y figure figure setNode set node index index v v figure figure changed change view view getDrawing get drawing fireUndoableEditHappened fire undoable edit happen edit edit public boolean isCombinableWith is combinable with Handle handle h h if super isCombinableWith is combinable with h h BezierControlPointHandle bezi control point handle that that BezierControlPointHandle bezi control point handle h h return that that index index this index index that that controlPointIndex control point index this controlPointIndex control point index that that getBezierFigure get bezi figure getNodeCount get node count this getBezierFigure get bezi figure getNodeCount get node count return false 