Geom geom java 2 2 2 2 2006 2006 07 07 04 04 Copyright copyright c c 1996 1996 2006 2006 by by the the original original authors author of of JHotDraw jhotdraw and and all all its it contributors contributor JHotDraw jhotdraw org org All all rights right reserved reserve This software software is is the the confidential confidential and and proprietary proprietary information information of of JHotDraw jhotdraw org org Confidential confidential Information information You you shall shall not not disclose disclose such such Confidential confidential Information information and and shall shall use use it it only only in in accordance accordance with with the the terms term of of the the license license agreement agreement you you entered enter into into with with JHotDraw jhotdraw org org ??? ??? package org org jhotdraw jhotdraw geom geom import java awt awt import java awt awt geom geom Some some geometric geometric utilities utility version 2 2 2 2 2006 2006 07 07 04 04 Method grow grow Rectangle2D rectangle2 d Double added add br 2 2 1 1 2006 2006 01 01 20 20 Support support for double precision precision coordinates coordinate enhanced enhance public class Geom geom private Geom geom never nev instantiated instantiate Tests test if a a point point is is on on a a line line public static boolean lineContainsPoint line contain point int x1 x1 int y1 y1 int x2 x2 int y2 y2 int px px int py py return lineContainsPoint line contain point x1 x1 y1 y1 x2 x2 y2 y2 px px py py 3d 3d Tests test if a a point point is is on on a a line line p p changed change Werner wern Randelshofer randelshof 2003 2003 11 11 26 26 public static boolean lineContainsPoint line contain point int x1 x1 int y1 y1 int x2 x2 int y2 y2 int px px int py py double tolerance tolerance Rectangle rectangle r r new Rectangle rectangle new Point point x1 x1 y1 y1 r r add add x2 x2 y2 y2 r r grow grow Math math max max 2 2 int Math math ceil ceil tolerance tolerance Math math max max 2 2 int Math math ceil ceil tolerance tolerance if r r contains contain px px py py return false double a a b b x x y y if x1 x1 x2 x2 return Math math abs ab px px x1 x1 tolerance tolerance if y1 y1 y2 y2 return Math math abs ab py py y1 y1 tolerance tolerance a a double y1 y1 y2 y2 double x1 x1 x2 x2 b b double y1 y1 a a double x1 x1 x x py py b b a a y y a a px px + + b b return Math math min min Math math abs ab x x px px Math math abs ab y y py py tolerance tolerance Tests test if a a point point is is on on a a line line p p changed change Werner wern Randelshofer randelshof 2003 2003 11 11 26 26 public static boolean lineContainsPoint line contain point double x1 x1 double y1 y1 double x2 x2 double y2 y2 double px px double py py double tolerance tolerance Rectangle2D rectangle2 d Double r r new Rectangle2D rectangle2 d Double x1 x1 y1 y1 0 0 0 0 r r add add x2 x2 y2 y2 double grow grow Math math max max 2 2 int Math math ceil ceil tolerance tolerance r r x x grow grow r r y y grow grow r r width width + + grow grow 2 2 r r height height + + grow grow 2 2 if r r contains contain px px py py return false double a a b b x x y y if x1 x1 x2 x2 return Math math abs ab px px x1 x1 tolerance tolerance if y1 y1 y2 y2 return Math math abs ab py py y1 y1 tolerance tolerance a a double y1 y1 y2 y2 double x1 x1 x2 x2 b b double y1 y1 a a double x1 x1 x x py py b b a a y y a a px px + + b b return Math math min min Math math abs ab x x px px Math math abs ab y y py py tolerance tolerance The the bitmask bitmask that that indicates indicate that that a a point point lies lie above above the the rectangle rectangle public static final int OUT o u t TOP t o p Rectangle2D rectangle2 d OUT o u t TOP t o p The the bitmask bitmask that that indicates indicate that that a a point point lies lie below below the the rectangle rectangle public static final int OUT o u t BOTTOM b o t t o m Rectangle2D rectangle2 d OUT o u t BOTTOM b o t t o m The the bitmask bitmask that that indicates indicate that that a a point point lies lie to to the the left left of of the the rectangle rectangle public static final int OUT o u t LEFT l e f t Rectangle2D rectangle2 d OUT o u t LEFT l e f t The the bitmask bitmask that that indicates indicate that that a a point point lies lie to to the the right right of of the the rectangle rectangle public static final int OUT o u t RIGHT r i g h t Rectangle2D rectangle2 d OUT o u t RIGHT r i g h t Returns the the direction direction OUT o u t TOP t o p OUT o u t BOTTOM b o t t o m OUT o u t LEFT l e f t OUT o u t RIGHT r i g h t from from one one point point to to another another one one public static int direction direction int x1 x1 int y1 y1 int x2 x2 int y2 y2 int direction direction 0 0 int vx vx x2 x2 x1 x1 int vy vy y2 y2 y1 y1 if vy vy vx vx vx vx vy vy direction direction OUT o u t RIGHT r i g h t else if vy vy vx vx vy vy vx vx direction direction OUT o u t TOP t o p else if vx vx vy vy vx vx vy vy direction direction OUT o u t LEFT l e f t else direction direction OUT o u t BOTTOM b o t t o m return direction direction Returns the the direction direction OUT o u t TOP t o p OUT o u t BOTTOM b o t t o m OUT o u t LEFT l e f t OUT o u t RIGHT r i g h t from from one one point point to to another another one one public static int direction direction double x1 x1 double y1 y1 double x2 x2 double y2 y2 int direction direction 0 0 double vx vx x2 x2 x1 x1 double vy vy y2 y2 y1 y1 if vy vy vx vx vx vx vy vy direction direction OUT o u t RIGHT r i g h t else if vy vy vx vx vy vy vx vx direction direction OUT o u t TOP t o p else if vx vx vy vy vx vx vy vy direction direction OUT o u t LEFT l e f t else direction direction OUT o u t BOTTOM b o t t o m return direction direction This method computes compute a a binary binary OR o r of of the the appropriate appropriate mask mask values value indicating indicate for each each side side of of Rectangle rectangle r1 r1 whether wheth or or not not the the Rectangle rectangle r2 r2 is is on on the the same same side side of of the the edge edge as a the the rest rest of of this Rectangle rectangle return the the logical logical OR o r of of all all appropriate appropriate out out codes OUT o u t RIGHT r i g h t OUT o u t LEFT l e f t OUT o u t BOTTOM b o t t o m OUT o u t TOP t o p public static int outcode outcode Rectangle rectangle r1 r1 Rectangle rectangle r2 r2 int outcode outcode 0 0 if r2 r2 x x r1 r1 x x + + r1 r1 width width outcode outcode OUT o u t RIGHT r i g h t else if r2 r2 x x + + r2 r2 width width r1 r1 x x outcode outcode OUT o u t LEFT l e f t if r2 r2 y y r1 r1 y y + + r1 r1 height height outcode outcode | | OUT o u t BOTTOM b o t t o m else if r2 r2 y y + + r2 r2 height height r1 r1 y y outcode outcode | | OUT o u t TOP t o p return outcode outcode This method computes compute a a binary binary OR o r of of the the appropriate appropriate mask mask values value indicating indicate for each each side side of of Rectangle rectangle r1 r1 whether wheth or or not not the the Rectangle rectangle r2 r2 is is on on the the same same side side of of the the edge edge as a the the rest rest of of this Rectangle rectangle return the the logical logical OR o r of of all all appropriate appropriate out out codes OUT o u t RIGHT r i g h t OUT o u t LEFT l e f t OUT o u t BOTTOM b o t t o m OUT o u t TOP t o p public static int outcode outcode Rectangle2D rectangle2 d Double r1 r1 Rectangle2D rectangle2 d Double r2 r2 int outcode outcode 0 0 if r2 r2 x x r1 r1 x x + + r1 r1 width width outcode outcode OUT o u t RIGHT r i g h t else if r2 r2 x x + + r2 r2 width width r1 r1 x x outcode outcode OUT o u t LEFT l e f t if r2 r2 y y r1 r1 y y + + r1 r1 height height outcode outcode | | OUT o u t BOTTOM b o t t o m else if r2 r2 y y + + r2 r2 height height r1 r1 y y outcode outcode | | OUT o u t TOP t o p return outcode outcode public static Point point south south Rectangle rectangle r r return new Point point r r x x + + r r width width 2 2 r r y y + + r r height height public static Point2D point2 d Double south south Rectangle2D rectangle2 d Double r r return new Point2D point2 d Double r r x x + + r r width width 2 2 r r y y + + r r height height public static Point point center center Rectangle rectangle r r return new Point point r r x x + + r r width width 2 2 r r y y + + r r height height 2 2 public static Point2D point2 d Double center center Rectangle2D rectangle2 d Double r r return new Point2D point2 d Double r r x x + + r r width width 2 2 r r y y + + r r height height 2 2 Returns a a point point on on the the edge edge of of the the bezier bezi path path which which crosses cross the the line line from from the the center center of of the the bezier bezi path path to to the the specified specify point point If no no edge edge crosses cross the the line line the the nearest near C0 c0 control control point point is is returned public static Point2D point2 d Double chop chop Shape shape shape shape Point2D point2 d Double p p Rectangle2D rectangle2 d bounds bound shape shape getBounds2D get bounds2 d Point2D point2 d Double ctr ctr new Point2D point2 d Double bounds bound getCenterX get center x bounds bound getCenterY get center y Chopped chop point point double cx cx 1 1 double cy cy 1 1 double len len Double MAX m a x VALUE v a l u e Try for points point along along edge edge PathIterator path iterator i i shape shape getPathIterator get path iterator new AffineTransform affine transform 1 1 double coords coord new double 6 6 int type type i i currentSegment current segment coords coord double prevX prev x coords coord 0 0 double prevY prev y coords coord 1 1 double moveToX move to x prevX prev x double moveToY move to y prevY prev y i i next next for i i isDone is i i next next switch i i currentSegment current segment coords coord case PathIterator path iterator SEG s e g MOVETO m o v e t o moveToX move to x coords coord 0 0 moveToY move to y coords coord 1 1 break case PathIterator path iterator SEG s e g CLOSE c l o s e coords coord 0 0 moveToX move to x coords coord 1 1 moveToY move to y break Point2D point2 d Double chop chop Geom geom intersect intersect prevX prev x prevY prev y coords coord 0 0 coords coord 1 1 p p x x p p y y ctr ctr x x ctr ctr y y if chop chop null double cl cl Geom geom length2 length2 chop chop x x chop chop y y p p x x p p y y if cl cl len len len len cl cl cx cx chop chop x x cy cy chop chop y y prevX prev x coords coord 0 0 prevY prev y coords coord 1 1 if isClosed is close size size 1 1 Node node first first get get 0 0 Node node last last get get size size 1 1 Point2D point2 d Double chop chop Geom geom intersect intersect first first x x 0 0 first first y y 0 0 last last x x 0 0 last last y y 0 0 p p x x p p y y ctr ctr x x ctr ctr y y if chop chop null double cl cl Geom geom length2 length2 chop chop x x chop chop y y p p x x p p y y if cl cl len len len len cl cl cx cx chop chop x x cy cy chop chop y y if none none found found pick pick closest close vertex vertex if len len Double MAX m a x VALUE v a l u e i i shape shape getPathIterator get path iterator new AffineTransform affine transform 1 1 for i i isDone is i i next next i i currentSegment current segment coords coord double l l Geom geom length2 length2 ctr ctr x x ctr ctr y y coords coord 0 0 coords coord 1 1 if l l len len len len l l cx cx coords coord 0 0 cy cy coords coord 1 1 return new Point2D point2 d Double cx cx cy cy public static Point point west west Rectangle rectangle r r return new Point point r r x x r r y y + + r r height height 2 2 public static Point2D point2 d Double west west Rectangle2D rectangle2 d Double r r return new Point2D point2 d Double r r x x r r y y + + r r height height 2 2 public static Point point east east Rectangle rectangle r r return new Point point r r x+r x+r width width r r y y + + r r height height 2 2 public static Point2D point2 d Double east east Rectangle2D rectangle2 d Double r r return new Point2D point2 d Double r r x+r x+r width width r r y y + + r r height height 2 2 public static Point point north north Rectangle rectangle r r return new Point point r r x+r x+r width width 2 2 r r y y public static Point2D point2 d Double north north Rectangle2D rectangle2 d Double r r return new Point2D point2 d Double r r x+r x+r width width 2 2 r r y y Constains constain a a value value to to the the given given range range return the the constrained constrain value value public static int range range int min min int max max int value value if value value min min value value min min if value value max max value value max max return value value Constains constain a a value value to to the the given given range range return the the constrained constrain value value public static double range range double min min double max max double value value if value value min min value value min min if value value max max value value max max return value value Gets get the the square square distance distance between between two two points point public static long length2 length2 int x1 x1 int y1 y1 int x2 x2 int y2 y2 return x2 x2 x1 x1 x2 x2 x1 x1 + + y2 y2 y1 y1 y2 y2 y1 y1 Gets get the the distance distance between between to to points point public static long length length int x1 x1 int y1 y1 int x2 x2 int y2 y2 return long Math math sqrt sqrt length2 length2 x1 x1 y1 y1 x2 x2 y2 y2 Gets get the the square square distance distance between between two two points point public static double length2 length2 double x1 x1 double y1 y1 double x2 x2 double y2 y2 return x2 x2 x1 x1 x2 x2 x1 x1 + + y2 y2 y1 y1 y2 y2 y1 y1 Gets get the the distance distance between between to to points point public static double length length double x1 x1 double y1 y1 double x2 x2 double y2 y2 return Math math sqrt sqrt length2 length2 x1 x1 y1 y1 x2 x2 y2 y2 Gets get the the distance distance between between to to points point public static double length length Point2D point2 d Double p1 p1 Point2D point2 d Double p2 p2 return Math math sqrt sqrt length2 length2 p1 p1 x x p1 p1 y y p2 p2 x x p2 p2 y y Caps cap the the line line defined define by by p1 p1 and and p2 p2 by by the the number number of of units unit specified specify by by radius radius return A a new end end point point for the the line line public static Point2D point2 d Double cap cap Point2D point2 d Double p1 p1 Point2D point2 d Double p2 p2 double radius radius double angle angle Math math PI p i 2 2 Math math atan2 atan2 p2 p2 x x p1 p1 x x p2 p2 y y p1 p1 y y Point2D point2 d Double p3 p3 new Point2D point2 d Double p2 p2 x x + + radius radius Math math cos co angle angle p2 p2 y y + + radius radius Math math sin sin angle angle return p3 p3 Gets get the the angle angle of of a a point point relative relative to to a a rectangle rectangle public static double pointToAngle point to angle Rectangle rectangle r r Point point p p int px px p p x x r r x x + + r r width width 2 2 int py py p p y y r r y y + + r r height height 2 2 return Math math atan2 atan2 py py r r width width px px r r height height Gets get the the angle angle of of a a point point relative relative to to a a rectangle rectangle public static double pointToAngle point to angle Rectangle2D rectangle2 d Double r r Point2D point2 d Double p p double px px p p x x r r x x + + r r width width 2 2 double py py p p y y r r y y + + r r height height 2 2 return Math math atan2 atan2 py py r r width width px px r r height height Gets get the the angle angle of of the the specified specify line line public static double angle angle double x1 x1 double y1 y1 double x2 x2 double y2 y2 return Math math atan2 atan2 y2 y2 y1 y1 x2 x2 x1 x1 Gets get the the point point on on a a rectangle rectangle that that corresponds correspond to to the the given given angle angle public static Point point angleToPoint angle to point Rectangle rectangle r r double angle angle double si si Math math sin sin angle angle double co co Math math cos co angle angle double e e 0 0 0001 0001 int x x 0 0 y y 0 0 if Math math abs ab si si e e x x int 1 1 0 0 + + co co Math math abs ab si si 2 2 0 0 r r width width x x range range 0 0 r r width width x x else if co co 0 0 0 0 x x r r width width if Math math abs ab co co e e y y int 1 1 0 0 + + si si Math math abs ab co co 2 2 0 0 r r height height y y range range 0 0 r r height height y y else if si si 0 0 0 0 y y r r height height return new Point point r r x x + + x x r r y y + + y y Gets get the the point point on on a a rectangle rectangle that that corresponds correspond to to the the given given angle angle public static Point2D point2 d Double angleToPoint angle to point Rectangle2D rectangle2 d Double r r double angle angle double si si Math math sin sin angle angle double co co Math math cos co angle angle double e e 0 0 0001 0001 double x x 0 0 y y 0 0 if Math math abs ab si si e e x x 1 1 0 0 + + co co Math math abs ab si si 2 2 0 0 r r width width x x range range 0 0 r r width width x x else if co co 0 0 0 0 x x r r width width if Math math abs ab co co e e y y 1 1 0 0 + + si si Math math abs ab co co 2 2 0 0 r r height height y y range range 0 0 r r height height y y else if si si 0 0 0 0 y y r r height height return new Point2D point2 d Double r r x x + + x x r r y y + + y y Converts convert a a polar polar to to a a point point public static Point point polarToPoint polar to point double angle angle double fx fx double fy fy double si si Math math sin sin angle angle double co co Math math cos co angle angle return new Point point int fx fx co+0 co+0 5 5 int fy fy si+0 si+0 5 5 Converts convert a a polar polar to to a a point point public static Point2D point2 d Double polarToPoint2D polar to point2 d double angle angle double fx fx double fy fy double si si Math math sin sin angle angle double co co Math math cos co angle angle return new Point2D point2 d Double fx fx co+0 co+0 5 5 fy fy si+0 si+0 5 5 Gets get the the point point on on an an oval oval that that corresponds correspond to to the the given given angle angle public static Point point ovalAngleToPoint oval angle to point Rectangle rectangle r r double angle angle Point point center center Geom geom center center r r Point point p p Geom geom polarToPoint polar to point angle angle r r width width 2 2 r r height height 2 2 return new Point point center center x x + + p p x x center center y y + + p p y y Gets get the the point point on on an an oval oval that that corresponds correspond to to the the given given angle angle public static Point2D point2 d Double ovalAngleToPoint oval angle to point Rectangle2D rectangle2 d Double r r double angle angle Point2D point2 d Double center center Geom geom center center r r Point2D point2 d Double p p Geom geom polarToPoint2D polar to point2 d angle angle r r width width 2 2 r r height height 2 2 return new Point2D point2 d Double center center x x + + p p x x center center y y + + p p y y Standard standard line line intersection intersection algorithm algorithm Return the the point point of of intersection intersection if it it exists else null from from Doug doug Lea lea s s PolygonFigure polygon figure public static Point point intersect intersect int xa xa line line 1 1 point point 1 1 x x int ya ya line line 1 1 point point 1 1 y y int xb xb line line 1 1 point point 2 2 x x int yb yb line line 1 1 point point 2 2 y y int xc xc line line 2 2 point point 1 1 x x int yc yc line line 2 2 point point 1 1 y y int xd xd line line 2 2 point point 2 2 x x int yd yd line line 2 2 point point 2 2 y y source source http http vision vision dai dai ed ed ac ac uk uk andrewfg andrewfg c c g g a a faq faq html html eq eq for lines line AB a b and and CD c d YA y a YC y c XD x d XC x c XA x a XC x c YD y d YC y c r r eqn eqn 1 1 XB x b XA x a YD y d YC y c YB y b YA y a XD x d XC x c YA y a YC y c XB x b XA x a XA x a XC x c YB y b YA y a s s eqn eqn 2 2 XB x b XA x a YD y d YC y c YB y b YA y a XD x d XC x c XI x i XA x a + + r r XB x b XA x a YI y i YA y a + + r r YB y b YA y a double denom denom xb xb xa xa yd yd yc yc yb yb ya ya xd xd xc xc double rnum rnum ya ya yc yc xd xd xc xc xa xa xc xc yd yd yc yc if denom denom 0 0 0 0 parallel parallel if rnum rnum 0 0 0 0 coincident coincident pick pick one one end end of of first first line line if xa xa xb xb xb xb xc xc || || xb xb xd xd || || xa xa xb xb xb xb xc xc || || xb xb xd xd return new Point point xb xb yb yb else return new Point point xa xa ya ya else return null double r r rnum rnum denom denom double snum snum ya ya yc yc xb xb xa xa xa xa xc xc yb yb ya ya double s s snum snum denom denom if 0 0 0 0 r r r r 1 1 0 0 0 0 0 0 s s s s 1 1 0 0 int px px int xa xa + + xb xb xa xa r r int py py int ya ya + + yb yb ya ya r r return new Point point px px py py else return null Standard standard line line intersection intersection algorithm algorithm Return the the point point of of intersection intersection if it it exists else null from from Doug doug Lea lea s s PolygonFigure polygon figure public static Point2D point2 d Double intersect intersect double xa xa line line 1 1 point point 1 1 x x double ya ya line line 1 1 point point 1 1 y y double xb xb line line 1 1 point point 2 2 x x double yb yb line line 1 1 point point 2 2 y y double xc xc line line 2 2 point point 1 1 x x double yc yc line line 2 2 point point 1 1 y y double xd xd line line 2 2 point point 2 2 x x double yd yd line line 2 2 point point 2 2 y y source source http http vision vision dai dai ed ed ac ac uk uk andrewfg andrewfg c c g g a a faq faq html html eq eq for lines line AB a b and and CD c d YA y a YC y c XD x d XC x c XA x a XC x c YD y d YC y c r r eqn eqn 1 1 XB x b XA x a YD y d YC y c YB y b YA y a XD x d XC x c YA y a YC y c XB x b XA x a XA x a XC x c YB y b YA y a s s eqn eqn 2 2 XB x b XA x a YD y d YC y c YB y b YA y a XD x d XC x c XI x i XA x a + + r r XB x b XA x a YI y i YA y a + + r r YB y b YA y a double denom denom xb xb xa xa yd yd yc yc yb yb ya ya xd xd xc xc double rnum rnum ya ya yc yc xd xd xc xc xa xa xc xc yd yd yc yc if denom denom 0 0 0 0 parallel parallel if rnum rnum 0 0 0 0 coincident coincident pick pick one one end end of of first first line line if xa xa xb xb xb xb xc xc || || xb xb xd xd || || xa xa xb xb xb xb xc xc || || xb xb xd xd return new Point2D point2 d Double xb xb yb yb else return new Point2D point2 d Double xa xa ya ya else return null double r r rnum rnum denom denom double snum snum ya ya yc yc xb xb xa xa xa xa xc xc yb yb ya ya double s s snum snum denom denom if 0 0 0 0 r r r r 1 1 0 0 0 0 0 0 s s s s 1 1 0 0 double px px xa xa + + xb xb xa xa r r double py py ya ya + + yb yb ya ya r r return new Point2D point2 d Double px px py py else return null public static Point2D point2 d Double intersect intersect double xa xa line line 1 1 point point 1 1 x x double ya ya line line 1 1 point point 1 1 y y double xb xb line line 1 1 point point 2 2 x x double yb yb line line 1 1 point point 2 2 y y double xc xc line line 2 2 point point 1 1 x x double yc yc line line 2 2 point point 1 1 y y double xd xd line line 2 2 point point 2 2 x x double yd yd double limit limit line line 2 2 point point 2 2 y y source source http http vision vision dai dai ed ed ac ac uk uk andrewfg andrewfg c c g g a a faq faq html html eq eq for lines line AB a b and and CD c d YA y a YC y c XD x d XC x c XA x a XC x c YD y d YC y c r r eqn eqn 1 1 XB x b XA x a YD y d YC y c YB y b YA y a XD x d XC x c YA y a YC y c XB x b XA x a XA x a XC x c YB y b YA y a s s eqn eqn 2 2 XB x b XA x a YD y d YC y c YB y b YA y a XD x d XC x c XI x i XA x a + + r r XB x b XA x a YI y i YA y a + + r r YB y b YA y a double denom denom xb xb xa xa yd yd yc yc yb yb ya ya xd xd xc xc double rnum rnum ya ya yc yc xd xd xc xc xa xa xc xc yd yd yc yc if denom denom 0 0 0 0 parallel parallel if rnum rnum 0 0 0 0 coincident coincident pick pick one one end end of of first first line line if xa xa xb xb xb xb xc xc || || xb xb xd xd || || xa xa xb xb xb xb xc xc || || xb xb xd xd return new Point2D point2 d Double xb xb yb yb else return new Point2D point2 d Double xa xa ya ya else return null double r r rnum rnum denom denom double snum snum ya ya yc yc xb xb xa xa xa xa xc xc yb yb ya ya double s s snum snum denom denom if 0 0 0 0 r r r r 1 1 0 0 0 0 0 0 s s s s 1 1 0 0 double px px xa xa + + xb xb xa xa r r double py py ya ya + + yb yb ya ya r r return new Point2D point2 d Double px px py py else double px px xa xa + + xb xb xa xa r r double py py ya ya + + yb yb ya ya r r if length length xa xa ya ya px px py py limit limit || || length length xb xb yb yb px px py py limit limit || || length length xc xc yc yc px px py py limit limit || || length length xd xd yd yd px px py py limit limit return new Point2D point2 d Double px px py py return null compute compute distance distance of of point point from from line line segment segment or or Double MAX m a x VALUE v a l u e if perpendicular perpendicular projection projection is is outside outside segment segment or or If pts pt on on line line are are same same return distance distance from from point point from from Doug doug Lea lea s s PolygonFigure polygon figure public static double distanceFromLine distance from line int xa xa int ya ya int xb xb int yb yb int xc xc int yc yc source source http http vision vision dai dai ed ed ac ac uk uk andrewfg andrewfg c c g g a a faq faq html html q7 q7 Let let the the point point be be C c XC x c YC y c and and the the line line be be AB a b XA x a YA y a to to XB x b YB y b The the length length of of the the line line segment segment AB a b is is L l | | 2 2 2 2 L l \| \| XB x b XA x a + + YB y b YA y a and and YA y a YC y c YA y a YB y b XA x a XC x c XB x b XA x a r r L l 2 2 YA y a YC y c XB x b XA x a XA x a XC x c YB y b YA y a s s L l 2 2 Let let I i be be the the point point of of perpendicular perpendicular projection projection of of C c onto onto AB a b the the XI x i XA+r x a+r XB x b XA x a YI y i YA+r y a+r YB y b YA y a Distance distance from from A a to to I i r r L l Distance distance from from C c to to I i s s L l If r r 0 0 I i is is on on backward backward extension extension of of AB a b If r r 1 1 I i is is on on ahead ahead extension extension of of AB a b If 0 0 r r 1 1 I i is is on on AB a b If s s 0 0 C c is is left left of of AB a b you you can can just just check check the the numerator numerator If s s 0 0 C c is is right right of of AB a b If s s 0 0 C c is is on on AB a b int xdiff xdiff xb xb xa xa int ydiff ydiff yb yb ya ya long l2 l2 xdiff xdiff xdiff xdiff + + ydiff ydiff ydiff ydiff if l2 l2 0 0 return Geom geom length length xa xa ya ya xc xc yc yc double rnum rnum ya ya yc yc ya ya yb yb xa xa xc xc xb xb xa xa double r r rnum rnum l2 l2 if r r 0 0 0 0 || || r r 1 1 0 0 return Double MAX m a x VALUE v a l u e double xi xi xa xa + + r r xdiff xdiff double yi yi ya ya + + r r ydiff ydiff double xd xd xc xc xi xi double yd yd yc yc yi yi return Math math sqrt sqrt xd xd xd xd + + yd yd yd yd for directional directional version instead instead use use double snum snum ya ya yc yc xb xb xa xa xa xa xc xc yb yb ya ya double s s snum snum l2 l2 double l l Math math sqrt sqrt double l2 l2 return s s l l Resizes resiz the the code Rectangle2D rectangle2 d Double code both both horizontally horizontally and and vertically vertically p p This method modifies modifie the the code Rectangle2D rectangle2 d Double code so so that that it it is is code h h code units unit larger large on on both both the the left left and and right right side side and and code v v code units unit larger large at at both both the the top top and and bottom bottom p p The the new code Rectangle2D rectangle2 d Double code has ha code x x nbsp nbsp h h code code y y nbsp nbsp v v code as a its it top top left left corner corner a a width width of of code width width code nbsp code + + code nbsp code 2h 2h code and and a a height height of of code height height code nbsp code + + code nbsp code 2v 2v code p p If negative negative values value are are supplied supply for code h h code and and code v v code the the size size of of the the code Rectangle2D rectangle2 d Double code decreases decrease accordingly accordingly The the code grow grow code method does doe not not check check whether wheth the the resulting result values value of of code width width code and and code height height code are are non non negative negative param h h the the horizontal horizontal expansion expansion param v v the the vertical vertical expansion expansion public static void grow grow Rectangle2D rectangle2 d Double r r double h h double v v r r x x h h r r y y v v r r width width + + h h 2d 2d r r height height + + v v 2d 2d 