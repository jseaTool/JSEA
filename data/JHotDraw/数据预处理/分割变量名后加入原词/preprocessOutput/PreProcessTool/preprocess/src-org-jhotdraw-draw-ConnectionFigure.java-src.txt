ConnectionFigure connection figure java 2 2 0 0 2006 2006 01 01 14 14 Copyright copyright c c 1996 1996 2006 2006 by by the the original original authors author of of JHotDraw jhotdraw and and all all its it contributors contributor JHotDraw jhotdraw org org All all rights right reserved reserve This software software is is the the confidential confidential and and proprietary proprietary information information of of JHotDraw jhotdraw org org Confidential confidential Information information You you shall shall not not disclose disclose such such Confidential confidential Information information and and shall shall use use it it only only in in accordance accordance with with the the terms term of of the the license license agreement agreement you you entered enter into into with with JHotDraw jhotdraw org org package org org jhotdraw jhotdraw draw draw import java awt awt import java awt awt geom geom import java util util Figures figure to to connect connect Connectors connector provided provide by by Figures figure A a ConnectionFigure connection figure knows know its it start start and and end end Connector connector It it uses us the the Connectors connector to to locate locate its it connection connection points point p p A a ConnectionFigure connection figure can can have have multiple multiple bezier bezi segments segment It it provides provide operations operation to to split split and and join join bezier bezi segments segment author author Werner wern Randelshofer randelshof version 2 2 0 0 2006 2006 01 01 14 14 Changed change to to support support double precision precision coordinates coordinate br 1 1 0 0 2003 2003 12 12 01 01 Derived derive from from JHotDraw jhotdraw 5 5 4b1 4b1 public interface ConnectionFigure connection figure extends Figure figure DRAWING d r a w i n g SHAPE s h a p e AND a n d BOUNDS b o u n d s ATTRIBUTES a t t r i b u t e s EDITING e d i t i n g CONNECTING c o n n e c t i n g Sets set the the start start Connector connector of of the the connection connection Set set this to to null to to disconnect disconnect the the start start connection connection param start start the the start start figure figure of of the the connection connection public void setStartConnector set start connector Connector connector start start Gets get the the start start Connector connector Returns null if there there is is no no start start connection connection public Connector connector getStartConnector get start connector Sets set the the end end Connector connector of of the the connection connection Set set this to to null to to disconnect disconnect the the end end connection connection param end end the the end end figure figure of of the the connection connection public void setEndConnector set end connector Connector connector end end Gets get the the end end Connector connector Returns null if there there is is no no end end connection connection public Connector connector getEndConnector get end connector Updates update the the connection connection FIXME f i x m e What what das da this do? do? public void updateConnection update connection Checks check if two two figures figure can can be be connected connect using using this ConnectionFigure connection figure Implement implement this method to to constrain constrain the the allowed allow connections connection between between figures figure public boolean canConnect can connect Figure figure start start Figure figure end end Checks check if this ConnectionFigure connection figure can can be be attached attach to to the the provided provide start start figure figure This is is used use to to provide provide an an early early feedback feedback to to the the user user when when he he she she creates create a a new connection connection public boolean canConnect can connect Figure figure start start Checks check if the the ConnectionFigure connection figure connects connect the the same same figures figure FIXME f i x m e What what do we we need need this for? for? public boolean connectsSame connect same ConnectionFigure connection figure other other Sets set the the start start point point public void setStartPoint set start point Point2D point2 d Double p p Sets set the the end end point point public void setEndPoint set end point Point2D point2 d Double p p Sets set the the specified specify point point public void setPoint set point int index index Point2D point2 d Double p p Gets get the the point point count count public int getPointCount get point count Returns the the specified specify point point public Point2D point2 d Double getPoint get point int index index Gets get the the start start point point public Point2D point2 d Double getStartPoint get start point Gets get the the end end point point public Point2D point2 d Double getEndPoint get end point Gets get the the start start figure figure of of the the connection connection This is is a a convenience convenience method for doing getStartConnector get start connector getOwner get owner and and handling handling null cases public Figure figure getStartFigure get start figure Gets get the the end end figure figure of of the the connection connection This is is a a convenience convenience method for doing getEndConnector get end connector getOwner get owner and and handling handling null cases public Figure figure getEndFigure get end figure COMPOSITE c o m p o s i t e FIGURES f i g u r e s Get get a a Liner liner object which which encapsulated encapsulate a a lineout lineout algorithm algorithm for this figure figure Typically typically a a Liner liner accesses access the the child child components component of of this figure figure and and arranges arrange their their graphical graphical presentation presentation return lineout lineout strategy strategy used use by by this figure figure public Liner liner getLiner get liner A a lineout lineout algorithm algorithm is is used use to to define define how how the the child child components component should should be be laid lay out out in in relation relation to to each each other other The the task task for lineouting lineout the the child child components component for presentation presentation is is delegated delegate to to a a Liner liner which which can can be be plugged plug in in at at runtime runtime public void lineout lineout Set set a a Liner liner object which which encapsulated encapsulate a a lineout lineout algorithm algorithm for this figure figure Typically typically a a Liner liner accesses access the the child child components component of of this figure figure and and arranges arrange their their graphical graphical presentation presentation It it is is a a good good idea idea to to set set the the Liner liner in in the the protected initialize initialize method so so it it can can be be recreated recreate if a a GraphicalCompositeFigure graphical composite figure is is read read and and restored restore from from a a StorableInput storable input stream stream param newValue value encapsulation encapsulation of of a a lineout lineout algorithm algorithm public void setLiner set liner Liner liner newValue value CLONING c l o n i n g EVENT e v e n t HANDLING h a n d l i n g 