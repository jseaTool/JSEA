AbstractEditorAction editor action java 1 1 1 1 2006 2006 03 03 15 15 Copyright copyright c c 1996 1996 2006 2006 by by the the original original authors author of of JHotDraw jhotdraw and and all all its it contributors contributor JHotDraw jhotdraw org org All all rights right reserved reserve This software software is is the the confidential confidential and and proprietary proprietary information information of of JHotDraw jhotdraw org org Confidential confidential Information information You you shall shall not not disclose disclose such such Confidential confidential Information information and and shall shall use use it it only only in in accordance accordance with with the the terms term of of the the license license agreement agreement you you entered enter into into with with JHotDraw jhotdraw org org package org org jhotdraw jhotdraw draw draw action action import org org jhotdraw jhotdraw draw draw Drawing drawing import org org jhotdraw jhotdraw draw draw DrawingEditor drawing editor import org org jhotdraw jhotdraw draw draw DrawingView drawing view import org org jhotdraw jhotdraw util util import javax javax swing swing import javax javax swing swing undo undo import java util util import java beans bean Abstract super class for actions action which which act act on on a a DrawingEditor drawing editor author author Werner wern Randelshofer randelshof version 1 1 1 1 2006 2006 03 03 15 15 Support support for enabled enable state state of of editor editor added add br 1 1 0 0 2003 2003 12 12 01 01 Created create public abstract class AbstractEditorAction editor action extends AbstractAction action protected DrawingEditor drawing editor editor editor protected final static ResourceBundleUtil resource bundle util labels label ResourceBundleUtil resource bundle util getLAFBundle get l a f bundle org org jhotdraw jhotdraw draw draw Labels label Locale locale getDefault get private PropertyChangeListener property change listener propertyChangeHandler property change handler new PropertyChangeListener property change listener public void propertyChange property change PropertyChangeEvent property change event evt evt if evt evt getPropertyName get property name equals equal enabled enable updateEnabledState update enable state Creates create a a new instance instance public AbstractEditorAction editor action DrawingEditor drawing editor editor editor this editor editor editor editor if editor editor null editor editor addPropertyChangeListener add property change listener propertyChangeHandler property change handler updateEnabledState update enable state public void setEditor set editor DrawingEditor drawing editor newValue value if editor editor null editor editor removePropertyChangeListener remove property change listener propertyChangeHandler property change handler editor editor newValue value if editor editor null editor editor addPropertyChangeListener add property change listener propertyChangeHandler property change handler updateEnabledState update enable state public void updateEnabledState update enable state setEnabled set enable editor editor null editor editor isEnabled is enable public DrawingEditor drawing editor getEditor get editor return editor editor protected DrawingView drawing view getView get view return editor editor getView get view protected Drawing drawing getDrawing get drawing return getView get view getDrawing get drawing protected void fireUndoableEditHappened fire undoable edit happen UndoableEdit undoable edit edit edit getDrawing get drawing fireUndoableEditHappened fire undoable edit happen edit edit 