AbstractConnector connector java 2 2 1 1 2006 2006 06 06 05 05 Copyright copyright c c 1996 1996 2006 2006 by by the the original original authors author of of JHotDraw jhotdraw and and all all its it contributors contributor JHotDraw jhotdraw org org All all rights right reserved reserve This software software is is the the confidential confidential and and proprietary proprietary information information of of JHotDraw jhotdraw org org Confidential confidential Information information You you shall shall not not disclose disclose such such Confidential confidential Information information and and shall shall use use it it only only in in accordance accordance with with the the terms term of of the the license license agreement agreement you you entered enter into into with with JHotDraw jhotdraw org org ??? ??? package org org jhotdraw jhotdraw draw draw import java io io IOException i o import org org jhotdraw jhotdraw util util import java awt awt import java awt awt geom geom import org org jhotdraw jhotdraw geom geom import org org jhotdraw jhotdraw xml xml DOMInput dom input import org org jhotdraw jhotdraw xml xml DOMOutput dom output AbstractConnector connector provides provide default implementation for the the Connector connector interface see see Connector connector author author Werner wern Randelshofer randelshof version 2 2 1 1 2006 2006 06 06 05 05 Support support connection connection to to decorator decorator br 2 2 0 0 2006 2006 01 01 14 14 Changed change to to support support doubl doubl precision precision coordinates coordinate br 1 1 0 0 2003 2003 12 12 01 01 Derived derive from from JHotDraw jhotdraw 5 5 4b1 4b1 public class AbstractConnector connector implements Connector connector The the owner owner of of the the connector connector private Figure figure owner owner Whether wheth we we should should connect connect to to the the figure figure or or to to its it decorator decorator private boolean isConnectToDecorator is connect to decorator Whether wheth we we are are visible visible private boolean isVisible is visible Whether wheth the the state state of of this connector connector is is persistent persistent Set set this to to true only only when when the the user user interface allows allow to to change change the the state state of of the the connector connector private boolean isStatePersistent is state persistent Constructs construct a a connector connector that that has ha no no owner owner It it is is only only used use internally internally to to resurrect resurrect a a connectors connector from from a a StorableOutput storable output It it should should never nev be be called call directly directly public AbstractConnector connector owner owner null Constructs construct a a connector connector with with the the given given owner owner figure figure public AbstractConnector connector Figure figure owner owner this owner owner owner owner public void setConnectToDecorator set connect to decorator boolean newValue value isConnectToDecorator is connect to decorator newValue value public boolean isConnectToDecorator is connect to decorator return isConnectToDecorator is connect to decorator public void setVisible set visible boolean newValue value isVisible is visible newValue value public boolean isVisible is visible return isVisible is visible protected final Figure figure getConnectorTarget get connector target Figure figure f f return isConnectToDecorator is connect to decorator f f getDecorator get decorator null ? ? f f getDecorator get decorator f f Tests test if a a point point is is contained contain in in the the connector connector public boolean contains contain Point2D point2 d Double p p return getOwner get owner contains contain p p Draws draw this connector connector By by default connectors connector are are invisible invisible public void draw draw Graphics2D graphics2 d g g if isVisible is visible Rectangle2D rectangle2 d Double bounds bound getBounds get bound Ellipse2D ellipse2 d Double circle circle new Ellipse2D ellipse2 d Double bounds bound x x + + bounds bound width width 2 2 3 3 bounds bound y y + + bounds bound height height 2 2 3 3 6 6 6 6 g g setColor set color Color color blue blue g g fill fill circle circle public Point2D point2 d Double findStart find start ConnectionFigure connection figure connection connection return findPoint find point connection connection public Point2D point2 d Double findEnd find end ConnectionFigure connection figure connection connection return findPoint find point connection connection Gets get the the connection connection point point Override override when when the the connector connector does doe not not need need to to distinguish distinguish between between the the start start and and end end point point of of a a connection connection protected Point2D point2 d Double findPoint find point ConnectionFigure connection figure connection connection return Geom geom center center getBounds get bound public Rectangle2D rectangle2 d Double getBounds get bound return getOwner get owner getBounds get bound Gets get the the connector connector s s owner owner public Figure figure getOwner get owner return owner owner Sets set the the connector connector s s owner owner protected void setOwner set owner Figure figure newValue value owner owner newValue value public Object clone clone try AbstractConnector connector that that AbstractConnector connector super clone clone return that that catch CloneNotSupportedException clone not support e e InternalError internal error new InternalError internal e e toString to error initCause init cause e e requires require JDK j d k 1 1 4 4 throw error This is is called call when when the the start start location location of of the the connection connection has ha been be moved move by by the the user user The the user user has ha this probably probably done to to adjust adjust the the layout layout The the connector connector may may use use this as a a a hint hint to to improve improve the the results result for the the next next call call to to findEnd find end public void updateStartLocation update start location Point2D point2 d Double p p This is is called call when when the the end end location location of of the the connection connection has ha been be moved move by by the the user user The the user user has ha this probably probably done to to adjust adjust the the layout layout The the connector connector may may use use this as a a a hint hint to to improve improve the the results result for the the next next call call to to findStart find start public void updateEndLocation update end location Point2D point2 d Double p p public Point2D point2 d Double getAnchor get anchor return Geom geom center center getBounds get bound public void updateAnchor update anchor Point2D point2 d Double p p public void read read DOMInput dom input in in throws IOException i o if isStatePersistent is state persistent isConnectToDecorator is connect to decorator in in getAttribute get attribute connectToDecorator connect to decorator false isVisible is visible in in getAttribute get attribute visible visible false in in openElement open element owner owner this owner owner Figure figure in in readObject read 0 0 in in closeElement close element public void write write DOMOutput dom output out out throws IOException i o if isStatePersistent is state persistent if isConnectToDecorator is connect to decorator out out addAttribute add attribute connectToDecorator connect to decorator true if isVisible is visible out out addAttribute add attribute visible visible true out out openElement open element owner owner out out writeObject write getOwner get owner out out closeElement close element 