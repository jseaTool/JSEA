TextAreaFigure text area figure java 2 2 0 0 1 1 2006 2006 02 02 27 27 Copyright copyright c c 1996 1996 2006 2006 by by the the original original authors author of of JHotDraw jhotdraw and and all all its it contributors contributor JHotDraw jhotdraw org org All all rights right reserved reserve This software software is is the the confidential confidential and and proprietary proprietary information information of of JHotDraw jhotdraw org org Confidential confidential Information information You you shall shall not not disclose disclose such such Confidential confidential Information information and and shall shall use use it it only only in in accordance accordance with with the the terms term of of the the license license agreement agreement you you entered enter into into with with JHotDraw jhotdraw org org ??? ??? package org org jhotdraw jhotdraw draw draw import org org jhotdraw jhotdraw util util import java awt awt import java awt awt font font import java awt awt geom geom import java text text import java util util import java io io import static org org jhotdraw jhotdraw draw draw AttributeKeys attribute key import org org jhotdraw jhotdraw geom geom import org org jhotdraw jhotdraw xml xml DOMInput dom input import org org jhotdraw jhotdraw xml xml DOMOutput dom output A a TextAreaFigure text area figure contains contain formatted format text text br It it automatically automatically rearranges rearrange the the text text to to fit fit its it allocated allocate display display area area breaking breaking the the lines line at at word word boundaries boundary whenever whenev possible possible br The the text text can can contain contain either eith LF l f or or CRLF c r l f sequences sequence to to separate separate paragraphs paragraph as a well well as a tab tab characters character for table table like like formatting formatting and and alignment alignment br Currently currently the the tabs tab are are distributed distribute at at regular regular intervals interval as a determined determine by by the the TabSize tab size property property Tabs tab align align correctly correctly with with either eith fixed fix or or variable variable fonts font br If when when resizing resize the the vertical vertical size size of of the the display display box box is is not not enough enough to to display display all all the the text text TextAreaFigure text area figure displays display a a dashed dash red red line line at at the the bottom bottom of of the the figure figure to to indicate indicate there there is is hidden hide text text br TextAreFigure text are figure uses us all all standard standard attributes attribute for the the area area Rectangle2D rectangle2 d Double ie ie FillColor fill color PenColor pen color for the the border border FontSize font size FontStyle font style and and FontName font name as a well well as a four four additional additional attributes attribute LeftMargin left margin RightMargin right margin TopMargin top margin and and TabSize tab size br p p XXX x x x TextAreaFigure text area figure should should not not draw draw a a rectangle rectangle on on its it own own but but rather rath rely rely on on a a decorator decorator We we probably probably need need a a DecoratorConnector decorator connector for this and and we we need need a a way way to to specify specify the the inner inner bounds bound of of the the decorator decorator We we also also need need a a way way to to center center the the text text of of the the TextAreaFigure text area figure verticaly verticaly and and horizontaly horizontaly author author Eduardo eduardo Francos franco InContext in context original original version Werner wern Randelshofer randelshof this derived derive version version 2 2 0 0 1 1 2006 2006 02 02 27 27 Draw draw UNDERLINE u n d e r l i n e LOW l o w ONE o n e PIXEL p i x e l instead instead of of UNDERLINE u n d e r l i n e ON o n br 2 2 0 0 2006 2006 01 01 14 14 Changed change to to support support double precison coordinates coordinate br 1 1 0 0 5 5 M???rz m???rz 2004 2004 Created create public class TextAreaFigure text area figure extends AttributedFigure attribute figure implements TextHolder text holder private Rectangle2D rectangle2 d Double bounds bound new Rectangle2D rectangle2 d Double private boolean editable editable true private final static BasicStroke basic stroke dashes dash new BasicStroke basic stroke 1f 1f BasicStroke basic stroke CAP c a p BUTT b u t t BasicStroke basic stroke JOIN j o i n BEVEL b e v e l 0f 0f new float 4f 4f 4f 4f 0f 0f cache cache of of the the TextFigure text figure s s layout layout transient private TextLayout text layout textLayout text layout Creates create a a new instance instance public TextAreaFigure text area figure this Text text public TextAreaFigure text area figure String text text setText set text text text Gets get the the text text shown show by by the the text text figure figure public String getText get text return String getAttribute get attribute TEXT t e x t Sets set the the text text shown show by by the the text text figure figure public void setText set text String newText text setAttribute set attribute TEXT t e x t newText text public void basicSetBounds basic set bound Point2D point2 d Double anchor anchor Point2D point2 d Double lead bounds bound x x Math math min min anchor anchor x x lead x x bounds bound y y Math math min min anchor anchor y y lead y y bounds bound width width Math math max max 1 1 Math math abs ab lead x x anchor anchor x x bounds bound height height Math math max max 1 1 Math math abs ab lead y y anchor anchor y y textLayout text layout null public void basicTransform basic transform AffineTransform affine transform tx tx Point2D point2 d Double anchor anchor getStartPoint get start point Point2D point2 d Double lead getEndPoint get end point basicSetBounds basic set bound Point2D point2 d Double tx tx transform transform anchor anchor anchor anchor Point2D point2 d Double tx tx transform transform lead lead public boolean contains contain Point2D point2 d Double p p return bounds bound contains contain p p Returns the the insets inset used use to to draw draw text text public Insets2DDouble insets2 d getInsets get inset double sw sw Math math ceil ceil STROKE s t r o k e WIDTH w t h get get this 2 2 Insets2DDouble insets2 d insets inset new Insets2DDouble insets2 d 4 4 4 4 4 4 4 4 return new Insets2DDouble insets2 d insets inset top+sw top+sw insets inset left+sw left+sw insets inset bottom+sw bottom+sw insets inset right+sw right+sw public int getTabSize get tab size return 8 8 protected void drawText draw text Graphics2D graphics2 d g g if getText get text null || || isEditable is editable Font font font font getFont get font boolean isUnderlined is underline FONT f o n t UNDERLINED u n d e r l i n e d get get this Insets2DDouble insets2 d insets inset getInsets get inset Rectangle2D rectangle2 d Double textRect text rect new Rectangle2D rectangle2 d Double bounds bound x x + + insets inset left left bounds bound y y + + insets inset top top bounds bound width width insets inset left left insets inset right right bounds bound height height insets inset top top insets inset bottom bottom float leftMargin left margin float textRect text rect x x float rightMargin right margin float Math math max max leftMargin left margin + + 1 1 textRect text rect x x + + textRect text rect width width float verticalPos vertical po float textRect text rect y y if leftMargin left margin rightMargin right margin float tabWidth tab width float getTabSize get tab size g g getFontMetrics get font metric font font charWidth width m m float tabStops tab stop new float int textRect text rect width width tabWidth tab width for int i i 0 0 i i tabStops tab stop length length i++ i++ tabStops tab stop i i float textRect text rect x x + + int tabWidth tab width i i + + 1 1 if getText get text null Shape shape savedClipArea save clip area g g getClip get clip g g clip clip textRect text rect String paragraphs paragraph getText get text split split Strings split split getText get text for int i i 0 0 i i paragraphs paragraph length length i++ i++ if paragraphs paragraph i i length length 0 0 paragraphs paragraph i i AttributedString attribute as a new AttributedString attribute paragraphs paragraph i i as a addAttribute add attribute TextAttribute text attribute FONT f o n t font font if isUnderlined is underline as a addAttribute add attribute TextAttribute text attribute UNDERLINE u n d e r l i n e TextAttribute text attribute UNDERLINE u n d e r l i n e LOW l o w ONE o n e PIXEL p i x e l int tabCount tab count new StringTokenizer tokeniz paragraphs paragraph i i countTokens count token 1 1 verticalPos vertical po drawParagraph draw paragraph g g as a getIterator get iterator verticalPos vertical po leftMargin left margin rightMargin right margin tabStops tab stop tabCount tab count if verticalPos vertical po textRect text rect y y + + textRect text rect height height break g g setClip set clip savedClipArea save clip area if leftMargin left margin rightMargin right margin || || verticalPos vertical po textRect text rect y y + + textRect text rect height height g g setColor set color Color color red red g g setStroke set stroke dashes dash g g draw draw new Line2D line2 d Double textRect text rect x x textRect text rect y y + + textRect text rect height height 1 1 textRect text rect x x + + textRect text rect width width 1 1 textRect text rect y y + + textRect text rect height height 1 1 Draws draw a a paragraph paragraph of of text text at at the the specified specify y y location location and and returns the the y y position position for the the next next paragraph paragraph private float drawParagraph draw paragraph Graphics2D graphics2 d g g AttributedCharacterIterator attribute character iterator styledText style text float verticalPos vertical po float leftMargin left margin float rightMargin right margin float tabStops tab stop int tabCount tab count assume assume styledText style text is is an an AttributedCharacterIterator attribute character iterator and and the the number number of of tabs tab in in styledText style text is is tabCount tab count int tabLocations tab location new int tabCount+1 tab count+1 int i i 0 0 for char c c styledText style text first first c c styledText style text DONE d o n e c c styledText style text next next if c c tabLocations tab location i++ i++ styledText style text getIndex get index tabLocations tab location tabCount tab count styledText style text getEndIndex get end index 1 1 Now now tabLocations tab location has ha an an entry entry for every every tab tab s s offset offset in in the the text text For convenience convenience the the last last entry entry is is tabLocations tab location is is the the offset offset of of the the last last character character in in the the text text LineBreakMeasurer line measurer measurer measurer new LineBreakMeasurer line measurer styledText style text getFontRenderContext get font render context int currentTab current tab 0 0 while measurer measurer getPosition get position styledText style text getEndIndex get end index Lay lay out out and and draw draw each each line line All all segments segment on on a a line line must must be be computed compute before before any any drawing drawing can can occur occur since since we we must must know know the the largest large ascent ascent on on the the line line TextLayouts text layout are are computed compute and and stored store in in a a List list their their horizontal horizontal positions position are are stored store in in a a parallel parallel List list lineContainsText line contain text is is true after after first first segment segment is is drawn draw boolean lineContainsText line contain text false boolean lineComplete line complete false float maxAscent max ascent 0 0 maxDescent max descent 0 0 float horizontalPos horizontal po leftMargin left margin LinkedList link list TextLayout text layout layouts layout new LinkedList link list TextLayout text layout LinkedList link list Float penPositions pen position new LinkedList link list Float while lineComplete line complete float wrappingWidth wrapping width rightMargin right margin horizontalPos horizontal po TextLayout text layout layout layout null layout layout measurer measurer nextLayout next layout wrappingWidth wrapping width tabLocations tab location currentTab current tab +1 +1 lineContainsText line contain text layout layout can can be be null if lineContainsText line contain text is is true if layout layout null layouts layout add add layout layout penPositions pen position add add horizontalPos horizontal po horizontalPos horizontal po + + layout layout getAdvance get advance maxAscent max ascent Math math max max maxAscent max ascent layout layout getAscent get ascent maxDescent max descent Math math max max maxDescent max descent layout layout getDescent get descent + + layout layout getLeading get leading else lineComplete line complete true lineContainsText line contain text true if measurer measurer getPosition get position tabLocations tab location currentTab current tab +1 +1 currentTab++ current tab++ if measurer measurer getPosition get position styledText style text getEndIndex get end index lineComplete line complete true else if tabStops tab stop length length 0 0 || || horizontalPos horizontal po tabStops tab stop tabStops tab stop length length 1 1 lineComplete line complete true if lineComplete line complete move move to to next next tab tab stop stop int j j for j j 0 0 horizontalPos horizontal po tabStops tab stop j j j++ j++ horizontalPos horizontal po tabStops tab stop j j verticalPos vertical po + + maxAscent max ascent Iterator iterator TextLayout text layout layoutEnum layout layouts layout iterator iterator Iterator iterator Float positionEnum position penPositions pen position iterator iterator now now iterate iterate through through layouts layout and and draw draw them them while layoutEnum layout hasNext ha next TextLayout text layout nextLayout next layout layoutEnum layout next next float nextPosition next position positionEnum position next next nextLayout next layout draw draw g g nextPosition next position verticalPos vertical po verticalPos vertical po + + maxDescent max descent return verticalPos vertical po protected void drawFill draw fill Graphics2D graphics2 d g g g g fill fill bounds bound protected void drawStroke draw stroke Graphics2D graphics2 d g g g g draw draw bounds bound public Rectangle2D rectangle2 d Double getBounds get bound return Rectangle2D rectangle2 d Double bounds bound getBounds2D get bounds2 d public Collection collection Handle handle createHandles create handle int detailLevel detail level LinkedList link list Handle handle handles handle LinkedList link list Handle handle super createHandles create handle detailLevel detail level if detailLevel detail level 0 0 handles handle add add new FontSizeHandle font size handle this return handles handle protected void validate validate super validate validate textLayout text layout null public boolean isEditable is editable return editable editable public void setEditable set editable boolean b b this editable editable b b public int getTextColumns get text column return getText get text null ? ? 4 4 Math math max max getText get text length length 4 4 Returns a a specialized specialize tool tool for the the given given coordinate coordinate p p Returns null if no no specialized specialize tool tool is is available available public Tool tool getTool get tool Point2D point2 d Double p p return isEditable is editable contains contain p p ? ? new TextAreaTool text area tool this null protected void readBounds read bound DOMInput dom input in in throws IOException i o bounds bound x x in in getAttribute get attribute x x 0d 0d bounds bound y y in in getAttribute get attribute y y 0d 0d bounds bound width width in in getAttribute get attribute w w 0d 0d bounds bound height height in in getAttribute get attribute h h 0d 0d protected void writeBounds write bound DOMOutput dom output out out throws IOException i o out out addAttribute add attribute x x bounds bound x x out out addAttribute add attribute y y bounds bound y y out out addAttribute add attribute w w bounds bound width width out out addAttribute add attribute h h bounds bound height height public void read read DOMInput dom input in in throws IOException i o readBounds read bound in in readAttributes read attribute in in textLayout text layout null public void write write DOMOutput dom output out out throws IOException i o writeBounds write bound out out writeAttributes write attribute out out public TextAreaFigure text area figure clone clone TextAreaFigure text area figure that that TextAreaFigure text area figure super clone clone that that bounds bound Rectangle2D rectangle2 d Double this bounds bound clone clone return that that public TextHolder text holder getLabelFor get label return this public void restoreTo restore to Object geometry geometry Rectangle2D rectangle2 d Double r r Rectangle2D rectangle2 d Double geometry geometry bounds bound x x r r x x bounds bound y y r r y y bounds bound width width r r width width bounds bound height height r r height height public Object getRestoreData get restore data return bounds bound clone clone public Font font getFont get font return AttributeKeys attribute key getFont get font this public Color color getTextColor get text color return TEXT t e x t COLOR c o l o r get get this public Color color getFillColor get fill color return FILL f i l l COLOR c o l o r get get this public void setFontSize set font size float size size FONT f o n t SIZE s i z e set set this new Double size size public float getFontSize get font size return FONT f o n t SIZE s i z e get get this floatValue value 