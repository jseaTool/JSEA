Werner wern Randelshofer randelshof 2006 2006 05 05 26 26 Replaced replace Java 1 1 1 1 collections collection by by Java 1 1 2 2 collections collection Removed remove all all deprecated deprecate methods Added add method createElement create element String name name Added add method getIntAttribute get attribute String name name int min min int max max int defaultValue value Added add method getBooleanAttribute get attribute String name name boolean defaultValue value Added add method print print Writer writer w w Method writeEncoded write encode can can be be changed change to to not not encode encode unicode unicode characters character 2006 2006 05 05 02 02 XMLElement xml element java $Revision $ revision 1 1 4 4 $ $ $Date $ date 2002 2002 03 03 24 24 10 10 27 27 59 59 $ $ $Name $ name RELEASE r e l e a s e 2 2 2 2 1 1 $ $ This file is is part part of of NanoXML nano xml 2 2 Lite lite Copyright copyright C c 2000 2000 2002 2002 Marc marc De de Scheemaecker scheemaeck All all Rights right Reserved reserve This software software is is provided provide as a is is without without any any express express or or implied imply warranty warranty In in no no event event will will the the authors author be be held hold liable liable for any any damages damage arising arise from from the the use use of of this software software Permission permission is is granted grant to to anyone anyone to to use use this software software for any any purpose purpose including include commercial commercial applications application and and to to alter alter it it and and redistribute redistribute it it freely freely subject subject to to the the following following restrictions restriction 1 1 The the origin origin of of this software software must must not not be be misrepresented misrepresent you you must must not not claim claim that that you you wrote write the the original original software software If you you use use this software software in in a a product product an an acknowledgment acknowledgment in in the the product product documentation documentation would would be be appreciated appreciate but but is is not not required require 2 2 Altered alter source source versions must must be be plainly plainly marked mark as a such such and and must must not not be be misrepresented misrepresent as a being being the the original original software software 3 3 This notice notice may may not not be be removed remove or or altered alter from from any any source source distribution distribution package nanoxml nanoxml import java io io import java util util XMLElement xml element is is a a representation representation of of an an XML xml object The the object is is able able to to parse parse XML xml code P p DL d l DT d t B b Parsing parse XML xml Data data B b DT d t DD d d You you can can parse parse XML xml data data using using the the following following code UL u l CODE c o d e XMLElement xml element xml xml new XMLElement xml element BR b r FileReader reader reader reader new FileReader reader filename filename xml xml BR b r xml xml parseFromReader parse from reader reader reader CODE c o d e UL u l DD d d DL d l DL d l DT d t B b Retrieving retrieve Attributes attribute B b DT d t DD d d You you can can enumerate enumerate the the attributes attribute of of an an element element using using the the method link link enumerateAttributeNames enumerate attribute name enumerateAttributeNames enumerate attribute name The the attribute attribute values value can can be be retrieved retrieve using using the the method link link getStringAttribute get attribute java lang lang String getStringAttribute get attribute The the following following example example shows show how how to to list list the the attributes attribute of of an an element element UL u l CODE c o d e XMLElement xml element element element BR b r Iterator iterator iter it element element getAttributeNames get attribute name BR b r while iter it hasNext ha next BR b r nbsp nbsp nbsp nbsp String key key String iter it next next BR b r nbsp nbsp nbsp nbsp String value value element element getStringAttribute get attribute key key BR b r nbsp nbsp nbsp nbsp System out out println key key + + + + value value BR b r CODE c o d e UL u l DD d d DL d l DL d l DT d t B b Retrieving retrieve Child child Elements element B b DT d t DD d d You you can can enumerate enumerate the the children child of of an an element element using using link link iterateChildren iterate child iterateChildren iterate child The the number number of of child child iterator iterator can can be be retrieved retrieve using using link link countChildren count child countChildren count child DD d d DL d l DL d l DT d t B b Elements element Containing contain Character character Data data B b DT d t DD d d If an an iterator iterator contains contain character character data data like like in in the the following following example example UL u l CODE c o d e lt lt title title gt The the Title title lt lt title title gt CODE c o d e UL u l you you can can retrieve retrieve that that data data using using the the method link link getContent get content getContent get content DD d d DL d l DL d l DT d t B b Subclassing subclass XMLElement xml element B b DT d t DD d d When when subclassing subclass XMLElement xml element you you need need to to override override the the method link link createElement create element createElement create element which which has ha to to return a a new copy copy of of the the receiver receiver DD d d DL d l P p author author Marc marc De de Scheemaecker scheemaeck lt lt A a href href mailto mailto cyberelf cyberelf mac mac com com cyberelf cyberelf mac mac com com A a gt version 2005 2005 06 06 18 18 Werner wern Randelshofer randelshof Adapted adapt for Java 2 2 Collections collection API a p i br $Name $ name RELEASE r e l e a s e 2 2 2 2 1 1 $ $ $Revision $ revision 1 1 4 4 $ $ see see nanoxml nanoxml XMLParseException xml parse public class XMLElement xml element Serialization serialization serial serial version ID static final long serialVersionUID serial u 6685035139346394777L 6685035139346394777 l Major major version of of NanoXML nano xml Classes with with the the same same major major and and minor minor version are are binary binary compatible compatible Classes with with the the same same major major version are are source source compatible compatible If the the major major version is is different different you you may may need need to to modify modify the the client client source source code see see NANOXML n a n o xml MINOR m i n o r VERSION v e r s i o n public static final int NANOXML n a n o xml MAJOR m a j o r VERSION v e r s i o n 2 2 Minor minor version of of NanoXML nano xml Classes with with the the same same major major and and minor minor version are are binary binary compatible compatible Classes with with the the same same major major version are are source source compatible compatible If the the major major version is is different different you you may may need need to to modify modify the the client client source source code see see NANOXML n a n o xml MAJOR m a j o r VERSION v e r s i o n public static final int NANOXML n a n o xml MINOR m i n o r VERSION v e r s i o n 2 2 The the attributes attribute given given to to the the element element dl dt b b Invariants invariant b b dt dd ul li The the field field can can be be empty empty li The the field field is is never nev code null code li The the keySet key set iterator iterator and and the the values value are are strings ul dd dl private HashMap hash map attributes attribute Child child iterator iterator of of the the element element dl dt b b Invariants invariant b b dt dd ul li The the field field can can be be empty empty li The the field field is is never nev code null code li The the iterator iterator are are instances instance of of code XMLElement xml element code or or a a subclass subclass of of code XMLElement xml element code ul dd dl private ArrayList list children child The the name name of of the the element element dl dt b b Invariants invariant b b dt dd ul li The the field field is is code null code iff iff the the element element is is not not initialized initialize by by either eith parse parse or or setName set name li If the the field field is is not not code null code it it s s not not empty empty li If the the field field is is not not code null code it it contains contain a a valid valid XML xml identifier identifier ul dd dl private String name name The the PCDATA p c d a t a content content of of the the object dl dt b b Invariants invariant b b dt dd ul li The the field field is is code null code iff iff the the element element is is not not a a PCDATA p c d a t a element element li The the field field can can be be any any string including include the the empty empty string ul dd dl private String contents content Conversion conversion table table for amp amp entities entity The the keySet key set iterator iterator are are the the entity entity names name without without the the amp amp and and delimiters delimiter dl dt b b Invariants invariant b b dt dd ul li The the field field is is never nev code null code li The the field field always alway contains contain the the following following associations association lt lt nbsp gt nbsp lt lt gt nbsp gt nbsp gt quot nbsp gt nbsp \ \ apos apo nbsp gt nbsp amp amp nbsp gt nbsp amp amp li The the keySet key set iterator iterator are are strings li The the values value are are char arrays ul dd dl private HashMap hash map entities entity The the line line number number where where the the element element starts start dl dt b b Invariants invariant b b dt dd ul li code lineNr line nr gt 0 0 code ul dd dl private int lineNr line nr code true code if the the case of of the the element element and and attribute attribute names name are are case insensitive insensitive private boolean ignoreCase ignore code true code if the the leading leading and and trailing trailing whitespace whitespace of of PCDATA p c d a t a sections section have have to to be be ignored ignore private boolean ignoreWhitespace ignore whitespace Character character read read too too much much This character character provides provide push push back back functionality functionality to to the the input input reader reader without without having have to to use use a a PushbackReader pushback reader If there there is is no no such such character character this field field is is \0 \0 private char charReadTooMuch read too much The the reader reader provided provide by by the the caller caller of of the the parse parse method dl dt b b Invariants invariant b b dt dd ul li The the field field is is not not code null code while the the parse parse method is is running running ul dd dl private Reader reader reader reader The the current current line line number number in in the the source source content content dl dt b b Invariants invariant b b dt dd ul li parserLineNr parser line nr gt 0 0 while the the parse parse method is is running running ul dd dl private int parserLineNr parser line nr Werner wern Randelshofer randelshof If this variable variable is is set set to to false Unicode unicode characters character are are not not encoded encode into into entities entity The the encoding encoding is is left left to to the the underlying underlie writer writer private boolean isEncodeUnicodeCharacters is encode unicode character true Creates create and and initializes initializ a a new XML xml element element Calling calling the the construction construction is is equivalent equivalent to to ul code new XMLElement xml element new HashMap hash map false true code ul dl dt b b Postconditions postcondition b b dt dd ul li countChildren count child gt 0 0 li iterateChildren iterate child gt empty empty enumeration enumeration li enumeratePropertyNames enumerate property name gt empty empty enumeration enumeration li getChildren get child gt empty empty vector vector li getContent get content gt li getLineNr get line nr gt 0 0 li getName get name gt null ul dd dl see see XMLElement xml element java util util HashMap hash map XMLElement xml element HashMap hash map see see XMLElement xml element boolean see see XMLElement xml element java util util HashMap hash map boolean XMLElement xml element HashMap hash map boolean public XMLElement xml element this new HashMap hash map false true true Creates create and and initializes initializ a a new XML xml element element Calling calling the the construction construction is is equivalent equivalent to to ul code new XMLElement xml element entities entity false true code ul param entities entity The the entity entity conversion conversion table table dl dl dt b b Preconditions precondition b b dt dd ul li code entities entity null code ul dd dl dl dt b b Postconditions postcondition b b dt dd ul li countChildren count child gt 0 0 li iterateChildren iterate child gt empty empty enumeration enumeration li enumeratePropertyNames enumerate property name gt empty empty enumeration enumeration li getChildren get child gt empty empty vector vector li getContent get content gt li getLineNr get line nr gt 0 0 li getName get name gt null ul dd dl dl see see XMLElement xml element see see XMLElement xml element boolean see see XMLElement xml element java util util HashMap hash map boolean XMLElement xml element HashMap hash map boolean public XMLElement xml element HashMap hash map entities entity this entities entity false true true Creates create and and initializes initializ a a new XML xml element element Calling calling the the construction construction is is equivalent equivalent to to ul code new XMLElement xml element new HashMap hash map skipLeadingWhitespace skip leading whitespace true code ul param skipLeadingWhitespace skip leading whitespace code true code if leading leading and and trailing trailing whitespace whitespace in in PCDATA p c d a t a content content has ha to to be be removed remove dl dl dt b b Postconditions postcondition b b dt dd ul li countChildren count child gt 0 0 li iterateChildren iterate child gt empty empty enumeration enumeration li enumeratePropertyNames enumerate property name gt empty empty enumeration enumeration li getChildren get child gt empty empty vector vector li getContent get content gt li getLineNr get line nr gt 0 0 li getName get name gt null ul dd dl dl see see XMLElement xml element see see XMLElement xml element java util util HashMap hash map XMLElement xml element HashMap hash map see see XMLElement xml element java util util HashMap hash map boolean XMLElement xml element HashMap hash map boolean public XMLElement xml element boolean skipLeadingWhitespace skip leading whitespace this new HashMap hash map skipLeadingWhitespace skip leading whitespace true true Creates create and and initializes initializ a a new XML xml element element Calling calling the the construction construction is is equivalent equivalent to to ul code new XMLElement xml element entities entity skipLeadingWhitespace skip leading whitespace true code ul param entities entity The the entity entity conversion conversion table table param skipLeadingWhitespace skip leading whitespace code true code if leading leading and and trailing trailing whitespace whitespace in in PCDATA p c d a t a content content has ha to to be be removed remove dl dl dt b b Preconditions precondition b b dt dd ul li code entities entity null code ul dd dl dl dt b b Postconditions postcondition b b dt dd ul li countChildren count child gt 0 0 li iterateChildren iterate child gt empty empty enumeration enumeration li enumeratePropertyNames enumerate property name gt empty empty enumeration enumeration li getChildren get child gt empty empty vector vector li getContent get content gt li getLineNr get line nr gt 0 0 li getName get name gt null ul dd dl dl see see XMLElement xml element see see XMLElement xml element boolean see see XMLElement xml element java util util HashMap hash map XMLElement xml element HashMap hash map public XMLElement xml element HashMap hash map entities entity boolean skipLeadingWhitespace skip leading whitespace this entities entity skipLeadingWhitespace skip leading whitespace true true Creates create and and initializes initializ a a new XML xml element element param entities entity The the entity entity conversion conversion table table param skipLeadingWhitespace skip leading whitespace code true code if leading leading and and trailing trailing whitespace whitespace in in PCDATA p c d a t a content content has ha to to be be removed remove param ignoreCase ignore code true code if the the case of of element element and and attribute attribute names name have have to to be be ignored ignore dl dl dt b b Preconditions precondition b b dt dd ul li code entities entity null code ul dd dl dl dt b b Postconditions postcondition b b dt dd ul li countChildren count child gt 0 0 li iterateChildren iterate child gt empty empty enumeration enumeration li enumeratePropertyNames enumerate property name gt empty empty enumeration enumeration li getChildren get child gt empty empty vector vector li getContent get content gt li getLineNr get line nr gt 0 0 li getName get name gt null ul dd dl dl see see XMLElement xml element see see XMLElement xml element boolean see see XMLElement xml element java util util HashMap hash map XMLElement xml element HashMap hash map see see XMLElement xml element java util util HashMap hash map boolean XMLElement xml element HashMap hash map boolean public XMLElement xml element HashMap hash map entities entity boolean skipLeadingWhitespace skip leading whitespace boolean ignoreCase ignore this entities entity skipLeadingWhitespace skip leading whitespace true ignoreCase ignore Creates create and and initializes initializ a a new XML xml element element P p This constructor constructor should should I i only only I i be be called call from from link link createElement create element createElement create element to to create create child child iterator iterator param entities entity The the entity entity conversion conversion table table param skipLeadingWhitespace skip leading whitespace code true code if leading leading and and trailing trailing whitespace whitespace in in PCDATA p c d a t a content content has ha to to be be removed remove param fillBasicConversionTable fill basic conversion table code true code if the the basic basic entities entity need need to to be be added add to to the the entity entity list list param ignoreCase ignore code true code if the the case of of element element and and attribute attribute names name have have to to be be ignored ignore dl dl dt b b Preconditions precondition b b dt dd ul li code entities entity null code li if code fillBasicConversionTable fill basic conversion table false code then then code entities entity code contains contain at at least least the the following following entries entry code amp amp code code lt lt code code gt code code apos apo code and and code quot code ul dd dl dl dt b b Postconditions postcondition b b dt dd ul li countChildren count child gt 0 0 li iterateChildren iterate child gt empty empty enumeration enumeration li enumeratePropertyNames enumerate property name gt empty empty enumeration enumeration li getChildren get child gt empty empty vector vector li getContent get content gt li getLineNr get line nr gt 0 0 li getName get name gt null ul dd dl dl see see createElement create element protected XMLElement xml element HashMap hash map entities entity boolean skipLeadingWhitespace skip leading whitespace boolean fillBasicConversionTable fill basic conversion table boolean ignoreCase ignore this entities entity skipLeadingWhitespace skip leading whitespace fillBasicConversionTable fill basic conversion table ignoreCase ignore true protected XMLElement xml element HashMap hash map entities entity boolean skipLeadingWhitespace skip leading whitespace boolean fillBasicConversionTable fill basic conversion table boolean ignoreCase ignore boolean encodeUnicodeCharacters encode unicode character this ignoreWhitespace ignore whitespace skipLeadingWhitespace skip leading whitespace this ignoreCase ignore ignoreCase ignore this name name null this contents content this attributes attribute new HashMap hash map this children child new ArrayList list this entities entity entities entity this lineNr line nr 0 0 this isEncodeUnicodeCharacters is encode unicode character encodeUnicodeCharacters encode unicode character Iterator iterator iter it this entities entity keySet key set iterator iterator while iter it hasNext ha next Object key key iter it next next Object value value this entities entity get get key key if value value instanceof String value value String value value toCharArray to this entities entity put put key key value value if fillBasicConversionTable fill basic conversion table this entities entity put put amp amp new char this entities entity put put quot new char this entities entity put put apos apo new char \ \ this entities entity put put lt lt new char this entities entity put put gt new char Adds add a a child child element element param child child The the child child element element to to add add dl dl dt b b Preconditions precondition b b dt dd ul li code child child null code li code child child getName get name null code li code child child code does doe not not have have a a parent parent element element ul dd dl dl dt b b Postconditions postcondition b b dt dd ul li countChildren count child gt old old countChildren count child + + 1 1 li iterateChildren iterate child gt old old iterateChildren iterate child + + child child li getChildren get child gt old old iterateChildren iterate child + + child child ul dd dl dl see see countChildren count child see see iterateChildren iterate child see see getChildren get child see see removeChild remove child nanoxml nanoxml XMLElement xml element removeChild remove child XMLElement xml element public void addChild add child XMLElement xml element child child this children child add add child child Adds add or or modifies modifie an an attribute attribute param name name The the name name of of the the attribute attribute param value value The the value value of of the the attribute attribute dl dl dt b b Preconditions precondition b b dt dd ul li code name name null code li code name name code is is a a valid valid XML xml identifier identifier li code value value null code ul dd dl dl dt b b Postconditions postcondition b b dt dd ul li enumerateAttributeNames enumerate attribute name gt old old enumerateAttributeNames enumerate attribute name + + name name li getAttribute get attribute name name gt value value ul dd dl dl public void setAttribute set attribute String name name Object value value if this ignoreCase ignore name name name name toUpperCase to upper this attributes attribute put put name name value value toString to Adds add or or modifies modifie an an attribute attribute param name name The the name name of of the the attribute attribute param value value The the value value of of the the attribute attribute dl dl dt b b Preconditions precondition b b dt dd ul li code name name null code li code name name code is is a a valid valid XML xml identifier identifier ul dd dl dl dt b b Postconditions postcondition b b dt dd ul li enumerateAttributeNames enumerate attribute name gt old old enumerateAttributeNames enumerate attribute name + + name name li getIntAttribute get attribute name name gt value value ul dd dl dl public void setIntAttribute set attribute String name name int value value if this ignoreCase ignore name name name name toUpperCase to upper this attributes attribute put put name name Integer toString to value value Adds add or or modifies modifie an an attribute attribute param name name The the name name of of the the attribute attribute param value value The the value value of of the the attribute attribute dl dl dt b b Preconditions precondition b b dt dd ul li code name name null code li code name name code is is a a valid valid XML xml identifier identifier ul dd dl dl dt b b Postconditions postcondition b b dt dd ul li enumerateAttributeNames enumerate attribute name gt old old enumerateAttributeNames enumerate attribute name + + name name li getDoubleAttribute get attribute name name gt value value ul dd dl dl public void setDoubleAttribute set attribute String name name double value value if this ignoreCase ignore name name name name toUpperCase to upper this attributes attribute put put name name Double toString to value value Returns the the number number of of child child iterator iterator of of the the element element dl dt b b Postconditions postcondition b b dt dd ul li code result result 0 0 code ul dd dl see see addChild add child nanoxml nanoxml XMLElement xml element addChild add child XMLElement xml element see see iterateChildren iterate child see see getChildren get child see see removeChild remove child nanoxml nanoxml XMLElement xml element removeChild remove child XMLElement xml element public int countChildren count child return this children child size size Enumerates enumerate the the attribute attribute names name dl dt b b Postconditions postcondition b b dt dd ul li code result result null code ul dd dl public Iterator iterator enumerateAttributeNames enumerate attribute name return this attributes attribute keySet key set iterator iterator Enumerates enumerate the the child child iterator iterator dl dt b b Postconditions postcondition b b dt dd ul li code result result null code ul dd dl public Iterator iterator iterateChildren iterate child return this children child iterator iterator Returns the the child child iterator iterator as a a a ArrayList list It it is is safe safe to to modify modify this ArrayList list dl dt b b Postconditions postcondition b b dt dd ul li code result result null code ul dd dl see see addChild add child nanoxml nanoxml XMLElement xml element addChild add child XMLElement xml element see see countChildren count child see see iterateChildren iterate child see see removeChild remove child nanoxml nanoxml XMLElement xml element removeChild remove child XMLElement xml element public ArrayList list getChildren get child try return ArrayList list this children child clone clone catch Exception e e this never nev happens happen however howev some some Java compilers compiler are are so so braindead braindead that that they they require require this exception clause clause return null Returns the the PCDATA p c d a t a content content of of the the object If there there is is no no such such content content CODE c o d e null CODE c o d e is is returned see see setContent set content java lang lang String setContent set content String public String getContent get content return this contents content Returns the the line line nr nr in in the the source source data data on on which which the the element element is is found found This method returns code 0 0 code there there is is no no associated associate source source data data dl dt b b Postconditions postcondition b b dt dd ul li code result result 0 0 code ul dd dl public int getLineNr get line nr return this lineNr line nr Returns an an attribute attribute of of the the element element If the the attribute attribute doesn doesn t t exist code null code is is returned param name name The the name name of of the the attribute attribute dl dl dt b b Preconditions precondition b b dt dd ul li code name name null code li code name name code is is a a valid valid XML xml identifier identifier ul dd dl dl public Object getAttribute get attribute String name name return this getAttribute get attribute name name null Returns an an attribute attribute of of the the element element If the the attribute attribute doesn doesn t t exist code defaultValue value code is is returned param name name The the name name of of the the attribute attribute param defaultValue value Key key to to use use if the the attribute attribute is is missing miss dl dl dt b b Preconditions precondition b b dt dd ul li code name name null code li code name name code is is a a valid valid XML xml identifier identifier ul dd dl dl public Object getAttribute get attribute String name name Object defaultValue value if this ignoreCase ignore name name name name toUpperCase to upper Object value value this attributes attribute get get name name if value value null value value defaultValue value return value value Returns an an attribute attribute by by looking looking up up a a key key in in a a hashtable hashtable If the the attribute attribute doesn doesn t t exist the the value value corresponding correspond to to defaultKey key is is returned P p As a an an example example if valueSet value set contains contain the the mapping mapping code one one gt 1 1 code and and the the element element contains contain the the attribute attribute code attr attr one one code then then code getAttribute get attribute attr attr mapping mapping defaultKey key false code returns code 1 1 code param name name The the name name of of the the attribute attribute param valueSet value set HashMap hash map mapping mapping keySet key set iterator iterator to to values value param defaultKey key Key key to to use use if the the attribute attribute is is missing miss param allowLiterals allow literal code true code if literals literal are are valid valid dl dl dt b b Preconditions precondition b b dt dd ul li code name name null code li code name name code is is a a valid valid XML xml identifier identifier li code valueSet value set code null li the the keySet key set iterator iterator of of code valueSet value set code are are strings ul dd dl dl see see setAttribute set attribute java lang lang String java lang lang Object setAttribute set attribute String Object see see removeAttribute remove attribute java lang lang String removeAttribute remove attribute String see see enumerateAttributeNames enumerate attribute name see see getAttribute get attribute java lang lang String getAttribute get attribute String see see getAttribute get attribute java lang lang String java lang lang Object getAttribute get attribute String Object public Object getAttribute get attribute String name name Map map valueSet value set String defaultKey key boolean allowLiterals allow literal if this ignoreCase ignore name name name name toUpperCase to upper Object key key this attributes attribute get get name name Object result result if key key null key key defaultKey key result result valueSet value set get get key key if result result null if allowLiterals allow literal result result key key else throw this invalidValue invalid value name name String key key return result result Returns an an attribute attribute of of the the element element If the the attribute attribute doesn doesn t t exist code null code is is returned param name name The the name name of of the the attribute attribute dl dl dt b b Preconditions precondition b b dt dd ul li code name name null code li code name name code is is a a valid valid XML xml identifier identifier ul dd dl dl see see setAttribute set attribute java lang lang String java lang lang Object setAttribute set attribute String Object see see removeAttribute remove attribute java lang lang String removeAttribute remove attribute String see see enumerateAttributeNames enumerate attribute name see see getStringAttribute get attribute java lang lang String java lang lang String getStringAttribute get attribute String String see see getStringAttribute get attribute java lang lang String java util util HashMap hash map java lang lang String boolean getStringAttribute get attribute String HashMap hash map String boolean public String getStringAttribute get attribute String name name return this getStringAttribute get attribute name name null Returns an an attribute attribute of of the the element element If the the attribute attribute doesn doesn t t exist code defaultValue value code is is returned param name name The the name name of of the the attribute attribute param defaultValue value Key key to to use use if the the attribute attribute is is missing miss dl dl dt b b Preconditions precondition b b dt dd ul li code name name null code li code name name code is is a a valid valid XML xml identifier identifier ul dd dl dl see see setAttribute set attribute java lang lang String java lang lang Object setAttribute set attribute String Object see see removeAttribute remove attribute java lang lang String removeAttribute remove attribute String see see enumerateAttributeNames enumerate attribute name see see getStringAttribute get attribute java lang lang String getStringAttribute get attribute String see see getStringAttribute get attribute java lang lang String java util util HashMap hash map java lang lang String boolean getStringAttribute get attribute String HashMap hash map String boolean public String getStringAttribute get attribute String name name String defaultValue value return String this getAttribute get attribute name name defaultValue value Returns an an attribute attribute by by looking looking up up a a key key in in a a hashtable hashtable If the the attribute attribute doesn doesn t t exist the the value value corresponding correspond to to defaultKey key is is returned P p As a an an example example if valueSet value set contains contain the the mapping mapping code one one gt 1 1 code and and the the element element contains contain the the attribute attribute code attr attr one one code then then code getAttribute get attribute attr attr mapping mapping defaultKey key false code returns code 1 1 code param name name The the name name of of the the attribute attribute param valueSet value set HashMap hash map mapping mapping keySet key set iterator iterator to to values value param defaultKey key Key key to to use use if the the attribute attribute is is missing miss param allowLiterals allow literal code true code if literals literal are are valid valid dl dl dt b b Preconditions precondition b b dt dd ul li code name name null code li code name name code is is a a valid valid XML xml identifier identifier li code valueSet value set code null li the the keySet key set iterator iterator of of code valueSet value set code are are strings li the the values value of of code valueSet value set code are are strings ul dd dl dl see see setAttribute set attribute java lang lang String java lang lang Object setAttribute set attribute String Object see see removeAttribute remove attribute java lang lang String removeAttribute remove attribute String see see enumerateAttributeNames enumerate attribute name see see getStringAttribute get attribute java lang lang String getStringAttribute get attribute String see see getStringAttribute get attribute java lang lang String java lang lang String getStringAttribute get attribute String String public String getStringAttribute get attribute String name name HashMap hash map valueSet value set String defaultKey key boolean allowLiterals allow literal return String this getAttribute get attribute name name valueSet value set defaultKey key allowLiterals allow literal Returns an an attribute attribute of of the the element element If the the attribute attribute doesn doesn t t exist code 0 0 code is is returned param name name The the name name of of the the attribute attribute dl dl dt b b Preconditions precondition b b dt dd ul li code name name null code li code name name code is is a a valid valid XML xml identifier identifier ul dd dl dl see see setIntAttribute set attribute java lang lang String int setIntAttribute set attribute String int see see enumerateAttributeNames enumerate attribute name see see getIntAttribute get attribute java lang lang String int getIntAttribute get attribute String int see see getIntAttribute get attribute java lang lang String java util util HashMap hash map java lang lang String boolean getIntAttribute get attribute String HashMap hash map String boolean public int getIntAttribute get attribute String name name return this getIntAttribute get attribute name name 0 0 Returns an an attribute attribute of of the the element element If the the attribute attribute doesn doesn t t exist code defaultValue value code is is returned param name name The the name name of of the the attribute attribute param defaultValue value Key key to to use use if the the attribute attribute is is missing miss dl dl dt b b Preconditions precondition b b dt dd ul li code name name null code li code name name code is is a a valid valid XML xml identifier identifier ul dd dl dl see see setIntAttribute set attribute java lang lang String int setIntAttribute set attribute String int see see enumerateAttributeNames enumerate attribute name see see getIntAttribute get attribute java lang lang String getIntAttribute get attribute String see see getIntAttribute get attribute java lang lang String java util util HashMap hash map java lang lang String boolean getIntAttribute get attribute String HashMap hash map String boolean public int getIntAttribute get attribute String name name int defaultValue value if this ignoreCase ignore name name name name toUpperCase to upper String value value String this attributes attribute get get name name if value value null return defaultValue value else try return Integer parseInt parse value value catch NumberFormatException number format e e throw this invalidValue invalid value name name value value public int getIntAttribute get attribute String name name int min min int max max int defaultValue value int v v getIntAttribute get attribute name name defaultValue value if v v min min return min min if v v max max return max max return v v Returns an an attribute attribute by by looking looking up up a a key key in in a a hashtable hashtable If the the attribute attribute doesn doesn t t exist the the value value corresponding correspond to to defaultKey key is is returned P p As a an an example example if valueSet value set contains contain the the mapping mapping code one one gt 1 1 code and and the the element element contains contain the the attribute attribute code attr attr one one code then then code getIntAttribute get attribute attr attr mapping mapping defaultKey key false code returns code 1 1 code param name name The the name name of of the the attribute attribute param valueSet value set HashMap hash map mapping mapping keySet key set iterator iterator to to values value param defaultKey key Key key to to use use if the the attribute attribute is is missing miss param allowLiteralNumbers allow literal number code true code if literal literal numbers number are are valid valid dl dl dt b b Preconditions precondition b b dt dd ul li code name name null code li code name name code is is a a valid valid XML xml identifier identifier li code valueSet value set code null li the the keySet key set iterator iterator of of code valueSet value set code are are strings li the the values value of of code valueSet value set code are are Integer objects li code defaultKey key code is is either eith code null code a a key key in in code valueSet value set code or or an an integer ul dd dl dl see see setIntAttribute set attribute java lang lang String int setIntAttribute set attribute String int see see enumerateAttributeNames enumerate attribute name see see getIntAttribute get attribute java lang lang String getIntAttribute get attribute String see see getIntAttribute get attribute java lang lang String int getIntAttribute get attribute String int public int getIntAttribute get attribute String name name HashMap hash map valueSet value set String defaultKey key boolean allowLiteralNumbers allow literal number if this ignoreCase ignore name name name name toUpperCase to upper Object key key this attributes attribute get get name name Integer result result if key key null key key defaultKey key try result result Integer valueSet value set get get key key catch ClassCastException cast e e throw this invalidValueSet invalid value set name name if result result null if allowLiteralNumbers allow literal number throw this invalidValue invalid value name name String key key try result result Integer valueOf value of String key key catch NumberFormatException number format e e throw this invalidValue invalid value name name String key key return result result intValue value Returns an an attribute attribute of of the the element element If the the attribute attribute doesn doesn t t exist code 0 0 0 0 code is is returned param name name The the name name of of the the attribute attribute dl dl dt b b Preconditions precondition b b dt dd ul li code name name null code li code name name code is is a a valid valid XML xml identifier identifier ul dd dl dl see see setDoubleAttribute set attribute java lang lang String double setDoubleAttribute set attribute String double see see enumerateAttributeNames enumerate attribute name see see getDoubleAttribute get attribute java lang lang String double getDoubleAttribute get attribute String double see see getDoubleAttribute get attribute java lang lang String java util util HashMap hash map java lang lang String boolean getDoubleAttribute get attribute String HashMap hash map String boolean public double getDoubleAttribute get attribute String name name return this getDoubleAttribute get attribute name name 0 0 Returns an an attribute attribute of of the the element element If the the attribute attribute doesn doesn t t exist code defaultValue value code is is returned param name name The the name name of of the the attribute attribute param defaultValue value Key key to to use use if the the attribute attribute is is missing miss dl dl dt b b Preconditions precondition b b dt dd ul li code name name null code li code name name code is is a a valid valid XML xml identifier identifier ul dd dl dl see see setDoubleAttribute set attribute java lang lang String double setDoubleAttribute set attribute String double see see enumerateAttributeNames enumerate attribute name see see getDoubleAttribute get attribute java lang lang String getDoubleAttribute get attribute String see see getDoubleAttribute get attribute java lang lang String java util util HashMap hash map java lang lang String boolean getDoubleAttribute get attribute String HashMap hash map String boolean public double getDoubleAttribute get attribute String name name double defaultValue value if this ignoreCase ignore name name name name toUpperCase to upper String value value String this attributes attribute get get name name if value value null return defaultValue value else try return Double valueOf value of value value doubleValue value catch NumberFormatException number format e e throw this invalidValue invalid value name name value value Returns an an attribute attribute by by looking looking up up a a key key in in a a hashtable hashtable If the the attribute attribute doesn doesn t t exist the the value value corresponding correspond to to defaultKey key is is returned P p As a an an example example if valueSet value set contains contain the the mapping mapping code one one gt 1 1 0 0 code and and the the element element contains contain the the attribute attribute code attr attr one one code then then code getDoubleAttribute get attribute attr attr mapping mapping defaultKey key false code returns code 1 1 0 0 code param name name The the name name of of the the attribute attribute param valueSet value set HashMap hash map mapping mapping keySet key set iterator iterator to to values value param defaultKey key Key key to to use use if the the attribute attribute is is missing miss param allowLiteralNumbers allow literal number code true code if literal literal numbers number are are valid valid dl dl dt b b Preconditions precondition b b dt dd ul li code name name null code li code name name code is is a a valid valid XML xml identifier identifier li code valueSet value set null code li the the keySet key set iterator iterator of of code valueSet value set code are are strings li the the values value of of code valueSet value set code are are Double objects li code defaultKey key code is is either eith code null code a a key key in in code valueSet value set code or or a a double ul dd dl dl see see setDoubleAttribute set attribute java lang lang String double setDoubleAttribute set attribute String double see see enumerateAttributeNames enumerate attribute name see see getDoubleAttribute get attribute java lang lang String getDoubleAttribute get attribute String see see getDoubleAttribute get attribute java lang lang String double getDoubleAttribute get attribute String double public double getDoubleAttribute get attribute String name name HashMap hash map valueSet value set String defaultKey key boolean allowLiteralNumbers allow literal number if this ignoreCase ignore name name name name toUpperCase to upper Object key key this attributes attribute get get name name Double result result if key key null key key defaultKey key try result result Double valueSet value set get get key key catch ClassCastException cast e e throw this invalidValueSet invalid value set name name if result result null if allowLiteralNumbers allow literal number throw this invalidValue invalid value name name String key key try result result Double valueOf value of String key key catch NumberFormatException number format e e throw this invalidValue invalid value name name String key key return result result doubleValue value Returns an an attribute attribute of of the the element element If the the attribute attribute doesn doesn t t exist code defaultValue value code is is returned If the the value value of of the the attribute attribute is is equal equal to to code trueValue value code code true code is is returned If the the value value of of the the attribute attribute is is equal equal to to code falseValue value code code false code is is returned If the the value value doesn doesn t t match match code trueValue value code or or code falseValue value code an an exception is is thrown param name name The the name name of of the the attribute attribute param trueValue value The the value value associated associate with with code true code param falseValue value The the value value associated associate with with code true code param defaultValue value Value value to to use use if the the attribute attribute is is missing miss dl dl dt b b Preconditions precondition b b dt dd ul li code name name null code li code name name code is is a a valid valid XML xml identifier identifier li code trueValue value code and and code falseValue value code are are different different strings ul dd dl dl see see setAttribute set attribute java lang lang String java lang lang Object setAttribute set attribute String Object see see removeAttribute remove attribute java lang lang String removeAttribute remove attribute String see see enumerateAttributeNames enumerate attribute name public boolean getBooleanAttribute get attribute String name name String trueValue value String falseValue value boolean defaultValue value if this ignoreCase ignore name name name name toUpperCase to upper Object value value this attributes attribute get get name name if value value null return defaultValue value else if value value equals equal trueValue value return true else if value value equals equal falseValue value return false else throw this invalidValue invalid value name name String value value public boolean getBooleanAttribute get attribute String name name boolean defaultValue value return getBooleanAttribute get attribute name name true false defaultValue value Returns the the name name of of the the element element see see setName set name java lang lang String setName set name String public String getName get name return this name name Reads read one one XML xml element element from from a a java io io Reader reader and and parses pars it it param reader reader The the reader reader from from which which to to retrieve retrieve the the XML xml data data dl dl dt b b Preconditions precondition b b dt dd ul li code reader reader null code li code reader reader code is is not not closed close ul dd dl dl dt b b Postconditions postcondition b b dt dd ul li the the state state of of the the receiver receiver is is updated update to to reflect reflect the the XML xml element element parsed parse from from the the reader reader li the the reader reader points point to to the the first first character character following following the the last last gt character character of of the the XML xml element element ul dd dl dl throws java io io IOException i o If an an error occured occur while reading reading the the input input throws nanoxml nanoxml XMLParseException xml parse If an an error occured occur while parsing parse the the read read data data public void parseFromReader parse from reader Reader reader reader reader throws IOException i o XMLParseException xml parse this parseFromReader parse from reader reader reader startingLineNr starting line nr 1 1 Reads read one one XML xml element element from from a a java io io Reader reader and and parses pars it it param reader reader The the reader reader from from which which to to retrieve retrieve the the XML xml data data param startingLineNr starting line nr The the line line number number of of the the first first line line in in the the data data dl dl dt b b Preconditions precondition b b dt dd ul li code reader reader null code li code reader reader code is is not not closed close ul dd dl dl dt b b Postconditions postcondition b b dt dd ul li the the state state of of the the receiver receiver is is updated update to to reflect reflect the the XML xml element element parsed parse from from the the reader reader li the the reader reader points point to to the the first first character character following following the the last last gt character character of of the the XML xml element element ul dd dl dl throws java io io IOException i o If an an error occured occur while reading reading the the input input throws nanoxml nanoxml XMLParseException xml parse If an an error occured occur while parsing parse the the read read data data public void parseFromReader parse from reader Reader reader reader reader int startingLineNr starting line nr throws IOException i o XMLParseException xml parse this name name null this contents content this attributes attribute new HashMap hash map this children child new ArrayList list this charReadTooMuch read too much \0 \0 this reader reader reader reader this parserLineNr parser line nr startingLineNr starting line nr for char ch ch this scanWhitespace scan whitespace if ch ch throw this expectedInput expect input ch ch this readChar read if ch ch || || ch ch ? ? this skipSpecialTag skip special tag 0 0 else this unreadChar unread ch ch this scanElement scan element this return Reads read one one XML xml element element from from a a String and and parses pars it it param string The the reader reader from from which which to to retrieve retrieve the the XML xml data data dl dl dt b b Preconditions precondition b b dt dd ul li code string null code li code string length length gt 0 0 code ul dd dl dl dt b b Postconditions postcondition b b dt dd ul li the the state state of of the the receiver receiver is is updated update to to reflect reflect the the XML xml element element parsed parse from from the the reader reader ul dd dl dl throws nanoxml nanoxml XMLParseException xml parse If an an error occured occur while parsing parse the the string public void parseString parse String string throws XMLParseException xml parse try this parseFromReader parse from reader new StringReader reader string startingLineNr starting line nr 1 1 catch IOException i o e e Java exception handling handling suxx suxx Reads read one one XML xml element element from from a a String and and parses pars it it param string The the reader reader from from which which to to retrieve retrieve the the XML xml data data param offset offset The the first first character character in in code string code to to scan scan dl dl dt b b Preconditions precondition b b dt dd ul li code string null code li code offset offset lt lt string length length code li code offset offset gt 0 0 code ul dd dl dl dt b b Postconditions postcondition b b dt dd ul li the the state state of of the the receiver receiver is is updated update to to reflect reflect the the XML xml element element parsed parse from from the the reader reader ul dd dl dl throws nanoxml nanoxml XMLParseException xml parse If an an error occured occur while parsing parse the the string public void parseString parse String string int offset offset throws XMLParseException xml parse this parseString parse string substring substring offset offset Reads read one one XML xml element element from from a a String and and parses pars it it param string The the reader reader from from which which to to retrieve retrieve the the XML xml data data param offset offset The the first first character character in in code string code to to scan scan param end end The the character character where where to to stop stop scanning scanning This character character is is not not scanned scan dl dl dt b b Preconditions precondition b b dt dd ul li code string null code li code end end lt lt string length length code li code offset offset lt lt end end code li code offset offset gt 0 0 code ul dd dl dl dt b b Postconditions postcondition b b dt dd ul li the the state state of of the the receiver receiver is is updated update to to reflect reflect the the XML xml element element parsed parse from from the the reader reader ul dd dl dl throws nanoxml nanoxml XMLParseException xml parse If an an error occured occur while parsing parse the the string public void parseString parse String string int offset offset int end end throws XMLParseException xml parse this parseString parse string substring substring offset offset end end Reads read one one XML xml element element from from a a String and and parses pars it it param string The the reader reader from from which which to to retrieve retrieve the the XML xml data data param offset offset The the first first character character in in code string code to to scan scan param end end The the character character where where to to stop stop scanning scanning This character character is is not not scanned scan param startingLineNr starting line nr The the line line number number of of the the first first line line in in the the data data dl dl dt b b Preconditions precondition b b dt dd ul li code string null code li code end end lt lt string length length code li code offset offset lt lt end end code li code offset offset gt 0 0 code ul dd dl dl dt b b Postconditions postcondition b b dt dd ul li the the state state of of the the receiver receiver is is updated update to to reflect reflect the the XML xml element element parsed parse from from the the reader reader ul dd dl dl throws nanoxml nanoxml XMLParseException xml parse If an an error occured occur while parsing parse the the string public void parseString parse String string int offset offset int end end int startingLineNr starting line nr throws XMLParseException xml parse string string substring substring offset offset end end try this parseFromReader parse from reader new StringReader reader string startingLineNr starting line nr catch IOException i o e e Java exception handling handling suxx suxx Reads read one one XML xml element element from from a a char array and and parses pars it it param input input The the reader reader from from which which to to retrieve retrieve the the XML xml data data param offset offset The the first first character character in in code string code to to scan scan param end end The the character character where where to to stop stop scanning scanning This character character is is not not scanned scan dl dl dt b b Preconditions precondition b b dt dd ul li code input input null code li code end end lt lt input input length length code li code offset offset lt lt end end code li code offset offset gt 0 0 code ul dd dl dl dt b b Postconditions postcondition b b dt dd ul li the the state state of of the the receiver receiver is is updated update to to reflect reflect the the XML xml element element parsed parse from from the the reader reader ul dd dl dl throws nanoxml nanoxml XMLParseException xml parse If an an error occured occur while parsing parse the the string public void parseCharArray parse char input input int offset offset int end end throws XMLParseException xml parse this parseCharArray parse input input offset offset end end startingLineNr starting line nr 1 1 Reads read one one XML xml element element from from a a char array and and parses pars it it param input input The the reader reader from from which which to to retrieve retrieve the the XML xml data data param offset offset The the first first character character in in code string code to to scan scan param end end The the character character where where to to stop stop scanning scanning This character character is is not not scanned scan param startingLineNr starting line nr The the line line number number of of the the first first line line in in the the data data dl dl dt b b Preconditions precondition b b dt dd ul li code input input null code li code end end lt lt input input length length code li code offset offset lt lt end end code li code offset offset gt 0 0 code ul dd dl dl dt b b Postconditions postcondition b b dt dd ul li the the state state of of the the receiver receiver is is updated update to to reflect reflect the the XML xml element element parsed parse from from the the reader reader ul dd dl dl throws nanoxml nanoxml XMLParseException xml parse If an an error occured occur while parsing parse the the string public void parseCharArray parse char input input int offset offset int end end int startingLineNr starting line nr throws XMLParseException xml parse try Reader reader reader reader new CharArrayReader reader input input offset offset end end this parseFromReader parse from reader reader reader startingLineNr starting line nr catch IOException i o e e This exception will will never nev happen happen Removes remove a a child child element element param child child The the child child element element to to remove remove dl dl dt b b Preconditions precondition b b dt dd ul li code child child null code li code child child code is is a a child child element element of of the the receiver receiver ul dd dl dl dt b b Postconditions postcondition b b dt dd ul li countChildren count child gt old old countChildren count child 1 1 li iterateChildren iterate child gt old old iterateChildren iterate child child child li getChildren get child gt old old iterateChildren iterate child child child ul dd dl dl see see addChild add child nanoxml nanoxml XMLElement xml element addChild add child XMLElement xml element see see countChildren count child see see iterateChildren iterate child see see getChildren get child public void removeChild remove child XMLElement xml element child child this children child remove remove child child Removes remove an an attribute attribute param name name The the name name of of the the attribute attribute dl dl dt b b Preconditions precondition b b dt dd ul li code name name null code li code name name code is is a a valid valid XML xml identifier identifier ul dd dl dl dt b b Postconditions postcondition b b dt dd ul li enumerateAttributeNames enumerate attribute name gt old old enumerateAttributeNames enumerate attribute name name name li getAttribute get attribute name name gt code null code ul dd dl dl public void removeAttribute remove attribute String name name if this ignoreCase ignore name name name name toUpperCase to upper this attributes attribute remove remove name name Creates create a a new similar similar XML xml element element public XMLElement xml element createElement create element String name name XMLElement xml element elem elem createElement create element elem elem setName set name name name return elem elem Creates create a a new similar similar XML xml element element P p You you should should override override this method when when subclassing subclass XMLElement xml element protected XMLElement xml element createElement create element return new XMLElement xml element this entities entity this ignoreWhitespace ignore whitespace false this ignoreCase ignore this isEncodeUnicodeCharacters is encode unicode character Changes change the the content content string param content content The the new content content string public void setContent set content String content content this contents content content content Changes change the the name name of of the the element element param name name The the new name name dl dl dt b b Preconditions precondition b b dt dd ul li code name name null code li code name name code is is a a valid valid XML xml identifier identifier ul dd dl see see getName get name public void setName set name String name name this name name name name Writes write the the XML xml element element to to a a string see see write write java io io Writer writer write write Writer writer public String toString to try ByteArrayOutputStream output stream out out new ByteArrayOutputStream output stream OutputStreamWriter output stream writer writer writer new OutputStreamWriter output stream writer out out this write write writer writer writer writer flush flush return new String out out toByteArray to catch IOException i o e e Java exception handling handling suxx suxx return super toString to Writes write the the XML xml element element to to a a writer writer param writer writer The the writer writer to to write write the the XML xml data data to to dl dl dt b b Preconditions precondition b b dt dd ul li code writer writer null code li code writer writer code is is not not closed close ul dd dl throws java io io IOException i o If the the data data could could not not be be written write to to the the writer writer see see toString to public void write write Writer writer writer writer throws IOException i o if this name name null this writeEncoded write encode writer writer this contents content return writer writer write write writer writer write write this name name if this attributes attribute isEmpty is empty Iterator iterator iter it this attributes attribute keySet key set iterator iterator while iter it hasNext ha next writer writer write write String key key String iter it next next String value value String this attributes attribute get get key key writer writer write write key key writer writer write write writer writer write write this writeEncoded write encode writer writer value value writer writer write write if this contents content null this contents content length length 0 0 writer writer write write this writeEncoded write encode writer writer this contents content writer writer write write writer writer write write writer writer write write this name name writer writer write write else if this children child isEmpty is empty writer writer write write writer writer write write else writer writer write write Iterator iterator iter it this iterateChildren iterate child while iter it hasNext ha next XMLElement xml element child child XMLElement xml element iter it next next child child write write writer writer writer writer write write writer writer write write writer writer write write this name name writer writer write write Writes write the the XML xml element element to to a a print print writer writer and and indents indent the the elements element param writer writer The the writer writer to to write write the the XML xml data data to to dl dl dt b b Preconditions precondition b b dt dd ul li code writer writer null code li code writer writer code is is not not closed close ul dd dl throws java io io IOException i o If the the data data could could not not be be written write to to the the writer writer see see toString to public void print print PrintWriter print writer writer writer print print writer writer 0 0 Writes write the the XML xml element element to to a a print print writer writer and and indents indent the the elements element param writer writer The the writer writer to to write write the the XML xml data data to to dl dl dt b b Preconditions precondition b b dt dd ul li code writer writer null code li code writer writer code is is not not closed close ul dd dl param indent indent The the indentation indentation throws java io io IOException i o If the the data data could could not not be be written write to to the the writer writer see see toString to protected void print print PrintWriter print writer writer writer int indent indent try if this name name null this writeEncoded write encode writer writer this contents content return char spaces space new char indent indent 2 2 Arrays fill fill spaces space writer writer write write spaces space writer writer write write writer writer write write this name name if this attributes attribute isEmpty is empty Iterator iterator enm enm this attributes attribute keySet key set iterator iterator while enm enm hasNext ha next writer writer write write String key key String enm enm next next String value value String this attributes attribute get get key key writer writer write write key key writer writer write write writer writer write write this writeEncoded write encode writer writer value value writer writer write write if this contents content null this contents content length length 0 0 writer writer write write this writeEncoded write encode writer writer this contents content writer writer write write writer writer write write writer writer write write this name name writer writer write write else if this children child isEmpty is empty writer writer write write writer writer write write else writer writer write write writer writer write write Iterator iterator enm enm this getChildren get child iterator iterator while enm enm hasNext ha next XMLElement xml element child child XMLElement xml element enm enm next next child child print print writer writer indent indent + + 1 1 writer writer write write spaces space writer writer write write writer writer write write writer writer write write this name name writer writer write write writer writer write write catch IOException i o e e InternalError internal error new InternalError internal e e getMessage get message error initCause init cause e e throw error Writes write a a string encoded encode to to a a writer writer param writer writer The the writer writer to to write write the the XML xml data data to to param str str The the string to to write write encoded encode dl dl dt b b Preconditions precondition b b dt dd ul li code writer writer null code li code writer writer code is is not not closed close li code str str null code ul dd dl protected void writeEncoded write encode Writer writer writer writer String str str throws IOException i o for int i i 0 0 i i str str length length i i + + 1 1 char ch ch str str charAt at i i switch ch ch case writer writer write write writer writer write write l l writer writer write write t t writer writer write write break case writer writer write write writer writer write write g g writer writer write write t t writer writer write write break case writer writer write write writer writer write write a a writer writer write write m m writer writer write write p p writer writer write write break case writer writer write write writer writer write write q q writer writer write write u u writer writer write write o o writer writer write write t t writer writer write write break case \ \ writer writer write write writer writer write write a a writer writer write write p p writer writer write write o o writer writer write write s s writer writer write write break default int unicode unicode int ch ch if unicode unicode 32 32 || || isEncodeUnicodeCharacters is encode unicode character unicode unicode 126 126 writer writer write write writer writer write write writer writer write write x x writer writer write write Integer toString to unicode unicode 16 16 writer writer write write else writer writer write write ch ch Scans scan an an identifier identifier from from the the current current reader reader The the scanned scan identifier identifier is is appended append to to code result result code param result result The the buffer buffer in in which which the the scanned scan identifier identifier will will be be put put dl dl dt b b Preconditions precondition b b dt dd ul li code result result null code li The the next next character character read read from from the the reader reader is is a a valid valid first first character character of of an an XML xml identifier identifier ul dd dl dl dt b b Postconditions postcondition b b dt dd ul li The the next next character character read read from from the the reader reader won won t t be be an an identifier identifier character character ul dd dl dl protected void scanIdentifier scan identifier StringBuffer buffer result result throws IOException i o for char ch ch this readChar read if ch ch A a || || ch ch Z z ch ch a a || || ch ch z z ch ch 0 0 || || ch ch 9 9 ch ch ch ch ch ch ch ch ch ch \u007E \u007 e this unreadChar unread ch ch return result result append append ch ch This method scans scan an an identifier identifier from from the the current current reader reader return the the next next character character following following the the whitespace whitespace protected char scanWhitespace scan whitespace throws IOException i o for char ch ch this readChar read switch ch ch case case case case \r \r break default return ch ch This method scans scan an an identifier identifier from from the the current current reader reader The the scanned scan whitespace whitespace is is appended append to to code result result code return the the next next character character following following the the whitespace whitespace dl dl dt b b Preconditions precondition b b dt dd ul li code result result null code ul dd dl protected char scanWhitespace scan whitespace StringBuffer buffer result result throws IOException i o for char ch ch this readChar read switch ch ch case case case result result append append ch ch case \r \r break default return ch ch This method scans scan a a delimited delimit string from from the the current current reader reader The the scanned scan string without without delimiters delimiter is is appended append to to code string code dl dl dt b b Preconditions precondition b b dt dd ul li code string null code li the the next next char read read is is the the string delimiter delimit ul dd dl protected void scanString scan StringBuffer buffer string throws IOException i o char delimiter delimit this readChar read if delimiter delimit \ \ delimiter delimit throw this expectedInput expect input or or \ \ for char ch ch this readChar read if ch ch delimiter delimit return else if ch ch this resolveEntity resolve entity string else string append append ch ch Scans scan a a PCDATA p c d a t a element element CDATA c d a t a sections section and and entities entity are are resolved resolve The the next next lt lt char is is skipped skip The the scanned scan data data is is appended append to to code data data code dl dl dt b b Preconditions precondition b b dt dd ul li code data data null code ul dd dl protected void scanPCData scan p c data StringBuffer buffer data data throws IOException i o for char ch ch this readChar read if ch ch ch ch this readChar read if ch ch this checkCDATA check c d a t a data data else this unreadChar unread ch ch return else if ch ch this resolveEntity resolve entity data data else data data append append ch ch Scans scan a a special special tag tag and and if the the tag tag is is a a CDATA c d a t a section section append append its it content content to to code buf buf code dl dl dt b b Preconditions precondition b b dt dd ul li code buf buf null code li The the first first lt lt has ha already already been be read read ul dd dl protected boolean checkCDATA check c d a t a StringBuffer buffer buf buf throws IOException i o char ch ch this readChar read if ch ch this unreadChar unread ch ch this skipSpecialTag skip special tag 0 0 return false else if this checkLiteral check literal CDATA c d a t a this skipSpecialTag skip special tag 1 1 one one has ha already already been be read read return false else int delimiterCharsSkipped delimit skip 0 0 while delimiterCharsSkipped delimit skip 3 3 ch ch this readChar read switch ch ch case if delimiterCharsSkipped delimit skip 2 2 delimiterCharsSkipped delimit skip + + 1 1 else buf buf append append buf buf append append delimiterCharsSkipped delimit skip 0 0 break case if delimiterCharsSkipped delimit skip 2 2 for int i i 0 0 i i delimiterCharsSkipped delimit skip i++ i++ buf buf append append delimiterCharsSkipped delimit skip 0 0 buf buf append append else delimiterCharsSkipped delimit skip 3 3 break default for int i i 0 0 i i delimiterCharsSkipped delimit skip i i + + 1 1 buf buf append append buf buf append append ch ch delimiterCharsSkipped delimit skip 0 0 return true Skips skip a a comment comment dl dl dt b b Preconditions precondition b b dt dd ul li The the first first lt lt has ha already already been be read read ul dd dl protected void skipComment skip comment throws IOException i o int dashesToRead dash to read 2 2 while dashesToRead dash to read 0 0 char ch ch this readChar read if ch ch dashesToRead dash to read 1 1 else dashesToRead dash to read 2 2 if this readChar read throw this expectedInput expect input Skips skip a a special special tag tag or or comment comment param bracketLevel bracket level The the number number of of open open square square brackets bracket that that have have already already been be read read dl dl dt b b Preconditions precondition b b dt dd ul li The the first first lt lt has ha already already been be read read li code bracketLevel bracket level 0 0 code ul dd dl protected void skipSpecialTag skip special tag int bracketLevel bracket level throws IOException i o int tagLevel tag level 1 1 char stringDelimiter delimit \0 \0 if bracketLevel bracket level 0 0 char ch ch this readChar read if ch ch bracketLevel bracket level + + 1 1 else if ch ch ch ch this readChar read if ch ch bracketLevel bracket level + + 1 1 else if ch ch bracketLevel bracket level 1 1 else if ch ch this skipComment skip comment return while tagLevel tag level 0 0 char ch ch this readChar read if stringDelimiter delimit \0 \0 if ch ch || || ch ch \ \ stringDelimiter delimit ch ch else if bracketLevel bracket level 0 0 if ch ch tagLevel tag level + + 1 1 else if ch ch tagLevel tag level 1 1 if ch ch bracketLevel bracket level + + 1 1 else if ch ch bracketLevel bracket level 1 1 else if ch ch stringDelimiter delimit stringDelimiter delimit \0 \0 Scans scan the the data data for literal literal text text Scanning scanning stops stop when when a a character character does doe not not match match or or after after the the complete complete text text has ha been be checked check whichever whichev comes come first first param literal literal the the literal literal to to check check dl dl dt b b Preconditions precondition b b dt dd ul li code literal literal null code ul dd dl protected boolean checkLiteral check literal String literal literal throws IOException i o int length length literal literal length length for int i i 0 0 i i length length i i + + 1 1 if this readChar read literal literal charAt at i i return false return true Reads read a a character character from from a a reader reader protected char readChar read throws IOException i o if this charReadTooMuch read too much \0 \0 char ch ch this charReadTooMuch read too much this charReadTooMuch read too much \0 \0 return ch ch else int i i this reader reader read read if i i 0 0 throw this unexpectedEndOfData unexpect end of data else if i i 10 10 this parserLineNr parser line nr + + 1 1 return else return char i i Scans scan an an XML xml element element param elt elt The the element element that that will will contain contain the the result result dl dl dt b b Preconditions precondition b b dt dd ul li The the first first lt lt has ha already already been be read read li code elt elt null code ul dd dl protected void scanElement scan element XMLElement xml element elt elt throws IOException i o StringBuffer buffer buf buf new StringBuffer buffer this scanIdentifier scan identifier buf buf String name name buf buf toString to elt elt setName set name name name char ch ch this scanWhitespace scan whitespace while ch ch ch ch buf buf setLength set length 0 0 this unreadChar unread ch ch this scanIdentifier scan identifier buf buf String key key buf buf toString to ch ch this scanWhitespace scan whitespace if ch ch throw this expectedInput expect input this unreadChar unread this scanWhitespace scan whitespace buf buf setLength set length 0 0 this scanString scan buf buf elt elt setAttribute set attribute key key buf buf ch ch this scanWhitespace scan whitespace if ch ch ch ch this readChar read if ch ch throw this expectedInput expect input return buf buf setLength set length 0 0 ch ch this scanWhitespace scan whitespace buf buf if ch ch this unreadChar unread ch ch this scanPCData scan p c data buf buf else for ch ch this readChar read if ch ch if this checkCDATA check c d a t a buf buf this scanPCData scan p c data buf buf break else ch ch this scanWhitespace scan whitespace buf buf if ch ch this unreadChar unread ch ch this scanPCData scan p c data buf buf break else if ch ch || || this ignoreWhitespace ignore whitespace buf buf setLength set length 0 0 if ch ch this unreadChar unread ch ch break if buf buf length length 0 0 while ch ch if ch ch ch ch this readChar read if ch ch throw this expectedInput expect input Comment comment or or Element element ch ch this readChar read if ch ch throw this expectedInput expect input Comment comment or or Element element this skipComment skip comment else this unreadChar unread ch ch XMLElement xml element child child this createElement create element this scanElement scan element child child elt elt addChild add child child child ch ch this scanWhitespace scan whitespace if ch ch throw this expectedInput expect input ch ch this readChar read this unreadChar unread ch ch else if this ignoreWhitespace ignore whitespace elt elt setContent set content buf buf toString to trim trim else elt elt setContent set content buf buf toString to ch ch this readChar read if ch ch throw this expectedInput expect input this unreadChar unread this scanWhitespace scan whitespace if this checkLiteral check literal name name throw this expectedInput expect input name name if this scanWhitespace scan whitespace throw this expectedInput expect input Resolves resolve an an entity entity The the name name of of the the entity entity is is read read from from the the reader reader The the value value of of the the entity entity is is appended append to to code buf buf code param buf buf Where where to to put put the the entity entity value value dl dl dt b b Preconditions precondition b b dt dd ul li The the first first amp amp has ha already already been be read read li code buf buf null code ul dd dl protected void resolveEntity resolve entity StringBuffer buffer buf buf throws IOException i o char ch ch \0 \0 StringBuffer buffer keyBuf key buf new StringBuffer buffer for ch ch this readChar read if ch ch break keyBuf key buf append append ch ch String key key keyBuf key buf toString to if key key charAt at 0 0 try if key key charAt at 1 1 x x ch ch char Integer parseInt parse key key substring substring 2 2 16 16 else ch ch char Integer parseInt parse key key substring substring 1 1 10 10 catch NumberFormatException number format e e throw this unknownEntity unknown entity key key buf buf append append ch ch else char value value char this entities entity get get key key if value value null throw this unknownEntity unknown entity key key buf buf append append value value Pushes push a a character character back back to to the the read read back back buffer buffer param ch ch The the character character to to push push back back dl dl dt b b Preconditions precondition b b dt dd ul li The the read read back back buffer buffer is is empty empty li code ch ch \0 \0 code ul dd dl protected void unreadChar unread char ch ch this charReadTooMuch read too much ch ch Creates create a a parse parse exception for when when an an invalid invalid valueset valueset is is given given to to a a method param name name The the name name of of the the entity entity dl dl dt b b Preconditions precondition b b dt dd ul li code name name null code ul dd dl protected XMLParseException xml parse invalidValueSet invalid value set String name name String msg msg Invalid invalid value value set set entity entity name name \ \ + + name name + + \ \ return new XMLParseException xml parse this getName get name this parserLineNr parser line nr msg msg Creates create a a parse parse exception for when when an an invalid invalid value value is is given given to to a a method param name name The the name name of of the the entity entity param value value The the value value of of the the entity entity dl dl dt b b Preconditions precondition b b dt dd ul li code name name null code li code value value null code ul dd dl protected XMLParseException xml parse invalidValue invalid value String name name String value value String msg msg Attribute attribute \ \ + + name name + + \ \ does doe not not contain contain a a valid valid + + value value \ \ + + value value + + \ \ return new XMLParseException xml parse this getName get name this parserLineNr parser line nr msg msg Creates create a a parse parse exception for when when the the end end of of the the data data input input has ha been be reached reach protected XMLParseException xml parse unexpectedEndOfData unexpect end of data String msg msg Unexpected unexpect end end of of data data reached reach return new XMLParseException xml parse this getName get name this parserLineNr parser line nr msg msg Creates create a a parse parse exception for when when a a syntax syntax error occured occur param context context The the context context in in which which the the error occured occur dl dl dt b b Preconditions precondition b b dt dd ul li code context context null code li code context context length length gt 0 0 code ul dd dl protected XMLParseException xml parse syntaxError syntax String context context String msg msg Syntax syntax error while parsing parse + + context context return new XMLParseException xml parse this getName get name this parserLineNr parser line nr msg msg Creates create a a parse parse exception for when when the the next next character character read read is is not not the the character character that that was wa expected expect param charSet set The the set set of of characters character in in human human readable readable form form that that was wa expected expect dl dl dt b b Preconditions precondition b b dt dd ul li code charSet set null code li code charSet set length length gt 0 0 code ul dd dl protected XMLParseException xml parse expectedInput expect input String charSet set String msg msg Expected expect + + charSet set return new XMLParseException xml parse this getName get name this parserLineNr parser line nr msg msg Creates create a a parse parse exception for when when an an entity entity could could not not be be resolved resolve param name name The the name name of of the the entity entity dl dl dt b b Preconditions precondition b b dt dd ul li code name name null code li code name name length length gt 0 0 code ul dd dl protected XMLParseException xml parse unknownEntity unknown entity String name name String msg msg Unknown unknown or or invalid invalid entity entity + + name name + + return new XMLParseException xml parse this getName get name this parserLineNr parser line nr msg msg 