BezierScaleHandle bezi scale handle java 1 1 0 0 16 16 Juni juni 2006 2006 Copyright copyright c c 1996 1996 2006 2006 by by the the original original authors author of of JHotDraw jhotdraw and and all all its it contributors contributor JHotDraw jhotdraw org org All all rights right reserved reserve This software software is is the the confidential confidential and and proprietary proprietary information information of of JHotDraw jhotdraw org org Confidential confidential Information information You you shall shall not not disclose disclose such such Confidential confidential Information information and and shall shall use use it it only only in in accordance accordance with with the the terms term of of the the license license agreement agreement you you entered enter into into with with JHotDraw jhotdraw org org package org org jhotdraw jhotdraw draw draw import org org jhotdraw jhotdraw util util import org org jhotdraw jhotdraw undo undo import java awt awt import java awt awt event event import java awt awt geom geom import java util util import org org jhotdraw jhotdraw geom geom A a Handle handle to to scale scale and and rotate rotate a a BezierFigure bezi figure Pressing pressing the the alt alt key key or or the the shift shift key key while manipulating manipulate the the handle handle restricts restrict the the handle handle to to only only rotate rotate the the BezierFigure bezi figure author author Werner wern Randelshofer randelshof version 1 1 0 0 16 16 Juni juni 2006 2006 Created create public class BezierScaleHandle bezi scale handle extends AbstractHandle handle private Point point location location private Object restoreData restore data private AffineTransform affine transform transform transform private Point2D point2 d Double center center private double startTheta start theta private double startLength start length Creates create a a new instance instance public BezierScaleHandle bezi scale handle BezierFigure bezi figure owner owner super owner owner public boolean isCombinableWith is combinable with Handle handle h h return false Draws draw this handle handle public void draw draw Graphics2D graphics2 d g g drawCircle draw circle g g Color color yellow yellow Color color black black protected Rectangle rectangle basicGetBounds basic get bound Rectangle rectangle r r new Rectangle rectangle getLocation get location r r grow grow getHandlesize get handlesize 2 2 getHandlesize get handlesize 2 2 return r r public Point point getLocation get location if location location null return location location view view drawingToView drawing to view getOrigin get origin return location location private BezierFigure bezi figure getBezierFigure get bezi figure return BezierFigure bezi figure getOwner get owner private Point2D point2 d Double getOrigin get origin find find a a nice nice place place to to put put handle handle Need need to to pick pick a a place place that that will will not not overlap overlap with with point point handle handle and and is is internal internal to to polygon polygon int handlesize handlesize getHandlesize get handlesize Try for one one handlesize handlesize step step away away from from outermost outermost toward toward center center Point2D point2 d Double outer out getBezierFigure get bezi figure getOutermostPoint get outermost point Point2D point2 d Double ctr ctr getBezierFigure get bezi figure getCenter get center double len len Geom geom length length outer out x x outer out y y ctr ctr x x ctr ctr y y if len len 0 0 best best we we can can do? do? return new Point2D point2 d Double outer out x x handlesize handlesize 2 2 outer out y y + + handlesize handlesize 2 2 double u u handlesize handlesize len len if u u 1 1 0 0 best best we we can can do? do? return new Point2D point2 d Double outer out x x 3 3 + + ctr ctr x x 4 4 outer out y y 3 3 + + ctr ctr y y 4 4 else return new Point2D point2 d Double outer out x x 1 1 0 0 u u + + ctr ctr x x u u outer out y y 1 1 0 0 u u + + ctr ctr y y u u public void trackStart track start Point point anchor anchor int modifiersEx modifier ex location location new Point point anchor anchor x x anchor anchor y y restoreData restore data getBezierFigure get bezi figure getRestoreData get restore data transform transform new AffineTransform affine transform center center getBezierFigure get bezi figure getCenter get center Point2D point2 d Double anchorPoint anchor point view view viewToDrawing view to drawing anchor anchor startTheta start theta Geom geom angle angle center center x x center center y y anchorPoint anchor point x x anchorPoint anchor point y y startLength start length Geom geom length length center center x x center center y y anchorPoint anchor point x x anchorPoint anchor point y y public void trackStep track step Point point anchor anchor Point point lead int modifiersEx modifier ex location location new Point point lead x x lead y y Point2D point2 d Double leadPoint point view view viewToDrawing view to drawing lead double stepTheta step theta Geom geom angle angle center center x x center center y y leadPoint point x x leadPoint point y y double stepLength step length Geom geom length length center center x x center center y y leadPoint point x x leadPoint point y y double scaleFactor scale factor modifiersEx modifier ex InputEvent input event ALT a l t DOWN d o w n MASK m a s k | | InputEvent input event SHIFT s h i f t DOWN d o w n MASK m a s k 0 0 ? ? 1d 1d stepLength step length startLength start length transform transform setToIdentity set to identity transform transform translate translate center center x x center center y y transform transform scale scale scaleFactor scale factor scaleFactor scale factor transform transform rotate rotate stepTheta step theta startTheta start theta transform transform translate translate center center x x center center y y getOwner get owner willChange will change getOwner get owner restoreTo restore to restoreData restore data getOwner get owner basicTransform basic transform transform transform getOwner get owner changed change public void scaleRotate scale rotate Point point anchor anchor Polygon polygon originalPolygon original polygon Point point p p willChange will change use use center center to to determine determine relative relative angles angle and and lengths length Point point ctr ctr center center originalPolygon original polygon double anchorLen anchor len Geom geom length length ctr ctr x x ctr ctr y y anchor anchor x x anchor anchor y y if anchorLen anchor len 0 0 0 0 double newLen len Geom geom length length ctr ctr x x ctr ctr y y p p x x p p y y double ratio ratio newLen len anchorLen anchor len double anchorAngle anchor angle Math math atan2 atan2 anchor anchor y y ctr ctr y y anchor anchor x x ctr ctr x x double newAngle angle Math math atan2 atan2 p p y y ctr ctr y y p p x x ctr ctr x x double rotation rotation newAngle angle anchorAngle anchor angle int n n originalPolygon original polygon npoints npoint int xs x new int n n int ys y new int n n for int i i 0 0 i i n n ++i ++i int x x originalPolygon original polygon xpoints xpoint i i int y y originalPolygon original polygon ypoints ypoint i i double l l Geom geom length length ctr ctr x x ctr ctr y y x x y y ratio ratio double a a Math math atan2 atan2 y y ctr ctr y y x x ctr ctr x x + + rotation rotation xs x i i int ctr ctr x x + + l l Math math cos co a a + + 0 0 5 5 ys y i i int ctr ctr y y + + l l Math math sin sin a a + + 0 0 5 5 setInternalPolygon set internal polygon new Polygon polygon xs x ys y n n changed change public void trackEnd track end Point point anchor anchor Point point lead int modifiersEx modifier ex view view getDrawing get drawing fireUndoableEditHappened fire undoable edit happen new RestoreDataEdit restore data edit getOwner get owner restoreData restore data location location null 