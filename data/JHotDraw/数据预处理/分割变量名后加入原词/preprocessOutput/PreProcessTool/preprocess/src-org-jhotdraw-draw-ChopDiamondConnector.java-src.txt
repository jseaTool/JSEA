ChopDiamondConnector chop diamond connector java 1 1 0 0 27 27 M???rz m???rz 2006 2006 Copyright copyright c c 1996 1996 2006 2006 by by the the original original authors author of of JHotDraw jhotdraw and and all all its it contributors contributor JHotDraw jhotdraw org org All all rights right reserved reserve This software software is is the the confidential confidential and and proprietary proprietary information information of of JHotDraw jhotdraw org org Confidential confidential Information information You you shall shall not not disclose disclose such such Confidential confidential Information information and and shall shall use use it it only only in in accordance accordance with with the the terms term of of the the license license agreement agreement you you entered enter into into with with JHotDraw jhotdraw org org ??? ??? package org org jhotdraw jhotdraw draw draw import java awt awt import java awt awt geom geom import static org org jhotdraw jhotdraw draw draw AttributeKeys attribute key import org org jhotdraw jhotdraw geom geom A a ChopDiamondConnector chop diamond connector locates locate connection connection points point by by choping chop the the connection connection between between the the centers center of of the the two two figures figure at at the the edge edge of of a a diamond diamond figure figure author author Werner wern Randelshofer randelshof version 1 1 0 0 27 27 M???rz m???rz 2006 2006 Created create public class ChopDiamondConnector chop diamond connector extends ChopBoxConnector chop box connector public ChopDiamondConnector chop diamond connector only only used use for Storable storable implementation public ChopDiamondConnector chop diamond connector Figure figure owner owner super owner owner Return an an appropriate appropriate connection connection point point on on the the edge edge of of a a diamond diamond figure figure protected Point2D point2 d Double chop chop Figure figure target target Point2D point2 d Double from from target target getConnectorTarget get connector target target target Rectangle2D rectangle2 d Double r r target target getBounds get bound if DiamondFigure diamond figure IS i s QUADRATIC q u a d r a t i c get get target target double side side Math math max max r r width width r r height height r r x x side side r r width width 2 2 r r y y side side r r height height 2 2 r r width width r r height height side side double growx growx double growy growy FIXME f i x m e This code is is wrong wrong Copy copy correct correct code from from DiamondFigure diamond figure switch STROKE s t r o k e PLACEMENT p l a c e m e n t get get target target case INSIDE i n s e growx growx growy growy 0f 0f break case OUTSIDE o u t s e double lineLength line length Math math sqrt sqrt r r width width r r width width + + r r height height r r height height double scale scale getStrokeTotalWidth get stroke total width target target 2d 2d lineLength line length growx growx scale scale r r height height growy growy scale scale r r width width growy growy getStrokeTotalWidth get stroke total width SQRT2 s q r t2 break case CENTER c e n t e r default double lineLength line length Math math sqrt sqrt r r width width r r width width + + r r height height r r height height double scale scale getStrokeTotalWidth get stroke total width target target lineLength line length growx growx scale scale r r height height growy growy scale scale r r width width growx growx growy growy getStrokeTotalWidth get stroke total width 2d 2d SQRT2 s q r t2 break Geom geom grow grow r r growx growx growy growy Center center point point Point2D point2 d Double c1 c1 new Point2D point2 d Double r r x x + + r r width width 2 2 r r y y + + r r height height 2 2 Point2D point2 d Double p2 p2 new Point2D point2 d Double r r x x + + r r width width 2 2 r r y y + + r r height height Point2D point2 d Double p4 p4 new Point2D point2 d Double r r x x + + r r width width 2 2 r r y y If overlapping overlapping just just return the the opposite opposite corners corner if r r contains contain from from if from from y y r r y y from from y y r r y y +r +r height height 2 2 return p2 p2 else return p4 p4 Calculate calculate angle angle to to determine determine quadrant quadrant double ang ang Geom geom pointToAngle point to angle r r from from Dermine dermine line line points point Point2D point2 d Double p1 p1 new Point2D point2 d Double r r x x + + r r width width r r y y + + r r height height 2 2 Point2D point2 d Double p3 p3 new Point2D point2 d Double r r x x r r y y + + r r height height 2 2 Point2D point2 d Double rp rp null This will will be be returned Get get the the intersection intersection with with edges edge if ang ang 0 0 ang ang 1 1 57 57 rp rp Geom geom intersect intersect p1 p1 x x p1 p1 y y p2 p2 x x p2 p2 y y c1 c1 x x c1 c1 y y from from x x from from y y else if ang ang 1 1 575 575 ang ang 3 3 14 14 rp rp Geom geom intersect intersect p2 p2 x x p2 p2 y y p3 p3 x x p3 p3 y y c1 c1 x x c1 c1 y y from from x x from from y y else if ang ang 3 3 14 14 ang ang 1 1 575 575 rp rp Geom geom intersect intersect p3 p3 x x p3 p3 y y p4 p4 x x p4 p4 y y c1 c1 x x c1 c1 y y from from x x from from y y else if ang ang 1 1 57 57 ang ang 0 0 rp rp Geom geom intersect intersect p4 p4 x x p4 p4 y y p1 p1 x x p1 p1 y y c1 c1 x x c1 c1 y y from from x x from from y y No no proper proper edge edge found found we we should should send send one one of of four four corners corner if rp rp null rp rp Geom geom angleToPoint angle to point r r ang ang return rp rp 