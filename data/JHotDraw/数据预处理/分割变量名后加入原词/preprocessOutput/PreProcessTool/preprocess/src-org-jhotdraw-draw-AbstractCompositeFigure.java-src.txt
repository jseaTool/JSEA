AbstractCompositeFigure composite figure java 2 2 2 2 2006 2006 07 07 08 08 Copyright copyright c c 1996 1996 2006 2006 by by the the original original authors author of of JHotDraw jhotdraw and and all all its it contributors contributor JHotDraw jhotdraw org org All all rights right reserved reserve This software software is is the the confidential confidential and and proprietary proprietary information information of of JHotDraw jhotdraw org org Confidential confidential Information information You you shall shall not not disclose disclose such such Confidential confidential Information information and and shall shall use use it it only only in in accordance accordance with with the the terms term of of the the license license agreement agreement you you entered enter into into with with JHotDraw jhotdraw org org package org org jhotdraw jhotdraw draw draw import java io io IOException i o import org org jhotdraw jhotdraw util util import org org jhotdraw jhotdraw util util import java awt awt import java awt awt geom geom import java util util import javax javax swing swing event event import javax javax swing swing undo undo import org org jhotdraw jhotdraw geom geom import org org jhotdraw jhotdraw xml xml DOMInput dom input import org org jhotdraw jhotdraw xml xml DOMOutput dom output A a Figure figure that that is is composed compose of of several several children child A a AbstractCompositeFigure composite figure doesn doesn t t define define any any layout layout behavior behavior It it is is up up to to subclassers subclasser to to arrange arrange the the contained contain children child author author Werner wern Randelshofer randelshof version 2 2 2 2 2006 2006 07 07 08 08 Minor minor changes change br 2 2 1 1 2006 2006 03 03 15 15 Fire fire undoable undoable edit edit on on attribute attribute change change br 2 2 0 0 1 1 2006 2006 02 02 06 06 Fixed fix ConcurrentModificationException concurrent modification in in method removeNotify remove notify br 2 2 0 0 2006 2006 01 01 14 14 Changed change to to support support double precision precision coordinates coordinate br 1 1 0 0 2003 2003 12 12 01 01 Derived derive from from JHotDraw jhotdraw 5 5 4b1 4b1 public abstract class AbstractCompositeFigure composite figure extends AbstractFigure figure implements CompositeFigure composite figure The the children child that that this figure figure is is composed compose of of see see add add see see removeChild remove child private LinkedList link list Figure figure children child new LinkedList link list Figure figure Cached cache draw draw bounds bound private Rectangle2D rectangle2 d Double drawBounds draw bound Cached cache layout layout bounds bound private Rectangle2D rectangle2 d Double bounds bound A a Layouter layout determines determine how how the the AbstractCompositeFigure composite figure should should be be laid lay out out graphically graphically private Layouter layout layouter layout Handles handle figure figure changes change in in the the children child private ChildHandler child handler childHandler child handler new ChildHandler child handler this private static class ChildHandler child handler implements FigureListener figure listener UndoableEditListener undoable edit listener private AbstractCompositeFigure composite figure owner owner private ChildHandler child handler AbstractCompositeFigure composite figure owner owner this owner owner owner owner public void figureRequestRemove figure request remove FigureEvent figure event e e owner owner remove remove e e getFigure get figure public void figureRemoved figure remove FigureEvent figure event evt evt owner owner remove remove evt evt getFigure get figure public void figureChanged figure change FigureEvent figure event e e if owner owner isChanging is change owner owner willChange will change owner owner fireFigureChanged fire figure change e e owner owner changed change public void figureAdded figure add FigureEvent figure event e e public void figureAttributeChanged figure attribute change FigureEvent figure event e e public void figureAreaInvalidated figure area invalidate FigureEvent figure event e e if owner owner isChanging is change owner owner fireAreaInvalidated fire area invalidate e e getInvalidatedArea get invalidate area public void undoableEditHappened undoable edit happen UndoableEditEvent undoable edit event e e owner owner fireUndoableEditHappened fire undoable edit happen e e getEdit get edit Creates create a a new instance instance public AbstractCompositeFigure composite figure public Collection collection Handle handle createHandles create handle int detailLevel detail level if detailLevel detail level 0 0 return super createHandles create handle 0 0 else LinkedList link list Handle handle handles handle new LinkedList link list Handle handle for Figure figure child child children child handles handle addAll add all child child createHandles create handle detailLevel detail level 1 1 return handles handle LinkedList link list Handle handle handles handle new LinkedList link list Handle handle return handles handle public void add add Figure figure figure figure add add getChildCount get child count figure figure public void add add final int index index final Figure figure figure figure willChange will change basicAdd basic add index index figure figure if getDrawing get drawing null figure figure addNotify add notify getDrawing get drawing changed change public void addAll add all Collection collection Figure figure newFigures figure willChange will change for Figure figure f f newFigures figure basicAdd basic add getChildCount get child count f f if getDrawing get drawing null f f addNotify add notify getDrawing get drawing changed change public void basicAdd basic add Figure figure figure figure basicAdd basic add getChildCount get child count figure figure public void basicAdd basic add int index index Figure figure figure figure children child add add index index figure figure figure figure addFigureListener add figure listener childHandler child handler figure figure addUndoableEditListener add undoable edit listener childHandler child handler public void basicAddAll basic add all Collection collection Figure figure newFigures figure for Figure figure f f newFigures figure basicAdd basic add getChildCount get child count f f public void addNotify add notify Drawing drawing drawing drawing super addNotify add notify drawing drawing for Figure figure child child children child child child addNotify add notify drawing drawing public void removeNotify remove notify Drawing drawing drawing drawing Copy copy children child collection collection to to avoid avoid concurrent concurrent modification modification exception for Figure figure child child new LinkedList link list Figure figure children child child child removeNotify remove notify drawing drawing super removeNotify remove notify drawing drawing public boolean remove remove final Figure figure figure figure int index index children child indexOf index of figure figure if index index 1 1 return false else willChange will change basicRemoveChild basic remove child index index if getDrawing get drawing null figure figure removeNotify remove notify getDrawing get drawing changed change return true public Figure figure removeChild remove child int index index willChange will change Figure figure removed remove basicRemoveChild basic remove child index index if getDrawing get drawing null removed remove removeNotify remove notify getDrawing get drawing changed change return removed remove public boolean basicRemove basic remove final Figure figure figure figure int index index children child indexOf index of figure figure if index index 1 1 return false else basicRemoveChild basic remove child index index return true public Figure figure basicRemoveChild basic remove child int index index Figure figure figure figure children child remove remove index index figure figure removeFigureListener remove figure listener childHandler child handler figure figure removeUndoableEditListener remove undoable edit listener childHandler child handler return figure figure Removes remove all all children child see see add add public void removeAllChildren remove all child willChange will change while children child size size 0 0 Figure figure f f basicRemoveChild basic remove child children child size size 1 1 if getDrawing get drawing null f f addNotify add notify getDrawing get drawing changed change public void basicRemoveAllChildren basic remove all child while children child size size 0 0 Figure figure f f basicRemoveChild basic remove child children child size size 1 1 Sends send a a figure figure to to the the back back of of the the composite composite figure figure param figure figure that that is is part part of of this composite composite figure figure public synchronized void sendToBack send to back Figure figure figure figure if children child remove remove figure figure children child add add 0 0 figure figure figure figure invalidate invalidate Sends send a a figure figure to to the the front front of of the the drawing drawing param figure figure that that is is part part of of the the drawing drawing public synchronized void sendToFront send to front Figure figure figure figure if children child remove remove figure figure children child add add figure figure figure figure invalidate invalidate Transforms transform the the figure figure public void basicTransform basic transform AffineTransform affine transform tx tx for Figure figure f f children child f f basicTransform basic transform tx tx invalidateBounds invalidate bound public void basicSetBounds basic set bound Point2D point2 d Double anchor anchor Point2D point2 d Double lead Rectangle2D rectangle2 d Double oldBounds old bound getBounds get bound Rectangle2D rectangle2 d Double newBounds bound new Rectangle2D rectangle2 d Double Math math min min anchor anchor x x lead x x Math math min min anchor anchor y y lead y y Math math abs ab anchor anchor x x lead x x Math math abs ab anchor anchor y y lead y y double sx sx newBounds bound width width oldBounds old bound width width double sy sy newBounds bound height height oldBounds old bound height height AffineTransform affine transform tx tx new AffineTransform affine transform tx tx translate translate oldBounds old bound x x oldBounds old bound y y if Double isNaN is na n sx sx Double isNaN is na n sy sy sx sx 1d 1d || || sy sy 1d 1d sx sx 0 0 0001 0001 sy sy 0 0 0001 0001 basicTransform basic transform tx tx tx tx setToIdentity set to identity tx tx scale scale sx sx sy sy basicTransform basic transform tx tx tx tx setToIdentity set to identity tx tx translate translate newBounds bound x x newBounds bound y y basicTransform basic transform tx tx public void undoableEditHappened undoable edit happen UndoableEditEvent undoable edit event e e fireUndoableEditHappened fire undoable edit happen e e getEdit get edit public java util util List list Figure figure getChildren get child return Collections collection unmodifiableList unmodifiable list children child public int getChildCount get child count return children child size size public Figure figure getChild get child int index index return children child get get index index Returns an an iterator iterator to to iterate iterate in in Z z order order front front to to back back over over the the children child public java util util List list Figure figure getChildrenFrontToBack get child front to back return children child null ? ? new LinkedList link list Figure figure new ReversedList reverse list Figure figure children child public void setAttribute set attribute AttributeKey attribute key name name Object value value willChange will change for Figure figure child child children child child child setAttribute set attribute name name value value changed change public void basicSetAttribute basic set attribute AttributeKey attribute key name name Object value value for Figure figure child child children child child child basicSetAttribute basic set attribute name name value value public Object getAttribute get attribute AttributeKey attribute key name name return null public boolean contains contain Point2D point2 d Double p p if getDrawBounds get draw bound contains contain p p for Figure figure child child getChildrenFrontToBack get child front to back if child child isVisible is visible child child contains contain p p return true return false public Figure figure findFigureInside find figure inside Point2D point2 d Double p p if getDrawBounds get draw bound contains contain p p Figure figure found found null for Figure figure child child getChildrenFrontToBack get child front to back if child child isVisible is visible found found child child findFigureInside find figure inside p p if found found null return found found return null public Figure figure findChild find child Point2D point2 d Double p p if getBounds get bound contains contain p p Figure figure found found null for Figure figure child child getChildrenFrontToBack get child front to back if child child isVisible is visible child child contains contain p p return child child return null public int findChildIndex find child index Point2D point2 d Double p p Figure figure child child findChild find child p p return child child null ? ? 1 1 children child indexOf index of child child Get get a a Layouter layout object which which encapsulated encapsulate a a layout layout algorithm algorithm for this figure figure Typically typically a a Layouter layout accesses access the the child child components component of of this figure figure and and arranges arrange their their graphical graphical presentation presentation return layout layout strategy strategy used use by by this figure figure public Layouter layout getLayouter get layout return layouter layout A a layout layout algorithm algorithm is is used use to to define define how how the the child child components component should should be be laid lay out out in in relation relation to to each each other other The the task task for layouting layout the the child child components component for presentation presentation is is delegated delegate to to a a Layouter layout which which can can be be plugged plug in in at at runtime runtime public void layout layout if getLayouter get layout null Rectangle2D rectangle2 d Double bounds bound getBounds get bound Point2D point2 d Double p p new Point2D point2 d Double bounds bound x x bounds bound y y Rectangle2D rectangle2 d Double r r getLayouter get layout layout layout this p p p p basicSetBounds basic set bound new Point2D point2 d Double r r x x r r y y new Point2D point2 d Double r r x x + + r r width width r r y y + + r r height height invalidateBounds invalidate bound Set set a a Layouter layout object which which encapsulated encapsulate a a layout layout algorithm algorithm for this figure figure Typically typically a a Layouter layout accesses access the the child child components component of of this figure figure and and arranges arrange their their graphical graphical presentation presentation It it is is a a good good idea idea to to set set the the Layouter layout in in the the protected initialize initialize method so so it it can can be be recreated recreate if a a GraphicalCompositeFigure graphical composite figure is is read read and and restored restore from from a a StorableInput storable input stream stream param newLayouter layout encapsulation encapsulation of of a a layout layout algorithm algorithm public void setLayouter set layout Layouter layout newLayouter layout this layouter layout newLayouter layout public Dimension2DDouble dimension2 d getPreferredSize get prefer size if this layouter layout null Rectangle2D rectangle2 d Double r r layouter layout calculateLayout calculate layout this getStartPoint get start point getEndPoint get end point return new Dimension2DDouble dimension2 d r r width width r r height height else return super getPreferredSize get prefer size public Rectangle2D rectangle2 d Double getFigureDrawBounds get figure draw bound if drawBounds draw bound null for Figure figure child child getChildrenFrontToBack get child front to back if child child isVisible is visible Rectangle2D rectangle2 d Double childBounds child bound child child getDrawBounds get draw bound if childBounds child bound isEmpty is empty if drawBounds draw bound null drawBounds draw bound childBounds child bound else drawBounds draw bound add add childBounds child bound return drawBounds draw bound null ? ? new Rectangle2D rectangle2 d Double 0 0 0 0 1 1 1 1 Rectangle2D rectangle2 d Double drawBounds draw bound clone clone public Rectangle2D rectangle2 d Double getBounds get bound if bounds bound null for Figure figure child child getChildrenFrontToBack get child front to back if child child isVisible is visible if bounds bound null bounds bound child child getBounds get bound else bounds bound add add child child getBounds get bound return bounds bound null ? ? new Rectangle2D rectangle2 d Double 0 0 0 0 1 1 1 1 Rectangle2D rectangle2 d Double bounds bound clone clone public void drawFigure draw figure Graphics2D graphics2 d g g for Figure figure child child children child if child child isVisible is visible child child draw draw g g if isConnectorsVisible is connector visible drawConnectors draw connector g g protected void drawConnectors draw connector Graphics2D graphics2 d g g public AbstractCompositeFigure composite figure clone clone AbstractCompositeFigure composite figure that that AbstractCompositeFigure composite figure super clone clone that that childHandler child handler new ChildHandler child handler that that that that children child new LinkedList link list Figure figure for Figure figure thisChild child this children child Figure figure thatChild that child Figure figure thisChild child clone clone that that children child add add thatChild that child thatChild that child addFigureListener add figure listener that that childHandler child handler thatChild that child addUndoableEditListener add undoable edit listener that that childHandler child handler return that that protected void invalidateBounds invalidate bound bounds bound null drawBounds draw bound null public Collection collection Figure figure getDecomposition get decomposition LinkedList link list Figure figure list list new LinkedList link list Figure figure list list add add this list list addAll add all getChildren get child return list list public void read read DOMInput dom input in in throws IOException i o in in openElement open element children child for int i i 0 0 i i in in getElementCount get element count i++ i++ add add Figure figure in in readObject read i i in in closeElement close element public void write write DOMOutput dom output out out throws IOException i o out out openElement open element children child for Figure figure child child getChildren get child out out writeObject write child child out out closeElement close element public Map map AttributeKey attribute key Object getAttributes get attribute return new HashMap hash map AttributeKey attribute key Object public void restoreTo restore to Object geometry geometry LinkedList link list list list LinkedList link list geometry geometry int index index 0 0 for Object geom geom list list getChild get child index index restoreTo restore to geom geom index++ index++ invalidateBounds invalidate bound public Object getRestoreData get restore data LinkedList link list Object list list new LinkedList link list Object for Figure figure child child children child list list add add child child getRestoreData get restore data return list list public void willChange will change super willChange will change if getChangingDepth get change depth 1 1 for Figure figure child child children child child child willChange will change public void changed change if getChangingDepth get change depth 1 1 for Figure figure child child children child child child changed change super changed change public void invalidate invalidate super invalidate invalidate invalidateBounds invalidate bound protected void validate validate super validate validate layout layout invalidateBounds invalidate bound public void removeAttribute remove attribute AttributeKey attribute key key key do nothing nothing public boolean hasAttribute ha attribute AttributeKey attribute key key key return false 