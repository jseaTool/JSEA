CompositeFigure composite figure java 1 1 0 0 27 27 Januar januar 2006 2006 Copyright copyright c c 1996 1996 2006 2006 by by the the original original authors author of of JHotDraw jhotdraw and and all all its it contributors contributor JHotDraw jhotdraw org org All all rights right reserved reserve This software software is is the the confidential confidential and and proprietary proprietary information information of of JHotDraw jhotdraw org org Confidential confidential Information information You you shall shall not not disclose disclose such such Confidential confidential Information information and and shall shall use use it it only only in in accordance accordance with with the the terms term of of the the license license agreement agreement you you entered enter into into with with JHotDraw jhotdraw org org package org org jhotdraw jhotdraw draw draw import org org jhotdraw jhotdraw util util import java beans bean import java awt awt import java awt awt geom geom import java awt awt event event import java util util import javax javax swing swing import javax javax swing swing undo undo import javax javax swing swing event event import java io io import org org jhotdraw jhotdraw geom geom A a CompositeFigure composite figure is is composed compose of of several several child child Figures figure A a CompositeFigure composite figure can can be be laid lay out out using using a a Layouter layout author author Werner wern Randelshofer randelshof version 1 1 0 0 27 27 Januar januar 2006 2006 Created create public interface CompositeFigure composite figure extends Figure figure The the value value of of this attribute attribute is is a a Insets2DDouble insets2 d object public final static AttributeKey attribute key Insets2DDouble insets2 d LAYOUT l a y o u t INSETS i n s e t s new AttributeKey attribute key Insets2DDouble insets2 d layoutInsets layout inset new Insets2DDouble insets2 d 0 0 0 0 0 0 0 0 Adds add a a child child to to the the figure figure This is is a a convenience convenience method for add add getChildCount get child count child child public void add add Figure figure child child Adds add a a child child to to the the figure figure at at the the specified specify index index public void add add int index index Figure figure child child Adds add a a child child to to the the figure figure without without firing firing events event This is is a a convenience convenience method for basicAdd basic add getChildCount get child count child child public void basicAdd basic add Figure figure child child Adds add a a child child to to the the figure figure at at the the specified specify index index without without firing firing events event public void basicAdd basic add int index index Figure figure child child Removes remove the the specified specify child child Returns true if the the Figure figure contained contain the the removed remove child child public boolean remove remove Figure figure child child Removes remove the the child child at at the the specified specify index index Returns the the removed remove child child figure figure public Figure figure removeChild remove child int index index Removes remove all all children child from from the the composite composite figure figure public void removeAllChildren remove all child Removes remove the the specified specify child child without without firing firing events event Returns true if the the Figure figure contained contain the the removed remove child child public boolean basicRemove basic remove Figure figure child child Removes remove the the child child at at the the specified specify index index without without firing firing events event Returns the the removed remove child child figure figure public Figure figure basicRemoveChild basic remove child int index index Removes remove all all children child from from the the composite composite figure figure without without firing firing events event public void basicRemoveAllChildren basic remove all child Returns an an unchangeable unchangeable list list view view on on the the children child public java util util List list Figure figure getChildren get child Returns the the number number of of children child public int getChildCount get child count Returns the the child child figure figure at at the the specified specify index index public Figure figure getChild get child int index index Get get a a Layouter layout object which which encapsulated encapsulate a a layout layout algorithm algorithm for this figure figure Typically typically a a Layouter layout accesses access the the child child components component of of this figure figure and and arranges arrange their their graphical graphical presentation presentation return layout layout strategy strategy used use by by this figure figure public Layouter layout getLayouter get layout A a layout layout algorithm algorithm is is used use to to define define how how the the child child components component should should be be laid lay out out in in relation relation to to each each other other The the task task for layouting layout the the child child components component for presentation presentation is is delegated delegate to to a a Layouter layout which which can can be be plugged plug in in at at runtime runtime public void layout layout Set set a a Layouter layout object which which encapsulated encapsulate a a layout layout algorithm algorithm for this figure figure Typically typically a a Layouter layout accesses access the the child child components component of of this figure figure and and arranges arrange their their graphical graphical presentation presentation It it is is a a good good idea idea to to set set the the Layouter layout in in the the protected initialize initialize method so so it it can can be be recreated recreate if a a GraphicalCompositeFigure graphical composite figure is is read read and and restored restore from from a a StorableInput storable input stream stream param newValue value encapsulation encapsulation of of a a layout layout algorithm algorithm public void setLayouter set layout Layouter layout newValue value 