thread utility utility thread tab size 4 indent size 4 no tab collapse fold 1 2010 matthieu casanova 2010 marcelo vanzin g n u 2 w i t h o u t n y w r r n t y m e r h n t b i l i t y f i t n e s s f o r p r t i u l r p u r p o s e g n u g n u 59 330 m 02111 1307 u s importsimport event queue reflect invocation target concurrent count down latch concurrent executor service concurrent executor concurrent thread factory concurrent thread pool executor concurrent atomic atomic threadpool j edit us executor service from concurrent run link task link runnable runnable encapsulate task display task monitor matthieu casanova marcelo vanzin since j edit 4 4pre1 thread utility run dispatch thread run runnable event dispatch thread current thread event dispatch run immediately otherwise queue dispatch thread difference v f s run w t thread one wait i o request before being execute runnable runnable run someth meaningful from so we display task monitor run dispatch thread runnable runnable event queue dispatch thread runnable run event queue runnable run dispatch thread wait run runnable e d t through only after runnable execute uninterruptible p note difference from wait current thread e d t there are runnable queue e d t run runnable after them wait run runnable before them runnable runnable run someth meaningful from so we display task monitor run dispatch thread wait runnable runnable interrupt count down latch runnable run count down latch runnable runnable run dispatch thread run run get count 0 run await interrupt e interrupt interrupt thread current thread interrupt run dispatch thread now run runnable e d t through wait thread get interrupt call doe until runnable finish uninterruptible p us event queue wait so following remark applie p use wait make sure thread call wait doe hold lock other thread might need call occur from article href http sun com product jfc tsc article thread threads1 html event dispatch thread runnable runnable run someth meaningful from so we display task monitor run dispatch thread now runnable runnable interrupt count down latch runnable run count down latch runnable runnable event queue wait run interrupt e interrupt invocation target ite throwable cause ite get cause cause runtime runtime cause log log log e r r o r thread utility invocation target log log log e r r o r runnable get cause run get count 0 run await interrupt e interrupt interrupt thread current thread interrupt run background run runnable threadpool runnable encapsulate link task run background task runnable runnable run someth meaningful from so we display task monitor run background runnable runnable task task runnable task task task runnable task task decorate runnable task instance fire waiting task thread pool execute task run task threadpool task task run run background task task task instance fire waiting task thread pool execute task thread utility j edit thread factory j edit thread factory thread factory j edit thread factory thread atomic 0 thread group thread group j edit worker override thread thread runnable r thread t thread thread group r t set name j edit worker + thread get increment t atomic thread thread group thread group executor service thread pool o r e p o o l s i e 4 thread pool executor cache thread pool j edit thread factory thread pool executor thread pool set core pool size o r e p o o l s i e my runnable count down latch runnable runnable runnable runnable count down latch count down latch 1 count down latch runnable runnable runnable runnable runnable override run runnable run count down 