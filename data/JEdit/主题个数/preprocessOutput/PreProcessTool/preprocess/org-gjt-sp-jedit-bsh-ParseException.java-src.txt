generate edit line parse 3 0 wa auto generate ha be modify since then we need regenerate some reason we careful look at note below all bean shell modification are demarcate begin bean shell modification end bean shell modification note please leave ^ m carriage above auto generate line complain about on win bean shell modification generate add source attribute set source get source modify get message print tersely except on debug remove wa expect one add source info get message make parse extend eval modify constructor use eval override get line number get text add bsh when parse are encounter explicitly create type calling generate parse generate parser customize your reporting mechanism so retain field begin bean shell modification extend eval errorpublic parse eval end bean shell modification extend eval begin bean shell modification source source unknown use add source info set source source get source source end bean shell modification source constructor use generate parse generate parser calling constructor generate type field current token expect token sequence token image set flag special constructor also set indicate constructor wa use create constructor call it empty force parent throwable print message form parse lt result get message parse token current token val expect token sequence val token image val begin bean shell modification constructor end bean shell modification constructor special constructor current token current token val expect token sequence expect token sequence val token image token image val following constructor are use whatever think construct manner make behave normal way i e document throwable field token expect token sequence token image contain relevant information generate doe use these constructor parse begin bean shell modification constructor end bean shell modification constructor special constructor parse message begin bean shell modification constructor node callstack parse know where message end bean shell modification constructor special constructor variable determine which constructor wa use create thereby affect semantics get message below special constructor last token ha be consume successfully ha be create due parse token followng token therefore first token token current token each entry an each represent sequence token their ordinal value expect at point parse expect token sequence reference token image generate parser within which parse occur define generate constant token image begin bean shell modification move body overload get message get message get message end bean shell modification move body overload get message ha standard behavior when ha be create using standard constructor otherwise us current token expect token sequence generate parse message ha be create due parse get from parser then call dur printing stack trace hence correct message get display begin bean shell modification add debug get message debug end bean shell modification add debug special constructor get message expect max size 0 i 0 i expect token sequence length i++ max size expect token sequence i length max size expect token sequence i length j 0 j expect token sequence i length j++ expect + token image expect token sequence i j + expect token sequence i expect token sequence i length 1 0 expect + expect + eol + begin bean shell modification add source info retval + source + encounter \ end bean shell modification add source info token tok current token next i 0 i max size i++ i 0 retval + tok kind 0 retval + token image 0 retval + add escape tok image tok tok next retval + \ at line + current token next begin line + column + current token next begin column + + eol begin bean shell modification make conditional on debug debug expect token sequence length 1 retval + wa expect + eol + retval + wa expect one + eol + retval + expect end bean shell modification make conditional on debug retval end line machine eol get property line separator use convert raw character their escape when these raw cannot use part an s i i literal add escape str builder retval builder ch i 0 i str length i++ str at i 0 \b retval append \\b retval append \ retval append \ \f retval append \\f \r retval append \\r \ retval append \\\ \ retval append \\\ \\ retval append \\\\ ch str at i 0x20 || ch 0x7e s 0000 + ch 16 retval append \\u + s substring s length 4 s length retval append ch retval begin bean shell modification override get line number current token next begin line get text copy from generate get message max size 0 i 0 i expect token sequence length i++ max size expect token sequence i length max size expect token sequence i length retval token tok current token next i 0 i max size i++ i 0 retval + tok kind 0 retval + token image 0 retval + add escape tok image tok tok next retval get message end bean shell modification override 