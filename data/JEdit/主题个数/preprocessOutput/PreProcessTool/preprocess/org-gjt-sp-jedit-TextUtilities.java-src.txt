text utility variou text function 1998 2005 tab size 4 indent size 4 no tab collapse fold 1 g n u 2 w i t h o u t n y w r r n t y m e r h n t b i l i t y f i t n e s s f o r p r t i u l r p u r p o s e g n u g n u 59 330 m 02111 1307 u s importsimport text segment buffer j edit buffer syntax standard utility contain several text manipulation bracket match word start end offset calculation comparison convert tab space vice versa wrapping text conversion text utility 24445 2016 07 10 19 48 34 ezust text utility avoid slowdown large only scan 10000 line way b r k e t m t h l i m i t 10000 w h i t e s p e 0 w o r d h r 1 s y m b o l 2 get token at offset token contain specify offset token token list offset offset since j edit 4 0pre3 token get token at offset token token offset offset 0 token token e n d token token token e n d index out bound offset line length token offset + token length offset token token token next get complementary bracket given an opening bracket correspond closing bracket store direction 0 given closing bracket correspond opening bracket store direction 0 otherwise \0 since j edit 4 3pre2 get complementary bracket ch direction ch direction direction 0 direction direction 0 direction direction 0 direction direction 0 direction direction 0 direction direction 0 direction direction 0 direction direction 0 ?? direction direction 0 ?? ?? direction direction 0 ?? ??? direction direction 0 ??? ??? direction direction 0 ??? ??? direction direction 0 ??? ??? direction direction 0 ??? ??? direction direction 0 ??? ??? direction direction 0 ??? ??? direction direction 0 ??? ??? direction direction 0 ??? ??? direction direction 0 ??? ??? direction direction 0 ??? ??? direction direction 0 ??? ??? direction direction 0 ??? ??? direction direction 0 ??? ??? direction direction 0 ??? \0 find match bracket offset bracket match one at specify offset buffer 1 bracket unmatch character bracket buffer buffer line line offset offset within line since j edit 2 6pre1 find match bracket j edit buffer buffer line offset offset 0 || offset buffer get line length line index out bound offset + + buffer get line length line segment line text segment buffer get line text line line text line text line text offset + offset backward forward direction 1 correspond character cprime get complementary bracket direction cprime \0 no bracket 1 1 because we ve already see first bracket count 1 token handler token handler token handler buffer mark token line token handler get syntax token at offset only token same type check correspond bracket bracket get token at offset token handler get token offset token start line line forward search direction 0 offset++ i offset i line text count i++ ch line text line text offset + i ch token token handler init buffer mark token line token handler token get token at offset token handler get token i bracket count++ ch cprime token token handler init buffer mark token line token handler token get token at offset token handler get token i bracket count count 0 buffer get line start offset line + i go on next line line++ line buffer get line count || line start line b r k e t m t h l i m i t buffer get line text line line text offset 0 token backward search offset i offset i 0 i ch line text line text offset + i ch token token handler init buffer mark token line token handler token get token at offset token handler get token i bracket count++ ch cprime token token handler init buffer mark token line token handler token get token at offset token handler get token i bracket count count 0 buffer get line start offset line + i go on previou line line line 0 || start line line b r k e t m t h l i m i t buffer get line text line line text offset line text count 1 token nothing found 1 join similar perl s join on list work all collection an iterable collection delim put between each join representation collection since 4 3pre3 join collection ? delim builder retval builder iterator ? itr iterator itr ha next retval append itr next itr ha next retval append delim retval append itr next retval find word start locate start word at specify position line text po position no word sep character are non alphanumeric treat word character anyway find word start line po no word sep find word start line po no word sep locate start word at specify position line text po position no word sep character are non alphanumeric treat word character anyway since j edit 4 3pre15 find word start sequence line po no word sep find word start line po no word sep locate start word at specify position line text po position no word sep character are non alphanumeric treat word character anyway join non word treat consecutive non alphanumeric character one word since j edit 4 2pre5 find word start line po no word sep join non word find word start line po no word sep join non word locate start word at specify position line text po position no word sep character are non alphanumeric treat word character anyway join non word treat consecutive non alphanumeric character one word eat whitespace include whitespace at start word since j edit 4 1pre2 find word start line po no word sep join non word eat whitespace find word start line po no word sep join non word eat whitespace locate start word at specify position line text po position no word sep character are non alphanumeric treat word character anyway join non word treat consecutive non alphanumeric character one word camel word treat camel part word eat whitespace include whitespace at start word since j edit 4 3pre10 find word start line po no word sep join non word camel word eat whitespace find word start sequence line po no word sep join non word camel word eat whitespace locate start word at specify position line text po position no word sep character are non alphanumeric treat word character anyway join non word treat consecutive non alphanumeric character one word camel word treat camel part word eat whitespace include whitespace at start word since j edit 4 3pre15 find word start sequence line po no word sep join non word camel word eat whitespace find word start line po no word sep join non word camel word eat whitespace locate start word at specify position line text po position no word sep character are non alphanumeric treat word character anyway join non word treat consecutive non alphanumeric character one word camel word treat camel part word eat whitespace include whitespace at start word eat only after word eat only whitespace after word effect find actual word start eating since j edit 4 4pre1 find word start sequence line po no word sep join non word camel word eat whitespace eat only after word ch line at po no word sep no word sep character cursor change how we behave type get type ch no word sep i po i 0 i last ch ch ch line at i type whitespace w h i t e s p e only select other whitespace unles eating only after word character whitespace ch word symbol stop unles eating only after word eat only after word i + 1 we eat after word whitespace now until word start character letter digit ch || no word sep index ch 1 type w o r d h r type s y m b o l word character w o r d h r stop at next last writing direction upper camel t stop at every upper t treat no word sep word camel word character upper ch character upper last ch character letter digit last ch i stop at next first writing direction upper camel t stop at every upper camel word character upper ch character upper last ch i + 1 word keep going character letter digit ch || no word sep index ch 1 whitespace include word eating only eating after word character whitespace ch eat whitespace eat only after word type w h i t e s p e i + 1 symbol s y m b o l join non word po i i + 1 whitespace include word eating only eating after word character whitespace ch eat whitespace eat only after word type w h i t e s p e i + 1 character letter digit ch || no word sep index ch 1 i + 1 0 find word end locate end word at specify position line text po position no word sep character are non alphanumeric treat word character anyway find word end line po no word sep find word end line po no word sep locate end word at specify position line text po position no word sep character are non alphanumeric treat word character anyway since j edit 4 3pre15 find word end sequence line po no word sep find word end line po no word sep locate end word at specify position line text po position no word sep character are non alphanumeric treat word character anyway join non word treat consecutive non alphanumeric character one word since j edit 4 1pre2 find word end line po no word sep join non word find word end line po no word sep join non word locate end word at specify position line text po position no word sep character are non alphanumeric treat word character anyway join non word treat consecutive non alphanumeric character one word eat whitespace include whitespace at end word since j edit 4 2pre5 find word end line po no word sep join non word eat whitespace find word end line po no word sep join non word eat whitespace locate end word at specify position line text po position no word sep character are non alphanumeric treat word character anyway join non word treat consecutive non alphanumeric character one word camel word treat camel part word eat whitespace include whitespace at end word since j edit 4 3pre10 find word end line po no word sep join non word camel word eat whitespace find word end sequence line po no word sep join non word camel word eat whitespace locate end word at specify position line text po position no word sep character are non alphanumeric treat word character anyway join non word treat consecutive non alphanumeric character one word camel word treat camel part word eat whitespace include whitespace at end word since j edit 4 3pre15 find word end sequence line po no word sep join non word camel word eat whitespace po 0 po ch line at po no word sep no word sep character cursor change how we behave type get type ch no word sep i po i line length i++ last ch ch ch line at i type whitespace w h i t e s p e only select other whitespace character whitespace ch i word character w o r d h r stop at next last upper camel t stop at every upper t treat no word sep word camel word i po + 1 character upper ch character letter digit ch character upper last ch i 1 stop at next first upper camel caseg t stop at every upper camel word character upper ch character upper last ch i character letter digit ch || no word sep index ch 1 whitespace include word eating character whitespace ch eat whitespace type w h i t e s p e i symbol s y m b o l join non word i po i we whitespace set flag character whitespace ch eat whitespace type w h i t e s p e i character letter digit ch || no word sep index ch 1 i line length get type type ch character no word sep character are non alphanumeric treat word character anyway must type link w h i t e s p e link w o r d h r link s y m b o l since j edit 4 4pre1 get type ch no word sep type character whitespace ch type w h i t e s p e character letter digit ch || no word sep index ch 1 type w o r d h r type s y m b o l type space tab convert consecutive space tab specify tab size tab size space tab tab size builder buf builder width 0 whitespace 0 i 0 i length i++ at i whitespace++ width++ tab tab size width % tab size width + tab whitespace + tab whitespace 0 buf append standard utility create white space whitespace tab size width whitespace whitespace 0 width 0 buf append whitespace 0 buf append standard utility create white space whitespace tab size width whitespace whitespace 0 buf append at i width++ whitespace 0 buf append standard utility create white space whitespace tab size width whitespace buf tab space convert tab consecutive space specify tab size tab size tab space tab size builder buf builder width 0 i 0 i length i++ at i count tab size width % tab size width + count count 0 buf append width 0 buf append at i width++ buf append at i buf format format specify text merging breaking line specify width text text max line length maximum line length tab size tab size format text max line length tab size builder buf builder index 0 index text index index index 1 format paragraph text substring index index max line length tab size buf buf append index index + 2 index text length format paragraph text substring index max line length tab size buf buf index ignore whitespace inverse ignore whitespace index str an empty index index number non whitespace character precede index since j edit 4 3pre2 index ignore whitespace str index j 0 i 0 i index i++ character whitespace str at i j++ j ignore whitespace index inverse index ignore whitespace str an empty index index index into where number non whitespace character precede index count since j edit 4 3pre2 ignore whitespace index str index j 0 i 0 i++ character whitespace str at i j++ j index i i str length 1 i + 1 get m i x e d 0 l o w e r s e 1 u p p e r s e 2 t i t l e s e 3 specify all upper all lower title first letter upper rest lower str since j edit 4 4pre1 get sequence str str length 0 m i x e d state 1 ch str at 0 character letter ch character upper ch state u p p e r s e state l o w e r s e i 1 i str length i++ ch str at i character letter ch state u p p e r s e character lower ch i 1 state t i t l e s e m i x e d l o w e r s e t i t l e s e character upper ch m i x e d state specify all upper all lower title first letter upper rest lower str since j edit 4 0pre1 get str get sequence str title convert specify title capitalize first letter str since j edit 4 0pre1 title str str length 0 str character upper str at 0 + str substring 1 lower escape text escape given use regex pattern since j edit 4 5pre1 escape text text make sure every \ e appearing text escape then surround quotation tag \ q \ e result text replace \\ e \\\\ e \\ q + result + \\ e member format paragraph format paragraph text max line length tab size builder buf align everyth paragraph s leading indent leading whitespace count standard utility get leading white space text leading whitespace text substring 0 leading whitespace count leading whitespace width standard utility get leading white space width text tab size buf append leading whitespace line length leading whitespace width tokeniz st tokeniz text st ha token word st next token line length leading whitespace width nothing line length + word length + 1 max line length buf append buf append leading whitespace line length leading whitespace width buf append line length++ buf append word line length + word length index ignore whitespace index ignore whitespace text max line length tab size buffer buf align everyth paragraph s leading indent leading whitespace count standard utility get leading white space text leading whitespace text substring 0 leading whitespace count leading whitespace width standard utility get leading white space width text tab size buf append leading whitespace line length leading whitespace width tokeniz st tokeniz text st ha token word st next token line length leading whitespace width nothing line length + word length + 1 max line length buf append buf append leading whitespace line length leading whitespace width buf append line length++ buf append word line length + word length 