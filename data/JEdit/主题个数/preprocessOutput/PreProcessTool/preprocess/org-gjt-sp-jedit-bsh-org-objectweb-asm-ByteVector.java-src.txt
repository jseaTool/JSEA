s m very small fast bytecode manipulation framework 2000 i n r i france telecom 2002 france telecom library g n u less 2 at your option library w i t h o u t n y w r r n t y m e r h n t b i l i t y f i t n e s s f o r p r t i u l r p u r p o s e g n u less g n u less library 59 330 m 02111 1307 u s contact eric bruneton rd francetelecom com eric bruneton bsh objectweb asm dynamically extensible vector roughly equivalent data output stream on top output stream efficient vector content vector data actual number vector length construct link vector vector initial size vector data 64 construct link vector vector given initial size initial size initial size vector construct vector initial size data initial size put into vector vector automatically enlarge necessary b vector vector put1 b length length length + 1 data length enlarge 1 data length++ b length length put two into vector vector automatically enlarge necessary b1 b2 another vector vector put11 b1 b2 length length length + 2 data length enlarge 2 data data data length++ b1 data length++ b2 length length put into vector vector automatically enlarge necessary s vector vector put2 s length length length + 2 data length enlarge 2 data data data length++ s 8 data length++ s length length put into vector vector automatically enlarge necessary b s vector vector put12 b s length length length + 3 data length enlarge 3 data data data length++ b data length++ s 8 data length++ s length length put an into vector vector automatically enlarge necessary i an vector vector put4 i length length length + 4 data length enlarge 4 data data data length++ i 24 data length++ i 16 data length++ i 8 data length++ i length length put into vector vector automatically enlarge necessary l vector vector put8 l length length length + 8 data length enlarge 8 data data i l 32 data length++ i 24 data length++ i 16 data length++ i 8 data length++ i i l data length++ i 24 data length++ i 16 data length++ i 8 data length++ i length length put u t f format into vector vector automatically enlarge necessary s vector vector put u t f s length s length length 0 i 0 i length ++i s at i \001 \177 length++ \u07 f f length + 3 length + 2 length 65535 illegal argument length length length + 2 + length data length enlarge 2 + length data data data length++ length 8 data length++ length i 0 i length ++i s at i \001 \177 data length++ \u07 f f data length++ 0x e0 | 12 0x f data length++ 0x80 | 6 0x3 f data length++ 0x80 | 0x3 f data length++ 0x c0 | 6 0x1 f data length++ 0x80 | 0x3 f length length put an into vector vector automatically enlarge necessary b an may tt tt put tt len tt into vector off index fist b must copy len number b must copy vector vector put b off len length + len data length enlarge len b arraycopy b off data length len length + len enlarge vector so receive n size number additional vector able receive enlarge size data math max 2 data length length + size arraycopy data 0 data 0 length data data 