part bean shell script distribution documentation update may found at http www beanshell sun notice content are subject sun 1 0 may use except compliance available at http www sun com original bean shell initial developer original pat niemey create pat niemey are 2000 all right reserve g n u notice alternatively content may use g n u less l g p l which provision l g p l are applicable instead those above wish allow use your only l g p l allow other use your s p l indicate your decision delete provision above replace them notice other provision require l g p l delete provision above recipient may use your s p l l g p l patrick niemey pat pat net learning o reilly associate http www pat net pat bsh reflect reflect invocation handler hashtable x dynamically load extension which add support generalize proxy mechanism introduce j d k1 3 x allow bsh script implement arbitrary arbitrary event listener type note module relie on feature j d k1 3 compile j d k1 2 lower those environment simply compile eventually x become simply backward compatability we maintain require support proxy mechanism x stand e xtend i have call someth bsh j j also j j f support compatability bsh suppres warning uncheck x cache proxy handler currently just one p hashtable invocation handler invocation handler handler x name space namespace interpreter declare interp namespace declare interp reference x bsh + namespace get dynamic proxy cache those create get cla get cla get dynamic proxy cache those create get ca hashtable make hash hashcode order cache them hash 21 i 0 i ca length i++ hash ca i hash + 3 hash key hash interf get hash key interf loader loader ca 0 get loader ? interf proxy proxy instance loader ca invocation handler put hash key interf interf invocation handler dynamic proxy p note inner invocation handler seem shield unavailable from j d k1 2 v m i t understand j work just fine those aren t there doesn t it? shouldn t load an x isn t instantiate name space it? handler invocation handler io serializable proxy throwable impl proxy target te unwrap target declare ex deliver wrap an undeclar throwable te get target eval ee ease debug x refer enclosing instance interpreter d e b u g interpreter debug eval script + x + + ee ee impl proxy eval name get name call stack callstack call stack namespace equal explicitly define we must override protocol script support x equal must test equality generate proxy script bsh otherwise caller from outside proxy equal itself bsh equal equal namespace get equal eval e leave name equal equal equal obj 0 proxy obj explicitly define override show proxy bsh namespace get eval e leave name equal proxy get get x refer enclosing instance builder sb builder x + i 0 i length i++ sb append + i get name + length 1 ? sb type get parameter type primitive unwrap name primitive wrap type 