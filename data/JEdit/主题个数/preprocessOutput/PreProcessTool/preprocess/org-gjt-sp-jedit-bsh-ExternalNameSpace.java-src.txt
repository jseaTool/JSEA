bsh namespace which maintain an external map value hold variable it scope mechanism provide standard collection base namespace well convenient way export view value namespace ordinary bean shell wrapper p variable are maintain internally normal fashion support meta information such variable type visibility modifier export way variable are export each time they are write bean shell variable from map appear bean shell namespace untyp variable no modifier shadow previously define variable scope p note inherentely dependent on 1 2 howev use directly core other than type name space so no dependency introduce note bsh are currently expor external namespace all would require add override set provide friendly view than vector currently use overload form perhap map signature key suppres warning uncheck external name space name space map external map external name space external map namespace external name space name space parent name map external map parent name external map external map hash map external map external map get map view namespace map get map external map set external map which which namespace synchroniz previou external map detach from namespace previou map value are retain external map are remove from bean shell namespace set map map map detach namespace preserve then clear namespace set one external map clear external map map set variable name value strict recurse eval set variable name value strict recurse put external map name value unset variable name unset variable name external map remove name get variable name union name internal namespace external map set name set hash set n name get variable name name set add all list n name name set add all external map key set name set 0 note implmenetation get variable impl handle following 1 var map local scope var wa add through map 2 var map local scope var wa add through namespace 3 var map local scope var wa remove via map 4 var map local scope non existent var variable get variable impl name recurse eval check external map variable name value external map get name variable var value var external map therefore found local scope may be remove via map clear prophalactically unset variable name search parent var applicable var get variable impl name recurse var external map may found local scope type modifier info variable local var get variable impl name local scope then wa add via external map we ll wrap pas we ll use local local var var variable name value modifier var local var var note meaning get declare variable entirely clear name current usage generation support suggest untyp variable inclued therefore we currently add external name here variable get declare variable get declare variable set type variable name type value modifier modifier eval set type variable name type value modifier put external map name value note we could override allow bsh appear external map set name bsh eval set name note kind far fetch we could override allow bsh insert into namespace via map bsh get name sig declare only eval get name sig declare only note override add name from external map get variable name get all name aux vector vec get all name aux vec clear all variable from namespace clear all value from external map via map clear clear clear external map clear an unwrap value external map bean shell primitive type are represent their wrapper so possible differentiate between wrapper type primitive type via external map put external map name value value variable value unwrap variable variable value eval ute there no unwrap variable eval some where hold an l h s index interpreter unexpect eval value primitive value primitive unwrap primitive value external map put name value 