s m very small fast bytecode manipulation framework 2000 i n r i france telecom 2002 france telecom library g n u less 2 at your option library w i t h o u t n y w r r n t y m e r h n t b i l i t y f i t n e s s f o r p r t i u l r p u r p o s e g n u less g n u less library 59 330 m 02111 1307 u s contact eric bruneton rd francetelecom com eric bruneton bsh objectweb asm link bsh objectweb asm visitor visitor generate precisely visitor generate conform format use alone generate from scratch one adapter visitor generate modify from one writer visitor type o n s t n t constant pool item l s s 7 type o n s t n t fieldref constant pool item f i e l d 9 type o n s t n t methodref constant pool item m e t h 10 type o n s t n t methodref constant pool item i m e t h 11 type o n s t n t constant pool item s t r 8 type o n s t n t constant pool item i n t 3 type o n s t n t constant pool item f l o t 4 type o n s t n t constant pool item l o n g 5 type o n s t n t constant pool item d o u b l e 6 type o n s t n t name type constant pool item n m e t y p e 12 type o n s t n t utf8 constant pool item u t f8 1 index next item add constant pool index constant pool vector pool constant pool s hash table data item table threshold constant pool s hash table threshold access flag access constant pool item contain internal name name constant pool item contain internal name name number extend count extend precisely contain index constant pool item contain internal name these constant pool item contain name source from which wa compile item source number field field count field vector field tt tt maximum stack size number local variable must automatically compute compute max these are store link list link writer writer link each other their link writer next field field store first element list writer first these are store link list link writer writer link each other their link writer next field field store last element list writer last number entry inner attribute inner count inner attribute vector inner reusable key use look item hash link table table item key reusable key use look item hash link table table item key2 reusable key use look item hash link table table item key3 type instruction label n o r g i n s n 0 type instruction an sign label s b y t e i n s n 1 type instruction an sign label s h o r t i n s n 2 type instruction local variable index label v r i n s n 3 type instruction an implicit local variable index label i m p l v r i n s n 4 type instruction type descriptor argument t y p e i n s n 5 type field invocation instruction f i e l d o r m e t h i n s n 6 type i n v o k e i n t e r f e instruction i t f m e t h i n s n 7 type instruction 2 bytecode offset label l b e l i n s n 8 type instruction 4 bytecode offset label l b e l w i n s n 9 type l d instruction l d i n s n 10 type l d w l d c2 w instruction l d w i n s n 11 type i i n instruction i i n i n s n 12 type t b l e s w i t h instruction t b l i n s n 13 type l o o k u p s w i t h instruction l o o k i n s n 14 type m u l t i n e w r r y instruction m n i n s n 15 type w e instruction w e i n s n 16 instruction type all j v m opcode t y p e initializ compute instruction type j v m opcode i b 220 s b k l l d d d d d e e e e e e e e e e e e e e e e e e e e d d d d d e e e e e e e e e + e e e e e e e e e e e m + i i i i i i i i i i i i i i i n o g g g g g g g h f b f f f q p i i j j i i + i i i i i i i i i i i i i i i i i 0 i b length ++i b i s at i t y p e b generate above s b y t e i n s n instruction b constant n e w r r y s b y t e i n s n b constant b i p u s h s b y t e i n s n s h o r t i n s n instruction b constant s i p u s h s h o r t i n s n i m p l v r i n s n instruction b constant r e t v r i n s n i constant i l o d i constant l o d ++i b i v r i n s n i constant i s t o r e i constant s t o r e ++i b i v r i n s n i 26 i 45 ++i i l o d 0 l o d 3 b i i m p l v r i n s n i 59 i 78 ++i i s t o r e 0 s t o r e 3 b i i m p l v r i n s n t y p e i n s n instruction b constant n e w t y p e i n s n b constant n e w r r y t y p e i n s n b constant h e k s t t y p e i n s n b constant i n s t n e o f t y p e i n s n set f i e l d o r m e t h i n s n instruction i constant g e t s t t i i constant i n v o k e s t t i ++i b i f i e l d o r m e t h i n s n b constant i n v o k e i n t e r f e i t f m e t h i n s n l b e l w i n s n instruction i constant i f e q i constant j s r ++i b i l b e l i n s n b constant i f n u l l l b e l i n s n b constant i f n o n n u l l l b e l i n s n b 200 l b e l w i n s n g o t o w b 201 l b e l w i n s n j s r w temporary opcode use internally s m label writer i 202 i 220 ++i b i l b e l i n s n l d w instruction b constant l d l d i n s n b 19 l d w i n s n l d w b 20 l d w i n s n l d c2 w special instruction b constant i i n i i n i n s n b constant t b l e s w i t h t b l i n s n b constant l o o k u p s w i t h l o o k i n s n b constant m u l t i n e w r r y m n i n s n b 196 w e i n s n w e i 0 i b length ++i err print + b i err constructor construct link writer writer compute max tt tt maximum stack size maximum number local variable must automatically compute flag tt tt then argument link visitor visit max visit max link visitor visitor link visit visit ignore compute automatically from signature bytecode each writer compute max index 1 pool vector table item 64 threshold 0 75d table length key item key2 item key3 item compute max compute max visitor visit access name name source access access name name index name name ? 0 name index length 0 count length count i 0 i count ++i i i index source u t f8 source source u t f8 source access constant d e p r e t e d 0 u t f8 deprecate visit inner name out name inner name access inner u t f8 inner inner vector ++inn count inner put2 name ? 0 name index inner put2 out name ? 0 out name index inner put2 inner name ? 0 u t f8 inner name index inner put2 access visit field access name desc value ++field count field field vector field put2 access put2 u t f8 name index put2 u t f8 desc index attribute count 0 value ++attribute count access constant s y n t h e t i 0 ++attribute count access constant d e p r e t e d 0 ++attribute count field put2 attribute count value field put2 u t f8 constant value index field put4 2 put2 cst value index access constant s y n t h e t i 0 field put2 u t f8 synthetic index put4 0 access constant d e p r e t e d 0 field put2 u t f8 deprecate index put4 0 visitor visit access name desc writer cw writer compute max cw init access name desc cw visit end other bytecode wa build writer bytecode wa build writer compute real size bytecode size 24 + 2 count field size + field length nb 0 writer cb first cb ++nb size + cb get size cb cb next size + pool length attribute count 0 source ++attribute count size + 8 access constant d e p r e t e d 0 ++attribute count size + 6 inner ++attribute count size + 8 + inner length allocate vector size order avoid unnecessary arraycopy operation vector enlarge vector out vector size out put4 0x f e b b e put2 3 put2 45 out put2 index put pool data 0 pool length out put2 access put2 name put2 name out put2 count i 0 i count ++i out put2 i out put2 field count field out put field data 0 field length out put2 nb cb first cb cb put out cb cb next out put2 attribute count source out put2 u t f8 source index put4 2 put2 source index access constant d e p r e t e d 0 out put2 u t f8 deprecate index put4 0 inner out put2 u t f8 inner index out put4 inner length + 2 put2 inner count out put inner data 0 inner length out data utility constant pool management add number constant constant pool being build doe nothing constant pool already contain similar item cst value constant add constant pool parameter must an link link link link link already constant item given value item cst cst cst val cst value val cst val cst value val cst val cst value val cst val cst value val cst cst illegal argument value + cst add an u t f constant pool being build doe nothing constant pool already contain similar item value value already u t f8 item item u t f8 value key set u t f8 value item result get key result pool put1 u t f8 put u t f value result item index++ key put result result add reference constant pool being build doe nothing constant pool already contain similar item value internal name already reference item item value key2 set l s s value item result get key2 result pool put12 l s s u t f8 value index result item index++ key2 put result result add field reference constant pool being build doe nothing constant pool already contain similar item owner internal name field s owner name field s name desc field s descriptor already field reference item item field owner name desc key3 set f i e l d owner name desc item result get key3 result put122 f i e l d owner index name type name desc index result item index++ key3 put result result add reference constant pool being build doe nothing constant pool already contain similar item owner internal name s owner name s name desc s descriptor already reference item item owner name desc key3 set m e t h owner name desc item result get key3 result put122 m e t h owner index name type name desc index result item index++ key3 put result result add an reference constant pool being build doe nothing constant pool already contain similar item owner itf internal name s owner name s name desc s descriptor already reference item item itf owner itf name desc key3 set i m e t h owner itf name desc item result get key3 result put122 i m e t h owner itf index name type name desc index result item index++ key3 put result result add an constant pool being build doe nothing constant pool already contain similar item value value already item item value key set value item result get key result pool put1 i n t put4 value result item index++ key put result result add constant pool being build doe nothing constant pool already contain similar item value value already item item value key set value item result get key result pool put1 f l o t put4 bit value result item index++ key put result result add constant pool being build doe nothing constant pool already contain similar item value value already item item value key set value item result get key result pool put1 l o n g put8 value result item index key put result index + 2 result add constant pool being build doe nothing constant pool already contain similar item value value already item item value key set value item result get key result pool put1 d o u b l e put8 bit value result item index key put result index + 2 result add constant pool being build doe nothing constant pool already contain similar item value value already item item value key2 set s t r value item result get key2 result pool put12 s t r u t f8 value index result item index++ key2 put result result add name type constant pool being build doe nothing constant pool already contain similar item name name desc type descriptor already name type item item name type name desc key2 set n m e t y p e name desc item result get key2 result put122 n m e t y p e u t f8 name index u t f8 desc index result item index++ key2 put result result constant pool s hash table item which equal given item key constant pool item constant pool s hash table item which equal given item tt tt there no such item item get item key item tab table hash key hash index hash 0x7 f f f f f f f % tab length item i tab index i i i next i hash hash key equal i i put given item constant pool s hash table hash table i must i already contain item i item add constant pool s hash table put item i index threshold old capacity table length item old map table capacity old capacity 2 + 1 item map item capacity threshold capacity 0 75 table map j old capacity j 0 item old old map j old item e old old old next index e hash 0x7 f f f f f f f % capacity e next map index map index e index i hash 0x7 f f f f f f f % table length i next table index table index i put one two into constant pool b s1 s2 another put122 b s1 s2 pool put12 b s1 put2 s2 