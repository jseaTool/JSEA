part bean shell script distribution documentation update may found at http www beanshell sun notice content are subject sun 1 0 may use except compliance available at http www sun com original bean shell initial developer original pat niemey create pat niemey are 2000 all right reserve g n u notice alternatively content may use g n u less l g p l which provision l g p l are applicable instead those above wish allow use your only l g p l allow other use your s p l indicate your decision delete provision above replace them notice other provision require l g p l delete provision above recipient may use your s p l l g p l patrick niemey pat pat net learning o reilly associate http www pat net pat bsh reflect b s h type simple node bsh listener base type use dur evaluation full type retain where we are an type where we are an same type base type we are an type non zero indicate dimensionality e g 2 dim internal cache type clear on classload change type descriptor b s h type use grammar indicate dimension type dur parse add dimension dims++ simple node get type node simple node jjt get child 0 descriptor type type an ambiguou name type evaluation attempt through namespace order resolve found name non compound we assume name get type descriptor call stack callstack interpreter interpreter cache type available descriptor descriptor descriptor first node primitive type ambiguou name simple node node get type node node b s h primitive type descriptor get type descriptor b s h primitive type node type cla name b s h ambiguou name node text bsh bcm interpreter get note incorrect here we are using hack bsh allow lookup base name we need eliminate limitation working through note defining bcm get being define cla name cla defining cla b s h ambiguou name node callstack interpreter eval e interpreter unable resolve type +e ignore out b s h type +node+ found cla name defining cla out found cla +cla descriptor get type descriptor cla || name compound cla name descriptor l + cla name replace + descriptor l +default replace + +cla name + i 0 i dim i++ descriptor +descriptor descriptor descriptor out b s h type descriptor +descriptor descriptor get type call stack callstack interpreter interpreter eval cache type available type type first node primitive type ambiguou name simple node node get type node node b s h primitive type base type b s h primitive type node get type base type b s h ambiguou name node callstack interpreter dim 0 get type construct prototype arbitrary zero length each dimension dim dim zero obj instance base type dim type obj get e eval couldn t construct type callstack type base type hack stick first interpreter resolve comment on type instance variable interpreter get add listener type base type use dur evaluation full type retain where we are an type where we are an same type get base type base type we are an type non zero indicate dimensionality e g 2 get dim dim loader change type base type get type descriptor cla cla t y p e cla character t y p e cla t y p e b cla t y p e s cla t y p e i cla t y p e j cla t y p e f cla t y p e d cla t y p e v get name ok? test 1 1 name cla get name replace name start || name end name l + name replace + 