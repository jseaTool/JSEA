generate j j tree edit line src bsh j j t parser state bsh suppres warning uncheck j j t parser state stack node stack mark number node on stack mk current mark node create j j t parser state node stack mark stack 0 mk 0 determine wheth current node wa actually close push only call user action node scope node create node create call reinitialize node stack call automatically parser s re init reset node remove all element mark remove all element 0 mk 0 root node s t only make sense call after succesful parse node root node node node element at 0 push node on stack push node node n node push n ++sp node on top stack remove from stack node pop node mk mk mark pop value node node pop node currently on top stack node peek node node node peek number child on stack current node scope node arity mk clear node scope node n mk pop node mk mark pop value open node scope node n mark push mk mk n jjt open definite node construct from specify number child number node are pop from stack make child definite node then definite node push on stack close node scope node n num mk mark pop value num 0 node pop node jjt set parent n n jjt add child num n jjt close push node n node create conditional node construct it condition all node be push since node wa open are make child conditional node which then push on stack condition node construct they are left on stack close node scope node n condition condition node arity mk mark pop value 0 node pop node jjt set parent n n jjt add child n jjt close push node n node create mk mark pop value node create 