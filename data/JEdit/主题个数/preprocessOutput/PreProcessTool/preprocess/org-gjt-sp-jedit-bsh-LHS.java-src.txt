part bean shell script distribution documentation update may found at http www beanshell sun notice content are subject sun 1 0 may use except compliance available at http www sun com original bean shell initial developer original pat niemey create pat niemey are 2000 all right reserve g n u notice alternatively content may use g n u less l g p l which provision l g p l are applicable instead those above wish allow use your only l g p l allow other use your s p l indicate your decision delete provision above replace them notice other provision require l g p l delete provision above recipient may use your s p l l g p l patrick niemey pat pat net learning o reilly associate http www pat net pat bsh reflect field an l h s wrapper an variable field property ordinarily hold left hand side an assignment may resolve value assign value p there one special here term m e t h o d e v l where l h s use an intermediate evaluation chain suffix wrap invocation may only resolve value cannot assign t assign value result call e g foo 5 p l h s parser constant io serializable name space name space assignment local variable local var identifier variou type l h s v r i b l e 0 f i e l d 1 p r o p e r t y 2 i n d e x 3 m e t h o d e v l 4 type var name prop name field field index variable l h s constructor l h s name space name space var name namespace lh type v r i b l e var name var name name space name space local var variable set directly reference s local scope recursion look variable definition parent s scope allow e g undefin var going global l h s name space name space var name local var type v r i b l e local var local var var name var name name space name space field l h s constructor simply call field constructor l h s field field type f i e l d field field field l h s constructor l h s field field pointer construct empty l h s type f i e l d field field property l h s constructor l h s prop name pointer construct empty l h s type p r o p e r t y prop name prop name index l h s constructor l h s index pointer construct empty l h s type i n d e x index index get value eval type v r i b l e name space get variable var name type f i e l d o field get primitive wrap o field get type illegal access e2 eval t read field + field type p r o p e r t y reflect get property prop name reflect e interpreter debug e get message eval no such property + prop name type i n d e x reflect get index index e eval access + e interpreter l h s type assign value l h s assign val strict eval type v r i b l e set variable namespace accord local var flag local var name space set local variable var name val strict name space set variable var name val strict type f i e l d field val val primitive ? primitive val get value val probably reflect reflect r m set accessible field field set field val val pointer e eval l h s +field get name + field illegal access e2 eval l h s +field get name + t access field +e2 illegal argument e3 type val primitive ? primitive val get type get name val get get name eval argument type mismatch + val ? type + assignable field +field get name type p r o p e r t y hashtable hashtable put prop name val collection cm collection get collection cm map cm put map map prop name val reflect set property prop name val reflect e interpreter debug assignment + e get message eval no such property + prop name type i n d e x reflect set index index val target e1 pas target e1 e eval assignment + e get message interpreter unknown lh val l h s + field ? field +field + var name ? var name +var name + name space ? name space +name space 