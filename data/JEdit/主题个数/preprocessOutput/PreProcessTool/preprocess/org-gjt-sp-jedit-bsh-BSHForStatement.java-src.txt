part bean shell script distribution documentation update may found at http www beanshell sun notice content are subject sun 1 0 may use except compliance available at http www sun com original bean shell initial developer original pat niemey create pat niemey are 2000 all right reserve g n u notice alternatively content may use g n u less l g p l which provision l g p l are applicable instead those above wish allow use your only l g p l allow other use your s p l indicate your decision delete provision above replace them notice other provision require l g p l delete provision above recipient may use your s p l l g p l patrick niemey pat pat net learning o reilly associate http www pat net pat bsh statement b s h statement simple node parser constant ha init ha expression ha update simple node init simple node expression simple node update simple node statement parse b s h statement eval call stack callstack interpreter interpreter eval i 0 ha init init simple node jjt get child i++ ha expression expression simple node jjt get child i++ ha update update simple node jjt get child i++ i jjt get num child normally statement simple node jjt get child i name space enclosing name space callstack top block name space name space block name space enclosing name space note some interest thing are going on here 1 we swap instead push primary mode operation act like we are enclosing namespace must preserve etc 2 we call body block eval namespace override instead we allow create second subordinate block name space child name space variable propogation still work through chain block s child clean state between iteration which correct behavior forscope4 bsh put name space on top stack note s important there only one exit point from so we swap back namespace callstack swap name space init ha init init eval callstack interpreter control primitive v o ha expression cond b s h statement evaluate condition expression callstack interpreter cond breakout eats multi level here? statement empty statement special override block above ret statement eval callstack interpreter ret control control ret kind r e t u r n control ret breakout o n t i n u e b r e k breakout breakout ha update update eval callstack interpreter callstack swap enclosing name space put back control 