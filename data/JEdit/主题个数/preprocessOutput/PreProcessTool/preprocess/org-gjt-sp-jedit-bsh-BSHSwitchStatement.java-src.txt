part bean shell script distribution documentation update may found at http www beanshell sun notice content are subject sun 1 0 may use except compliance available at http www sun com original bean shell initial developer original pat niemey create pat niemey are 2000 all right reserve g n u notice alternatively content may use g n u less l g p l which provision l g p l are applicable instead those above wish allow use your only l g p l allow other use your s p l indicate your decision delete provision above replace them notice other provision require l g p l delete provision above recipient may use your s p l l g p l patrick niemey pat pat net learning o reilly associate http www pat net pat bsh b s h statement simple node parser constant b s h statement eval call stack callstack interpreter interpreter eval numchild jjt get num child child 0 simple node exp simple node jjt get child child++ val exp eval callstack interpreter note could make clear add an inner an context child traversal first label b s h label label node control control get first label child numchild eval empty statement callstack label b s h label jjt get child child++ label block haven t hit control child numchild control label equal val label || primitive equal val label eval callstack interpreter callstack exp execute node skip label until child numchild node jjt get child child++ node b s h label eval value simple node node eval callstack interpreter check disallow here? value control control control value skip node until next label child numchild node jjt get child child++ node b s h label label b s h label node control control kind r e t u r n control primitive v o helper testing equal on two primitive boxable yuck factor out into primitive primitive equal val target val call stack callstack simple node exp eval val primitive || target val primitive binary operation primitive wrapper type result primitive binary operation val target val parser constant e q result primitive unwrap result result equal t r u e eval e e eval value +switch exp get text + callstack val equal target val 