s m very small fast bytecode manipulation framework 2000 i n r i france telecom 2002 france telecom library g n u less 2 at your option library w i t h o u t n y w r r n t y m e r h n t b i l i t y f i t n e s s f o r p r t i u l r p u r p o s e g n u less g n u less library 59 330 m 02111 1307 u s contact eric bruneton rd francetelecom com eric bruneton bsh objectweb asm visitor visit bytecode instruction visitor must call sequential order bytecode instruction visit link visit max visit max must call after all instruction be visit link visit block visit block link visit local variable visit local variable link visit line number visit line number may call order at time provide label pass argument already be visit link visit label visit label visitor visit zero operand instruction opcode opcode instruction visit opcode n o p o n s t n u l l i o n s t m1 i o n s t 0 i o n s t 1 i o n s t 2 i o n s t 3 i o n s t 4 i o n s t 5 l o n s t 0 l o n s t 1 f o n s t 0 f o n s t 1 f o n s t 2 d o n s t 0 d o n s t 1 i l o d l l o d f l o d d l o d l o d b l o d l o d s l o d i s t o r e l s t o r e f s t o r e d s t o r e s t o r e b s t o r e s t o r e s s t o r e p o p p o p2 d u p d u p x1 d u p x2 d u p2 d u p2 x1 d u p2 x2 s w p i d d l d d f d d d d d i s u b l s u b f s u b d s u b i m u l l m u l f m u l d m u l i v l d i v f d i v d d i v i r e m l r e m f r e m d r e m i n e g l n e g f n e g d n e g i s h l l s h l i s h r l s h r i u s h r l u s h r i n d l n d i o r l o r i x o r l x o r i2 l i2 f i2 d l2 i l2 f l2 d f2 i f2 l f2 d d2 i d2 l d2 f i2 b i2 i2 s l m p f m p l f m p g d m p l d m p g i r e t u r n l r e t u r n f r e t u r n d r e t u r n r e t u r n r e t u r n r r y l e n g t h t h r o w m o n i t o r e n t e r m o n i t o r e x i t visit insn opcode visit an instruction single operand opcode opcode instruction visit opcode b i p u s h s i p u s h n e w r r y operand operand instruction visit visit insn opcode operand visit local variable instruction local variable instruction an instruction load store value local variable opcode opcode local variable instruction visit opcode i l o d l l o d f l o d d l o d l o d i s t o r e l s t o r e f s t o r e d s t o r e s t o r e r e t var operand instruction visit operand index local variable visit var insn opcode var visit type instruction type instruction an instruction take type descriptor parameter opcode opcode type instruction visit opcode n e w n e w r r y h e k s t i n s t n e o f desc operand instruction visit operand must fully qualify name internal form type descriptor an type link type type visit type insn opcode desc visit field instruction field instruction an instruction load store value field an opcode opcode type instruction visit opcode g e t s t t i p u t s t t i g e t f i e l d p u t f i e l d owner internal name field s owner link type get internal name get internal name name field s name desc field s descriptor link type type visit field insn opcode owner name desc visit instruction instruction an instruction opcode opcode type instruction visit opcode i n v o k e v i r t u l i n v o k e s p e i l i n v o k e s t t i i n v o k e i n t e r f e owner internal name s owner link type get internal name get internal name name s name desc s descriptor link type type visit insn opcode owner name desc visit jump instruction jump instruction an instruction may jump another instruction opcode opcode type instruction visit opcode i f e q i f n e i f l t i f g e i f g t i f l e i f i m p e q i f i m p n e i f i m p l t i f i m p g e i f i m p g t i f i m p l e i f m p e q i f m p n e g o t o j s r i f n u l l i f n o n n u l l label operand instruction visit operand label designate instruction which jump instruction may jump visit jump insn opcode label label visit label label designate instruction visit just after label link label label visit label label label special instruction visit l d instruction cst constant load on stack parameter must non link link link link link visit ldc insn cst visit an i i n instruction var index local variable increment increment amount increment local variable visit iinc insn var increment visit t b l e s w i t h instruction min minimum key value max maximum key value dflt beginning handler block label beginning handler block tt label i tt beginning handler block tt min + i tt key visit table insn min max label dflt label label visit l o o k u p s w i t h instruction dflt beginning handler block key value key label beginning handler block tt label i tt beginning handler block tt key i tt key visit lookup insn label dflt key label label visit m u l t i n e w r r y instruction desc an type descriptor link type type dim number dimension allocate visit multi insn desc dim table entry max stack size max local visit block start beginning handler s scope inclusive end end handler s scope exclusive handler beginning handler s type internal name type handle handler tt tt block illegal argument one label ha already be visit visitor link visit label visit label visit block label start label end label handler type visit maximum stack size maximum number local variable max stack maximum stack size max local maximum number local variable visit max max stack max local debug information visit local variable declaration name name local variable desc type descriptor local variable start first instruction correspond scope local variable inclusive end last instruction correspond scope local variable exclusive index local variable s index illegal argument one label ha already be visit visitor link visit label visit label visit local variable name desc label start label end index visit line number declaration line line number number refer source from which wa compile start first instruction correspond line number illegal argument tt start tt ha already be visit visitor link visit label visit label visit line number line label start 