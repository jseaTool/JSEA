s m very small fast bytecode manipulation framework 2000 i n r i france telecom 2002 france telecom library g n u less 2 at your option library w i t h o u t n y w r r n t y m e r h n t b i l i t y f i t n e s s f o r p r t i u l r p u r p o s e g n u less g n u less library 59 330 m 02111 1307 u s contact eric bruneton rd francetelecom com eric bruneton bsh objectweb asm reflect type use make easy manipulate type descriptor type sort tt tt type link get sort get sort v o 0 sort tt tt type link get sort get sort b o o l e n 1 sort tt tt type link get sort get sort h r 2 sort tt tt type link get sort get sort b y t e 3 sort tt tt type link get sort get sort s h o r t 4 sort tt tt type link get sort get sort i n t 5 sort tt tt type link get sort get sort f l o t 6 sort tt tt type link get sort get sort l o n g 7 sort tt tt type link get sort get sort d o u b l e 8 sort reference type link get sort get sort r r y 9 sort reference type link get sort get sort o b j e t 10 tt tt type type v o t y p e type v o tt tt type type b o o l e n t y p e type b o o l e n tt tt type type h r t y p e type h r tt tt type type b y t e t y p e type b y t e tt tt type type s h o r t t y p e type s h o r t tt tt type type i n t t y p e type i n t tt tt type type f l o t t y p e type f l o t tt tt type type l o n g t y p e type l o n g tt tt type type d o u b l e t y p e type d o u b l e field sort type sort buffer contain descriptor type field only use reference type buf offset descriptor type link buf buf field only use reference type off length descriptor type len constructor construct primitive type sort sort primitive type construct type sort sort sort len 1 construct reference type sort sort reference type construct buf buffer contain descriptor previou type off offset descriptor previou buffer len length descriptor type sort buf off len sort sort buf buf off off len len type correspond given type descriptor type descriptor type descriptor type correspond given type descriptor type get type type descriptor get type type descriptor 0 type correspond given type correspond given type get type primitive t y p e i n t t y p e t y p e v o t y p e t y p e b o o l e n t y p e t y p e b y t e t y p e character t y p e h r t y p e t y p e s h o r t t y p e t y p e d o u b l e t y p e t y p e f l o t t y p e t y p e l o n g t y p e get type get descriptor type correspond argument type given descriptor descriptor descriptor type correspond argument type given descriptor type get argument type descriptor buf descriptor off 1 size 0 car buf off++ car car l buf off++ ++size car ++size type type size off 1 size 0 buf off size get type buf off off + size len size + 1 type correspond argument type given type correspond argument type given type get argument type get parameter type type type type length i length 1 i 0 i type i get type i type type correspond type given descriptor descriptor descriptor type correspond type given descriptor type get type descriptor buf descriptor get type buf descriptor index + 1 type correspond type given type correspond type given type get type get type get type type correspond given type descriptor buf buffer contain type descriptor off offset descriptor previou buffer type correspond given type descriptor type get type buf off len buf off v v o t y p e b o o l e n t y p e h r t y p e b b y t e t y p e s s h o r t t y p e i i n t t y p e f f l o t t y p e j l o n g t y p e d d o u b l e t y p e len 1 buf off + len ++len buf off + len l ++len buf off + len ++len type r r y buf off len + 1 l len 1 buf off + len ++len type o b j e t buf off len + 1 accessor sort type link v o v o link b o o l e n b o o l e n link h r h r link b y t e b y t e link s h o r t s h o r t link i n t i n t link f l o t f l o t link l o n g l o n g link d o u b l e d o u b l e link r r y r r y link o b j e t o b j e t get sort sort number dimension type only use an type number dimension type get dimension i 1 buf off + i ++i i type element type only use an type type element type type get element type get type buf off + get dimension name correspond type only use an type fully qualify name correspond type get name buf off + 1 len 2 replace internal name correspond type internal name it fully qualify name where are replace only use an type internal name correspond type get internal name buf off + 1 len 2 conversion type descriptor descriptor correspond type descriptor correspond type get descriptor builder buf builder get descriptor buf buf descriptor correspond given argument type type type argument type argument type descriptor correspond given argument type get descriptor type type type argument type builder buf builder buf append i 0 i argument type length ++i argument type i get descriptor buf buf append type get descriptor buf buf append descriptor correspond type given buffer buf buffer which descriptor must append get descriptor builder buf sort v o buf append v b o o l e n buf append h r buf append b y t e buf append b s h o r t buf append s i n t buf append i f l o t buf append f l o n g buf append j d o u b l e buf append d r r y o b j e t buf append buf off len direct conversion from type descriptor intermediate type internal name given internal name it fully qualify name where are replace an internal name given get internal name get name replace descriptor correspond given type an primitive an descriptor correspond given get descriptor builder buf builder get descriptor buf buf descriptor correspond given m link descriptor given get descriptor m m get parameter type builder buf builder buf append i 0 i length ++i get descriptor buf i buf append get descriptor buf m get type buf append descriptor given given buffer buf buffer which descriptor must append whose descriptor must compute get descriptor builder buf d d primitive car d t y p e car i d t y p e car v d t y p e car d t y p e car b d character t y p e car d t y p e car s d t y p e car d d t y p e car f d t y p e car j buf append car d buf append d d get component type buf append l name d get name len name length i 0 i len ++i car name at i buf append car ? car buf append correspond size opcode size value type size value type i e 2 tt tt tt tt 1 otherwise get size sort l o n g || sort d o u b l e ? 2 1 j v m instruction opcode adapt type opcode j v m instruction opcode opcode must one i l o d i s t o r e i l o d i s t o r e i d d i s u b i m u l i v i r e m i n e g i s h l i s h r i u s h r i n d i o r i x o r i r e t u r n an opcode similar given opcode adapt type example type tt tt tt opcode tt i r e t u r n f r e t u r n get opcode opcode opcode constant i l o d || opcode constant i s t o r e sort v o opcode + 5 b o o l e n b y t e opcode + 6 h r opcode + 7 s h o r t opcode + 8 i n t opcode f l o t opcode + 2 l o n g opcode + 1 d o u b l e opcode + 3 r r y o b j e t opcode + 4 sort v o opcode + 5 b o o l e n h r b y t e s h o r t i n t opcode f l o t opcode + 2 l o n g opcode + 1 d o u b l e opcode + 3 r r y o b j e t opcode + 4 