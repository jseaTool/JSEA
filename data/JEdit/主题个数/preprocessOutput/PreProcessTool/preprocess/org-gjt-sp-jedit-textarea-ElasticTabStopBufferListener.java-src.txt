j edit programmer s text editor tab size 4 indent size 4 no tab collapse fold 1 ?? 2010 j edit contributor g n u 2 w i t h o u t n y w r r n t y m e r h n t b i l i t y f i t n e s s f o r p r t i u l r p u r p o s e g n u g n u 59 330 m 02111 1307 u s textarea vector text segment buffer buffer adapter buffer j edit buffer textarea text area buffer listener elastic tabstop elastic tab stop buffer listener buffer adapter text area text area handle insertion handle deletion single tab delete elastic tab stop buffer listener elastic tab stop buffer listener text area text area text area text area fully update column block fully update column block j edit buffer buffer buffer indent using elastic tabstop handle insertion handle deletion buffer get column block set dirty status text area chunk cache invalidate chunk from phy 0 text area invalidate line range 0 buffer get line count 1 text area get painter repaint content insert content insert j edit buffer buffer start line offset num line length buffer elastic tabstop on delete simple single tab insert num line 0 length 1 simple delete buffer get text offset length delete equal single tab insert column block root block buffer get column block root block out b e f o r e u p d t i n g o l u m n b l o k s out root block indexof block above 1 column block block root block search child start line column block blockjust above lie within block start index 1 block start index root block get child index block indexof block above start index 1 block line within block start line 0 line lie within block we need redraw start index++ lie within block start index root block get child size indexof block above start index 1 indexof block above 0 column block root block get child get indexof block above end line+1 start line blockjust above column block root block get child get indexof block above num line 0 root block end line + num line i start index i root block get child size i++ column block root block get child get i update line no num line starting line 1 end line 1 lie within block column block inner contain block block get contain block start line offset simple inner contain block single tab insert simple ha be enter no newline lie inside column block update start index end index block correspond column block line all subsequent column block line after one check wheth column block width valid nothing doe lie inside column block inner contain block single tab insert inner contain block update column block line offset start line length starting line inner contain block start line inner contain block set tab size dirty status end line inner contain block end line no need update line offset column block would rebuild column block inner parent column block inner contain block get parent starting line inner contain block start line end line inner contain block end line inner parent get child remove inner contain block starting line inner parent start line end line inner parent end line inner parent get child remove all element buffer update column block starting line end line inner parent column block width inner parent inner contain block single tab insert t o d o handle when tab ha be insert f r o n t o u t s e column block currently whole column block get repaint line must be retokeniz repaint buffer handler so repaint again here after column block dirty status update starting line start line end line start line simple || inner contain block single tab insert starting line block get start line end line block get end line +num line root block get child remove block buffer update column block starting line end line 0 root block segment seg segment buffer get text offset length seg buffer get tab stop position seg 0 blockjust above root block get child remove blockjust above starting line blockjust above start line starting line start line block block start line start line+num lines+1 root block get child remove block end line block end line end line start line + num line buffer update column block starting line end line 0 root block handle insertion root block set dirty status out f t e r u p d t i n g o l u m n b l o k s out root block starting line 1 end line 1 handle deletion text area chunk cache invalidate chunk from phy starting line text area invalidate line range starting line end line content remove call when text remove from buffer buffer buffer question start line first line offset start offset from beginning buffer num line number line remove length number character remove since j edit 4 3pre3 content remove j edit buffer buffer start line offset num line length buffer elastic tabstop on simple column block root block buffer get column block root block num line 0 length 1 simple simple we need remove column block find column block lying just below first line delete column block first block effect root block search child start line info we need determine inside block start line build 1 end line build 1 column block first block update column block first block remove column block last block remove first block effect index first block effect root block get child index first block effect column block block above first effect just below block index first block effect 0 block above first effect column block root block get child get index first block effect 1 block above first effect end line start line 1 just below block po first line first block effect line within block start line first line lie inside po first line 0 first line lie above po first line 0 po last line first block effect line within block start line+num line last line lie inside po last line 0 last line lie above po last line 0 last line lie below po last line 0 deletion above block last line lie above last line lie above block cannot connect block above deletion touching block above just below block start line+num lines+1 first block effect start line start line build block above first effect start line end line build first block effect end line first block remove block above first effect last block remove first block effect first block update first block effect first block remove last block remove start line build end line build 1 deletion inside block first line lie inside||first line lie above last line lie inside start line build math min first block effect start line start line end line build first block effect end line num line index first block effect root block get child size 1 first block update column block root block get child get index first block effected+1 first block remove last block remove first block effect just below block start line build block above first effect start line first block remove block above first effect deletion might cover other block well first line lie inside || first line lie above last line lie below start line build math min start line first block effect start line first block remove first block effect column block block below root block search child start line+num line index last block root block get child index block below block below deletion partially overlap block block below line within block start line+num line 0 just below block start line build block above first effect start line first block remove block above first effect last block remove block below end line build block below end line num line index last block root block get child size 1 first block update column block root block get child get index last block+1 deletion lie above block need consider block just above here we cannot connect two column block ending on one line first block update block below we reach here there surely block above one last block remove column block root block get child get index last block 1 first block wholly cover then all column block are being delete completely there nothing build end line build first line lie above? 1 start line consider where last line delete just above column block block below block below start line start line+num lines+1 end line build 1 end line build block below end line num line last block remove block below end line build 1 start line build 1 no block below last line last block remove column block root block get child get root block get child size 1 first block update first line lie inside end line build start line start line build 1 end line build 1 deletion lie below all column block start line build 1 end line build 1 first block update first block remove last block remove once we reach here we three thing 1 delete column block using first block delete last block delete vector node block remove first block remove start index root block get child index first block remove block remove vector node last block remove illegal argument deletion handle properly end index root block get child index last block remove i start index i end index i++ block remove add root block get child get i 2 update start line end line column block using first block update num line 0 root block end line num line last block remove || first block update start index 1 last block remove start index root block get child index last block remove start just after last block remove start index++ first block update start index root block get child index first block update i start index i root block get child size i++ column block root block get child get i update line no 1 num line once we are 2 we safely change root block block remove root block get child remove all block remove 3 rebuild column block using end line start line start line build 1 end line build 1 buffer update column block start line build end line build 0 root block root block set dirty status text area chunk cache invalidate chunk from phy start line build text area invalidate line range start line build end line build root block set dirty status handle deletion starting line 1 end line 1 simple ha be enter lie inside column block update start index end index block correspond column block line all subsequent column block line after one check wheth column block width valid column block inner contain block root block get contain block start line offset nothing doe lie inside column block inner contain block single tab delete inner contain block update column block line offset start line 1 length starting line inner contain block start line end line inner contain block end line inner contain block set tab size dirty status no need update line offset column block would rebuild column block inner parent column block inner contain block get parent starting line inner contain block start line end line inner contain block end line inner parent get child remove inner contain block starting line inner parent start line end line inner parent end line inner parent get child remove all element buffer update column block starting line end line inner parent column block width inner parent line must be retokeniz repaint buffer handler so repaint again here after column block dirty status update starting line start line end line start line handle deletion root block set dirty status starting line 1 end line 1 text area chunk cache invalidate chunk from phy starting line text area invalidate line range starting line end line transaction complete transaction complete j edit buffer buffer buffer get property elastic tabstop buffer get property elastic tabstop handle insertion || handle deletion we reach here use brute force last resolve fully update column block buffer pre content insert pre content insert j edit buffer buffer start line offset num line length buffer elastic tabstop on handle insertion buffer get column block buffer get column block set dirty status pre content remove pre content remove j edit buffer buffer start line offset num line length buffer elastic tabstop on handle deletion single tab delete buffer get column block buffer get column block set dirty status num line 0 length 1 str buffer get text offset length str equal single tab delete 