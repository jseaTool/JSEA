part bean shell script distribution documentation update may found at http www beanshell sun notice content are subject sun 1 0 may use except compliance available at http www sun com original bean shell initial developer original pat niemey create pat niemey are 2000 all right reserve g n u notice alternatively content may use g n u less l g p l which provision l g p l are applicable instead those above wish allow use your only l g p l allow other use your s p l indicate your decision delete provision above replace them notice other provision require l g p l delete provision above recipient may use your s p l l g p l patrick niemey pat pat net learning o reilly associate http www pat net pat bsh classpath zip io net bsh bsh path ref weak reference bsh name source bsh path encapsulate knowledge about path u r l map all path which may include jar zip base dir bsh path may composite other bsh path component it path reflect change those component through it listener classpath traversal lazily when call make get get source explicitily through insure initialize feedback on mapping progress provide through mapping feedback design note several time here we traverse ourselve our component path produce composite view some thing relate path would an opportunity visitor pattern suppres warning uncheck bsh path path listener name source name u r l path component list path order list component bsh path list comp path set map name map map map source u r l dir every cla map source map source map be build map initialize unqualifi name table unq name table use configurable now we alway include them name completion include unq name vector listener vector constructor bsh path name name name reset bsh path name u r l url name add url end constructor mutator set path u r l url reset add url add specify bsh path component our path change bcp reflect through u add component bsh path bcp comp path comp path list comp path add bcp bcp add listener add u r l url path add all list url map initialize map url add u r l url i o path add url map initialize map url get path component include component path u r l get path component u r l get full path u r l 0 set name specify include all component path set get pack insure initialize set set hash set collection collection map get pack set add all comp path i 0 i comp path size i++ bsh path comp path get i get pack set add all set source specify which may lie component path source get source name before trigger classpath mapping initialization check explicitly set source e g generate these would take priority over found classpath anyway source c source source get name c c insure initialize trigger possible mapping c source source get name c comp path i 0 i comp path size c i++ c bsh path comp path get i get source name c explicitly set source use generate could potentially use allow user override which from classpath locate set source name source c source put name c claspath map initialize now component map are them well random note insure ensure i know i ve see ensure use j d k source here s what webster ha say entry ensure pronunciation shur function transitive verb inflect form s ensure ensure make sure certain safe g u r n t e e synonym e n s u r e i n s u r e s s u r e s e u r e mean make thing person sure e n s u r e i n s u r e s s u r e are interchangeable many context where they indicate making certain inevitable an outcome i n s u r e sometime stress taking necessary measure beforehand s s u r e distinctively implie removal doubt suspense from person s mind s e u r e implie action take guard against attack loss insure initialize insure initialize top path indicate top level classpath component send start mapping message insure initialize top path we are top path haven t be initialize before inform listener we are going expensive map top path map initialize start mapping initialize component comp path i 0 i comp path size i++ bsh path comp path get i insure initialize initialize ourself map initialize map u r l path u r l 0 top path map initialize end mapping map initialize get full path include component path component path list first order duplicate path component are remove list get full path list list list comp path i 0 i comp path size i++ list l bsh path comp path get i get full path take care remove dup wish we have an order set collection iterator l iterator ha next o next list contain o list add o list add all path list support get full name associate unqualifi name classpath name an ambiguou name encapsulate variou name get name unq name name path insure initialize unqualifi name table unq name table get unqualifi name table obj unq name table get name obj ambiguou name path ambigou name + ambiguou name obj get obj note we could probably away unqualifi name table favor second name source unqualifi name table get unqualifi name table unq name table unq name table build unqualifi name table unq name table unqualifi name table build unqualifi name table unqualifi name table unq name table unqualifi name table add component name comp path i 0 i comp path size i++ set s bsh path comp path get i source key set iterator s iterator ha next unq name table add next add our iterator source key set iterator ha next unq name table add next unq name table get all name insure initialize list name list iterator get set iterator ha next pack next name add all remove inner name get pack name completion include unq name name add all get unqualifi name table key set name 0 call map url each url map u r l url i 0 i url length i++ map url i i o e s construct classpath +url i + +e mapping s map u r l url i o name url get f name f directory mapping directory + f map traverse dir f dir source f archive name name mapping archive +url map search jar url jar source url name name map loose name url s classpath component + name mapping s map source i 0 i length i++ out i + + source map i source map name source add map sa split classname name pack sa 0 cla sa 1 set set set map get pack set set hash set map put pack set set add name add source map obj source get name t replace previously set found earlier classpath explicitly set via set source obj source put name source clear everyth reset path empty reset path list comp path clear cache structure clear anyth cache all reconstruct necessary clear cache structure map initialize map hash map source hash map unq name table name space change path change clear cache structure notify listener set name completion include unq name b name completion include unq name b name completion include unq name b name space change begin stuff traverse dir dir i o list list traverse dir aux dir dir list 0 list traverse dir aux top dir dir i o list list list top top dir get absolute path child dir list i 0 i child length i++ child child i child directory list add all traverse dir aux top dir child name child get absolute path name name remove absolute topdir portion path leave part name start top name name substring top length +1 i o problem parse path name canonicalize name name list add name list get entry from jar search jar u r l jar i o vector v vector input stream jar open stream zip input stream zin zip input stream zip entry ze ze zin get next entry name ze get name name name v add element canonicalize name name zin close sa v size v into sa sa name name name lower end name index 1 archive name name name name lower name end jar || name end zip create proper name from messy thing turn \ into remove leading trailing note make lot could fast canonicalize name name classname name replace classname classname replace \\ classname start classname classname substring 6 classname end classname classname substring 0 classname length 6 classname split name into name split classname classname classname canonicalize name classname i classname last index classn packn i 1 top level classn classname packn unpackag packn classname substring 0 i classn classname substring i+1 packn classn collection inner name collection remove inner name collection col list list list list add all col iterator list iterator ha next name next name index 1 remove list user classpath from property path u r l user path comp u r l get user path component path user path comp user path comp cp get property path path split cp path separator u r l url u r l path length i 0 i path length i++ we take care get canonical path first deal relative path s bootstrap loader j r loader doesn t url i path i get canonical path u r i u r l i o e path t parse path +e user path comp url url get list all know set get set insure initialize set set hash set set add all map key set comp path i 0 i comp path size i++ set add all bsh path comp path get i map key set set add listener path listener l listener add element weak reference l remove listener path listener l listener remove element l notify listener enumeration e listener element e ha element weak reference wr weak reference e next element path listener l path listener wr get l garbage collect listener remove element wr l path change bsh path user path bsh path initialize user path from path bsh path get user path path user path user path bsh path user path get user path component user path bsh path boot path get boot path include lib rt jar possible bsh path get boot path path boot path rtjar get property home + lib rt jar rtjar get r t jar path u r l url rtjar u r i u r l boot path bsh path boot path u r l url malform u r l e path t find boot jar +e boot path get r t jar path url get resource external form url start jar i url index i 1 url substring jar length i source source get name jar source source jar source u r l url source url u r l get u r l u r l source note we implement consistency howev our bsh loader natively load from j r because u r l loader so may better allow get name unimplement jar +source dir source source dir source dir source dir get dir source dir +source get name read from get dir name read from base name n name replace separator + base n || input stream fi input stream data input stream dis data input stream fi length dis read fully dis close i o ie runtime couldn t load +file generate source source generate source bytecode source bytecode get name source u r l url u r l length i 0 i length i++ url i i u r i u r l bsh path bcp bsh path test url bsh path +name+ +sup + path +path + + comp path + comp path + note we could probably away unqualifi name table favor second name source unqualifi name table hash map add fullname name split classname fullname 1 get name put name fullname ambiguou name ambiguou name add fullname ambiguou name an ambiguou name an add an add fullname put name an ambiguou name list list list add name list add name list get list 0 list fire name source listener name space change name source listener i 0 i name source listener size i++ name source listener name source listener get i name source change list name source listener name source add listener who notify upon change name space add name source listener name source listener listener name source listener name source listener list name source listener add listener only allow one now mapping feedback mapping feedback listener add mapping feedback mapping feedback mf mapping feedback listener runtime unimplement already listener mapping feedback listener mf start mapping mapping feedback listener mapping feedback listener start mapping err start path mapping mapping msg mapping feedback listener mapping feedback listener mapping msg err mapping +msg mapping s mapping feedback listener mapping feedback listener mapping s err s end mapping mapping feedback listener mapping feedback listener end mapping err end path mapping mapping feedback start mapping provide feedback on progress mapping classpath msg message about path component being map perc an range 0 100 indicate percentage mapping msg perc provide feedback on progress mapping classpath mapping msg mapping msg end mapping 