j edit programmer s text editor tab size 8 indent size 8 no tab collapse fold 1 ?? 2012 j edit contributor g n u 2 w i t h o u t n y w r r n t y m e r h n t b i l i t y f i t n e s s f o r p r t i u l r p u r p o s e g n u g n u 59 330 m 02111 1307 u s io importsimport io filter reader io filter writer io i o io input stream io output stream io pushback reader io reader io writer reflect invocation target buffer charset charset charset charset encod charset malform input annotation nonnull annotation nullable io charset encoding io encoding i s o 8859 1 unicode escape e g need http download oracle com javase 6 doc api property html bj??rn vampire kautl since 5 1pre1 native2 s i i encoding encoding encoding nonnull reader get text reader nonnull input stream i o native2 s i i reader nonnull writer get text writer nonnull output stream out i o filter writer ascii encoding get text writer out override nonnull writer append nullable sequence csq i o csq ? csq override nonnull writer append nullable sequence csq start end i o sequence c csq ? csq c sub sequence start end override nonnull writer append i o override nonnull str i o str 0 str length override nonnull cbuf i o cbuf 0 cbuf length override nonnull str off len i o str substring off off + len override nonnull cbuf off len i o buf len 6 i 0 j off j2 off + len j j2 j++ cbuf j ascii encod encode buf i++ arraycopy format \\u%04 x 0 buf i 6 i + 6 buf 0 i override i o ascii encod encode format \\u%04 x nonnull reader get permissive text reader nonnull input stream i o native2 s i i reader member nonnull reader get text reader nonnull input stream nullable ? pushback reader clazz i o invocation target no such instantiation illegal access native2 s i i reader clazz nonnull reader get permissive text reader nonnull input stream nullable ? pushback reader clazz i o invocation target no such instantiation illegal access native2 s i i reader clazz member instance variable charset encod ascii encod charset name s i i encod charset encoding ascii encoding charset encoding s i i native2 s i i reader filter reader native2 s i i reader nonnull input stream permissive i o pushback reader iso 8859 1 encoding get text reader 5 pushback reader permissive permissive native2 s i i reader nonnull input stream permissive nullable ? pushback reader clazz i o no such invocation target illegal access instantiation clazz ? pushback reader iso 8859 1 encoding get text reader 5 clazz get constructor reader instance iso 8859 1 encoding get text reader 5 pushback reader permissive permissive override read i o delegate read i s o 8859 1 result read doe start escape sequence escape e o f which signal 1 also capture result \\ || escape escape result check following character read read e o f reach read 1 result an escape sequence read u escape unread read result read remainder possible escape sequence escape u \0 \0 \0 \0 read 1 + read escape 1 4 e o f reach dur escape sequence read 0 permissive escape unread u result malform input 1 read 5 doesn t necessarily mean e o f could also mean no input available currently so read on read 5 read2 read escape read 5 read we really hit e o f so there enough input an escape sequence read2 1 permissive escape unread escape 0 read result malform input 1 read + read2 no unicode escape non hex character position 3 6 i 1 i 5 i++ e escape i e 0 e 9 || e e f || e e f permissive escape unread escape 0 read result malform input 1 valid unicode escape escape parse escape 1 4 16 override read buffer target i o len target remain cbuf len n read cbuf 0 len n 0 target put cbuf 0 n n override read cbuf i o read cbuf 0 cbuf length override read cbuf off len i o readn cbuf off len readn cbuf off len i o read 5 than request input last character \ buf len len + 5 buf buf len delegate read i s o 8859 1 read read buf e o f reach read 1 read read read from underlie stream result read after conversion result 0 how many additional character need read because collapse escape sequence need 0 iterate read maximum len one i out i 0 i read i len i++ character consideration buf i doe start escape sequence \\ || escape add result buffer next character escape cbuf off + result++ les than 5 character left after current position because there wa no input available because e o f read i 1 5 read character complete escape sequence read i + 1 + 5 read miss character read2 read buf read i + 1 + 5 read e o f reach read2 1 add result buffer next character permissive e o f reach after backslash an escape sequence otherwise permissive || read i 1 0 || buf i + 1 u escape cbuf off + result++ out malform input 1 read + read2 no unicode escape u at second position buf i + 1 u add result buffer next character escape cbuf off + result++ no unicode escape non hex character position 3 6 j i + 2 j2 i + 6 j j2 j++ e buf j e 0 e 9 || e e f || e e f add result buffer next character permissive otherwise permissive escape cbuf off + result++ out malform input 1 valid unicode escape escape cbuf off + result++ parse buf i + 2 4 16 need 5 be consume escape collapse only escape sequence wa additional space need + math min len i 1 5 advance pointer i + 5 unread buf i read i nothing wa collapse need 0 result read due escape collapse read readn cbuf off + result need e o f reach read 1 result result + read override skip skip i o skip 0 illegal argument skip value negative skip buffer size math min skip m x s k i p b u f f e r s i e skip buffer || skip buffer length skip buffer size skip buffer skip buffer size remain skip remain 0 skip read skip buffer 0 math min remain skip buffer size skip 1 remain skip skip remain member m x s k i p b u f f e r s i e 8192 encoding iso 8859 1 encoding charset encoding i s o 8859 1 instance variable pushback reader permissive skip buffer escape 