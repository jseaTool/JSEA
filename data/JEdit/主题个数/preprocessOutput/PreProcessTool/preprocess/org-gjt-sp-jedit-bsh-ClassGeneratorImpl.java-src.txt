bsh io reflect invocation target reflect pat niemey pat pat net suppres warning uncheck generator impl generator generate name modifier modifier b s h block block call stack callstack interpreter interpreter eval delegate generate impl name modifier block callstack interpreter superclass bsh bcm instance name eval reflect invocation target delegate superclass impl bcm instance name change parent instance namespace currently use inner support note likely remove future could set instance name space parent instance name name space parent ithi generator get instance instance name ithi get name space set parent parent parse b s h block definition generate using generator generate impl name modifier modifier b s h block block call stack callstack interpreter interpreter eval script currently require accessibility eliminate bit work capability set accessibility capability unavailable e eval defining currently require reflective accessibility block callstack name space enclosing name space callstack top name enclosing name space get name enclosing name space ? enclosing name space get name + +name name fq name name ? name name + + name bsh bcm interpreter get race condition here bcm defining fq name create namespace name space name space name space enclosing name space name name space callstack push name space evaluate inner definition block effectively recursively call contain first block eval block callstack interpreter override node filter l s s l s s e s generate type our variable variable get declare variable block callstack interpreter name delay eval bsh get declare block callstack interpreter name generator generator generator modifier name name variable name space generator generate debug out debug directory dir get property debug dir output stream out output stream dir+ +clas name+ out out close i o e define classload gen bcm define fq name unq name into parent enclosing name space fq name replace name space set local variable generator b s h i n i t block strict eval e interpreter unable init +e give space it important after all are define name space set gen evaluate portion block space block eval block callstack interpreter override node filter l s s s t t i callstack pop gen set bsh callback bsh field name generator b s h s t t i c+clas name l h s lh reflect get l h s field gen bsh field name lh assign name space get interpreter strict e interpreter gen setup +e bcm defining fq name gen variable get declare variable b s h block body call stack callstack interpreter interpreter list var list child 0 child body jjt get num child child++ simple node node simple node body jjt get child child node b s h type variable declaration b s h type variable declaration tvd b s h type variable declaration node modifier modifier tvd modifier type tvd get type descriptor callstack interpreter b s h variable declarator vardec tvd get declarator i 0 i vardec length i++ name vardec i name variable var variable name type value modifier var add var eval e value shouldn t happen variable var variable 0 delay eval bsh get declare b s h block body call stack callstack interpreter interpreter eval list list child 0 child body jjt get num child child++ simple node node simple node body jjt get child child node b s h declaration b s h declaration md b s h declaration node md insure node parse modifier modifier md modifier name md name type md get type descriptor callstack interpreter b s h type type node md get type node b s h formal type node md node type type node get type descriptor callstack interpreter delay eval bsh bm delay eval bsh name type type node md node get name type type node md block node declare name space modifier callstack interpreter add bm delay eval bsh delay eval bsh 0 node filter filter node body initializ instance initializ only member are pass etc node filter b s h block node filter s t t i 0 i n s t n e 1 l s s e s 2 node filter l s s s t t i node filter s t t i node filter l s s i n s t n e node filter i n s t n e node filter l s s l s s e s node filter l s s e s context node filter context context context visible simple node node context l s s e s node b s h declaration only show dec l s s e s node b s h declaration context s t t i node context i n s t n e node l l simple node node node b s h type variable declaration b s h type variable declaration node modifier b s h type variable declaration node modifier ha modifier node b s h declaration b s h declaration node modifier b s h declaration node modifier ha modifier need add block here node b s h block superclass impl bsh bcm instance name eval reflect invocation target name generator b s h s u p e r+method name look specially name delegate cla instance get reflect resolve bcm cla name type get type only reflect instance no regular could superfluou which legal cla get superclass reflect resolve expect bcm instance name only reflect instance 