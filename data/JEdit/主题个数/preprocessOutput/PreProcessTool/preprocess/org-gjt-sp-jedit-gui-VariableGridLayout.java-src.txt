variable grid layout grid layout variable cell size tab size 4 indent size 4 no tab originally write dirk moebiu j edit project work ha be place into domain may use work way wish t h i s s o f t w r e i s p r o v e d s i s w i t h o u t w r r n t y o f n y k i n d n o t e v e n t h e i m p l i e d w r r n t y o f m e r h n t b i l i t y t h e u t h o r o f t h i s s o f t w r e s s u m e s n o r e s p o n s i b i l i t y f o r n y o n s e q u e n e r e s u l t i n g f r o m t h e u s e m o d i f i t i o n o r r e d i s t r i b u t i o n o f t h i s s o f t w r e gui component container dimension inset layout manager2 rectangular grid layout variable cell size container divide into rectangle one component place each rectangle each row large large component row each column wide wide component column p behavior basically same grid layout different row height column width each row column p example following an applet lay out six button into three row two column p blockquote pre applet applet button grid applet init set layout variable grid layout variable grid layout f i x e d n u m o l u m n s 2 add button 1 add button 2 add button 3 add button 4 add button 5 add button 6 pre blockquote p b programmer s remark b variable grid layout could fast would reside because then could access some field container component instead ha call component get size which allocate memory on heap p b todo b ability span component over than one cell horizontally vertically dirk moebiu bj??rn vampire kautl 1 5 grid layout variable grid layout layout manager2 io serializable f i x e d n u m r o w s 1 f i x e d n u m o l u m n s 2 layout size m i n i m u m m x i m u m p r e f e r r e d create variable grid layout specify mode size horizontal vertical gap eventually taking minimum maximum size into account when distribute space depend on take size into account specify distance border mode mode which operate f i x e d n u m r o w s f i x e d n u m o l u m n s size amount row mode f i x e d n u m r o w s amount column mode f i x e d n u m o l u m n s 0 hgap horizontal space between cell 0 vgap vertical space between cell 0 take size into account wheth take minimum maximum size into account when distribute space javi diaz soto jbd warn 2997417 may cause gui freeze provide patch distance border distance border illegal argument mode f i x e d n u m r o w s f i x e d n u m o l u m n s size lt 0 hgap vgap lt 0 variable grid layout mode size hgap vgap take size into account inset distance border mode f i x e d n u m r o w s mode f i x e d n u m o l u m n s illegal argument illegal mode value + mode size 0 illegal argument size cannot zero les value + size hgap 0 illegal argument hgap cannot negative value + hgap vgap 0 illegal argument vgap cannot negative value + vgap mode mode size size hgap hgap vgap vgap take size into account take size into account distance border inset distance border clone create variable grid layout specify mode size horizontal vertical gap eventually taking minimum maximum size into account when distribute space depend on take size into account zero distance border mode mode which operate f i x e d n u m r o w s f i x e d n u m o l u m n s size amount row mode f i x e d n u m r o w s amount column mode f i x e d n u m o l u m n s 0 hgap horizontal space between cell 0 vgap vertical space between cell 0 take size into account wheth take minimum maximum size into account when distribute space javi diaz soto jbd warn 2997417 may cause gui freeze provide patch illegal argument mode f i x e d n u m r o w s f i x e d n u m o l u m n s size lt 0 hgap vgap lt 0 variable grid layout mode size hgap vgap take size into account mode size hgap vgap take size into account inset 0 0 0 0 create variable grid layout specify mode size horizontal vertical gap zero distance border minimum maximum component size are take into account when distribute space mode mode which operate f i x e d n u m r o w s f i x e d n u m o l u m n s size amount row mode f i x e d n u m r o w s amount column mode f i x e d n u m o l u m n s hgap horizontal space between cell vgap vertical space between cell illegal argument mode f i x e d n u m r o w s f i x e d n u m o l u m n s size lt 0 hgap vgap lt 0 variable grid layout mode size hgap vgap mode size hgap vgap inset 0 0 0 0 create variable grid layout specify mode size zero horizontal vertical gap zero distance border doe take minimum maximum component size into account when distribute space mode mode which operate f i x e d n u m r o w s f i x e d n u m o l u m n s size amount row mode f i x e d n u m r o w s amount column mode f i x e d n u m o l u m n s illegal argument mode f i x e d n u m r o w s f i x e d n u m o l u m n s size lt 0 variable grid layout mode size mode size 0 0 inset 0 0 0 0 create variable grid layout mode f i x e d n u m r o w s number row 1 zero horizontal vertical gap zero distance border doe take minimum maximum component size into account when distribute space variable grid layout f i x e d n u m r o w s 1 0 0 inset 0 0 0 0 use add layout component name component component use add layout component component component constraint use remove layout component component component alway 0 5 get layout alignment x container container 0 5f alway 0 5 get layout alignment y container container 0 5f dimension prefer layout size container parent get layout size parent layout size p r e f e r r e d dimension minimum layout size container parent get layout size parent layout size m i n i m u m dimension maximum layout size container parent get layout size parent layout size m x i m u m layout container container parent parent get tree lock update parent ncomponent parent get component count ncomponent 0 pas 1 compute minimum prefer maximum row height column width total height 0 fill row height 0 fill col width 0 take size into account fill minimum row height 0 fill minimum col width 0 fill maximum row height m x v l u e fill maximum col width m x v l u e r 0 i 0 r nrow r++ 0 ncol c++ i++ i ncomponent component comp parent get component i dimension d comp get prefer size row height r math max row height r d height col width math max col width d width take size into account d comp get minimum size minimum row height r math max minimum row height r d height minimum col width math max minimum col width d width d comp get maximum size maximum row height r math min maximum row height r d height maximum col width math min maximum col width d width take size into account correct where minimum row height row row height row maximum row height row clipping minimum row height maximum row height minimum row height r maximum row height r maximum row height r minimum row height r row height r minimum row height r row height r minimum row height r row height r minimum row height r row height r maximum row height r row height r maximum row height r total height + row height r total width 0 0 ncol c++ take size into account correct where minimum col width col col width col maximum col width col clipping minimum col width maximum col width minimum col width maximum col width maximum col width minimum col width col width minimum col width col width minimum col width col width minimum col width col width maximum col width col width maximum col width total width + col width pas 2 space dimension parent size parent get size inset inset parent get inset height parent size height inset top inset bottom nrow 1 vgap distance border top distance border bottom width parent size width inset left inset right ncol 1 hgap distance border left distance border right space total height height take size into account nrow row height minimum row height maximum row height space total width width take size into account ncol col width minimum col width maximum col width pas 3 layout component r 0 y inset top + distance border top i 0 r nrow y + row height r + vgap r++ 0 x inset left + distance border left ncol x + col width + hgap c++ i++ i ncomponent component comp parent get component i dimension d comp get maximum size width col width height row height r x correction 0 y correction 0 width d width x correction width d width comp get alignment x width d width height d height y correction height d height comp get alignment y height d height comp set bound x + x correction y + y correction width height invalidate layout container container representation variable grid layout s value representation variable grid layout get get name + mode + f i x e d n u m r o w s mode ? f i x e d n u m r o w s f i x e d n u m o l u m n s mode ? f i x e d n u m o l u m n s u n k n o w n + mode + + size + size + hgap + hgap + vgap + vgap + take size into account + take size into account + distance border + distance border + which layout size m i n i m u m compute minimum layout size layout size m x i m u m compute maximum layout size layout size p r e f e r r e d compute prefer layout size dimension get layout size container parent layout size which parent get tree lock update parent ncomponent parent get component count h 0 w 0 r 0 i 0 r nrow r++ row height 0 0 ncol c++ i++ i ncomponent which m i n i m u m row height math max row height parent get component i get minimum size height m x i m u m row height math max row height parent get component i get maximum size height p r e f e r r e d row height math max row height parent get component i get prefer size height internal miss branch layout size + which h + row height 0 ncol c++ col width 0 r 0 r nrow r++ i r ncol + i ncomponent which m i n i m u m col width math max col width parent get component i get minimum size width m x i m u m col width math max col width parent get component i get maximum size width p r e f e r r e d col width math max col width parent get component i get prefer size width internal miss branch layout size + which w + col width inset inset parent get inset w + inset left + inset right + ncol 1 hgap + distance border left + distance border right h + inset top + inset bottom + nrow 1 vgap + distance border top + distance border bottom w m x v l u e w m x v l u e h m x v l u e h m x v l u e dimension w h update container container ncomponent container get component count old nrow nrow old ncol ncol mode f i x e d n u m r o w s nrow size ncol ncomponent + nrow 1 nrow ncol size nrow ncomponent + ncol 1 ncol old nrow nrow row height nrow take size into account minimum row height nrow maximum row height nrow old ncol ncol col width ncol take size into account minimum col width ncol maximum col width ncol space total size size take size into account nelement element size minimum element size maximum element size total size size take size into account grow total size size calculate size available redistribution size size total size grow ? 1 1 size 0 calculate amount element resize violate minimum maximum size their current cumulate size modifyable amount 0 size 0 i 0 i nelement i++ grow element size i maximum element size i || grow element size i minimum element size i modifyable amount++ size + element size i check bound all element are at their minimum maximum size resize all element 0 modifyable amount i 0 i nelement i++ size + element size i check bound modifyable amount nelement prevent an endles loop container get resize very small amount size 0 resize element size modifyable amount i 0 i nelement i++ size 0 check bound || check bound grow element size i maximum element size i || grow element size i minimum element size i element size i + grow ? 1 1 0 element size i element size i 0 size size addition 0 i 0 i nelement i++ modifyable size check bound ? grow ? maximum element size i element size i element size i minimum element size i m x v l u e element size i element size size size element size i element size modifyable size element size i + grow ? element size element size size addition + grow ? element size element size size element size element size i + grow ? modifyable size modifyable size size addition + grow ? modifyable size modifyable size size modifyable size 0 element size i element size i 0 size + size addition d size total size i 0 i nelement i++ element size i element size i d mode size hgap vgap take size into account inset distance border nrow 1 ncol 1 minimum row height minimum col width row height col width maximum row height maximum col width 