part bean shell script distribution documentation update may found at http www beanshell sun notice content are subject sun 1 0 may use except compliance available at http www sun com original bean shell initial developer original pat niemey create pat niemey are 2000 all right reserve g n u notice alternatively content may use g n u less l g p l which provision l g p l are applicable instead those above wish allow use your only l g p l allow other use your s p l indicate your decision delete provision above replace them notice other provision require l g p l delete provision above recipient may use your s p l l g p l patrick niemey pat pat net learning o reilly associate http www pat net pat bsh reflect name somewhat mislead cover both where there an initializ b s h dimension simple node base type num define dim num undefin dim length each define dimension value set eval since value come from expression we re eval d each time define dimension b s h dimension add define dimension num define dims++ add undefin dimension num undefin dims++ eval type call stack callstack interpreter interpreter eval interpreter d e b u g interpreter debug base type +type base type type eval callstack interpreter evaluate structure one two way an initializ evaluate fully construct also record dimension b evaluate record length each dimension structure dim maintain dimension eval call stack callstack interpreter interpreter eval simple node child simple node jjt get child 0 child initializ evaluate fill dimension initialize are alway fully define no undefin dimension worry about syntax us undefin dimension count e g 1 2 child b s h initializ base type eval internal eval err unknown base type callstack init value b s h initializ child eval base type num undefin dim callstack interpreter init value get actual dimension reflect get dimension define dimension actual dimension compare number dimension actually create number specify syntax us undefin one here define dimension length num undefin dim eval incompatible initializ allocation call + num undefin dims+ dimensional initializ + actual dimension + dimensional callstack fill define dimension length slice init value i 0 i define dimension length i++ define dimension i get length slice define dimension i 0 slice get slice 0 init value evaluate define dimension define dimension num define dim i 0 i num define dim i++ length simple node jjt get child i eval callstack interpreter define dimension i primitive length value e eval index + i + doe evaluate an callstack primitive v o 