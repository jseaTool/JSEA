part bean shell script distribution documentation update may found at http www beanshell sun notice content are subject sun 1 0 may use except compliance available at http www sun com original bean shell initial developer original pat niemey create pat niemey are 2000 all right reserve g n u notice alternatively content may use g n u less l g p l which provision l g p l are applicable instead those above wish allow use your only l g p l allow other use your s p l indicate your decision delete provision above replace them notice other provision require l g p l delete provision above recipient may use your s p l l g p l patrick niemey pat pat net learning o reilly associate http www pat net pat bsh specialize namespace block e g body statement block act like child namespace only type variable declare within block local scope untyp variable explicitly set via set block variable otherwise variable assignment include untyp variable usage act like part contain block p note essentially just delegate most it it parent set variable indirection very small we could probably fold functionality back into base name space special ha change few time so i d like leave abstraction now block name space name space block name space name space parent eval parent parent get name + block name space override standard namespace behavior make assignment happen our parent enclosing namespace unles variable ha already be assign here via type declaration through special set block variable use untyp p i e only allow type var declaration happen namespace type var are handle ordinary way local scope all untyp assignment are delegate enclosing context note may like 1 3 scop test could remove cannot when recurse we still need set variable our parent here set variable name value strict recurse eval we var name set var here block namespace set variable name value strict set var enclosing parent namespace get parent set variable name value strict recurse set an untyp variable block namespace block name space would normally delegate set parent type variable are naturally set locally use block argument set block variable name value eval set variable name value strict? we variable wa declare here type giving block local scope an untyp var wa explicitly set here via set block variable we var name variable contain key name fast i check get variable impl name eval e get actual block name space reference p normally reference block name space e g resolve parent namespace e g namespace contain statement howev when inside block name space need resolve thing relative we must use actual block s reference name smart enough handle using get block get interpreter get block interpreter declare interpreter get declare interpreter begin which simply delegate our parent enclosing scope recurs find near non block name space parent name space get parent name space parent get parent parent block name space parent get parent parent we need this? name space get non block parent name space parent get parent parent block name space block name space parent get non block parent parent get reference our parent s closure e g normally reference block name space e g resolve parent namespace e g namespace contain statement get block interpreter get interpreter declare interpreter get non block parent get declare interpreter our parent s get interpreter declare interpreter get non block parent get declare interpreter delegate our parent name get parent name delegate our parent name get parent name set name bsh eval get parent set name 