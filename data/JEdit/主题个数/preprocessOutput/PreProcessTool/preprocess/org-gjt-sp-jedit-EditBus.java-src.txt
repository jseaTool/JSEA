edit bus edit bus tab size 4 indent size 4 no tab collapse fold 1 1999 g n u 2 w i t h o u t n y w r r n t y m e r h n t b i l i t y f i t n e s s f o r p r t i u l r p u r p o s e g n u g n u 59 330 m 02111 1307 u s annotation reflect reflect invocation target list log thread utility j edit s global event notification mechanism p plugin register edit bus receive message reflect change application s state include change buffer view edit pane change set property maintain application closing application p edit bus maintain list request receive message when message sent using all register component receive turn subscribe edit bus must implement link e b component which define single link e b component handle message e b message p alternatively since j edit4 3pre19 edit bus component handler edit bus message are create annotating link e b handler annotation such expect single parameter an edit bus message desire type message match type it type unles annotation request exact type match being sent annotate call instead link e b component handle message e b message handler specific message type handler call p plugin core link e b plugin whose name end plugin identification purpose automatically add edit bus dur j edit s startup routine other example dockable window need receive notification buffer change must perform it own registration calling link add bus dur it initialization convenient register derive from j component would an j component add notify p message type sent j edit found link msg p plugin also send their own message send message edit bus calling link send e b message most plugin howev only concern themselve receive sending message e b component e b message john gellene p i documentation edit bus 24044 2015 09 03 13 34 54 since j edit 2 2pre6 edit bus e b handler annotation annotation use are consider edit bus message handler when register an using link add bus all tag annotation consider handler specific edit bus message p each expect single argument an some type derive from e b message inclusive when deliver an e b message bus search all handler match outgo message type p since j edit 4 4pre1 annotation also add extend edit plugin make plugin add bus automatically similarly how e b plugin work have implement e b component since j edit 4 3pre19 retention retention policy r u n t i m e target element type t y p e element type m e t h o d e b handler wheth message match exact type parameter instead compatible type exact add bus add component bus receive all message sent on bus comp component add add bus e b component comp add bus comp add bus add component bus annotate link e b handler annotation found component use edit bus message handler message match type sent on bus p component link e b component then link e b component handle message e b message call every message sent on bus comp component add since j edit 4 3pre19 add bus comp component add component comp remove from bus remove component from bus comp component remove remove from bus e b component comp remove from bus comp remove from bus remove component from bus comp component remove since 4 3pre19 remove from bus comp component remove component comp send send message all component on bus turn message deliver component w t thread wait until all handler receive message before p us link thread utility run dispatch thread now read note there possible deadlock p b n o t e b calling thread w t thread thread interrupt before call before completion handler howev interruption state set so caller detect interruption after call really need completion handler make sure call w t thread calling thread nev interrupt t care about completion handler recommend use link send async e b message instead p message message send e b message message runnable sender send message message event queue dispatch thread sender run thread utility run dispatch thread now sender send async schedule message sent on edit bus soon w t thread processing current event immediately i e before message sent message message since j edit 4 4pre1 send async e b message message event queue send message message member handler list component handler list t create instance edit bus dispatch dispatch e b message handler emh e b message msg emh handler emh comp emh handler emh comp msg emh comp e b component e b component emh comp handle message msg send impl send impl e b message message exact ? type message get type equal list e b message handler handler component get type handler e b message handler emh handler exact emh source emh source exact debug e b t i m e r start nano time dispatch emh message time nano time start time 1000000 log log log d e b u g edit bus emh comp + + time + n dispatch emh message invocation target t log log log e r r o r edit bus + sending message on edit bus log log log e r r o r edit bus t get cause throwable t log log log e r r o r edit bus + sending message on edit bus log log log e r r o r edit bus t type type get superclass exact e b message handler e b message handler e b message handler comp handler e b handler source comp comp handler handler source source comp handler e b handler source handler list special hash map ha some optimization use edit bus notably allow setting read only mode where modification map are postpone until map unlock handler list hash map ? list e b message handler list e b message handler safe get ? type list e b message handler lst get type lst lst link list e b message handler put type lst lst lock lock++ unlock lock lock 0 comp add add component comp comp remove remove component comp add clear remove clear remove component comp lock 0 remove add comp map entry ? list e b message handler entry entry set ? msg entry get key list e b message handler handler entry get value handler iterator e b message handler handler iterator ha next e b message handler emh next emh comp comp remove add component comp lock 0 add add comp m comp get get e b handler source m get annotation e b handler source m get parameter type length 1 log log log e r r o r edit bus invalid e b handler + m get name + + comp get get name + too many e b message assignable from 0 log log log e r r o r edit bus invalid parameter + 0 get name + + m get name + + comp get get name component safe get 0 add e b message handler comp m source component e b component then add handler backward compatibility comp e b component safe get e b message add e b message handler comp lock list add link list list remove link list send message send message runnable send message e b message message message message run log log log d e b u g edit bus message component lock send impl message component unlock e b message message 