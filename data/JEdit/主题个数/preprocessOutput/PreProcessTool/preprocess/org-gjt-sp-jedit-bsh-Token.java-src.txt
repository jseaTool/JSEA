generate edit line token 3 0 bsh ha be modify bean shell make token serializable regenerate please make change all bean shell modification are demarcate begin bean shell modification end bean shell modification describe input token stream begin bean shell modification serializablepublic token io serializable end bean shell modification serializable an describe kind token numbering determine parser table these number store constant kind begin line begin column describe position first character token end line end column describe position last character token begin line begin column end line end column image token image reference next regular non special token from input stream last token from input stream token ha read token beyond one field set only token also regular token otherwise below description content field token next field use access special token occur prior token after immediately precede regular non special token there are no such special token field set when there are than one such special token field refer last these special token which turn refer next previou special token through it special token field so on until first special token whose special token field next field special token refer other special token immediately follow an intervene regular token there no such token field token special token image image token howev want create subclass base on value kind simply add all those special example subclass token call token want create kind simlpy add someth like my parser constant token following statement then cast match token variable appropriate type use your lexical action token token kind kind token 